
==================== FINAL INTERFACE ====================
2017-12-05 08:35:31.5159473 UTC

interface server-0.1.0.1-A87ge1buU3B90FB70286D6:Datas [family instance module] 8002
  interface hash: c952dd38d83b0c77671df832eb371b25
  ABI hash: be98e238c7a6e3054e3142e3d6e93b2b
  export-list hash: 67e6caa11e5e8dd4dfd817c985152735
  orphan hash: f9ee38d6635c190656c3a171ed54e101
  flag hash: a0b52b650570cab21566cc572d17e5a2
  sig of: Nothing
  used TH splices: False
  where
exports:
  Datas.mkQRes
  Datas.mkSpot
  Datas.qres_setSpot
  Datas.radiusOfEarth
  Datas.DataPoints
  Datas.Distance
  Datas.Lat
  Datas.Long
  Datas.QRes{Datas.QRes aveLocation aveSpeed dataPoints maxSpeed minSpeed trips}
  Datas.Spot{Datas.Spot dist extremes index lat lng sources speed tripInfo}
  Datas.Trip{Datas.Trip coords end_time start_time}
  Datas.TripCount
module dependencies:
package dependencies: Win32-2.3.1.1@Win32-2.3.1.1
                      aeson-1.1.2.0@aeson-1.1.2.0-IYYaF432Hu8HQKp7no3ap1
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-m1TEyTenyr5nJN40TpHVj
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-IYYaF432Hu8HQKp7no3ap1:Data.Aeson 2c2ea416ea3f3f7ead4fbc7d22c60646
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-IYYaF432Hu8HQKp7no3ap1:Data.Aeson.Text ac2e4cc2a1fa817e783d39f0b8a4fb36
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-IYYaF432Hu8HQKp7no3ap1:Data.Aeson.Types.FromJSON c2c6218f8e81ad49905d0b1cdb32252e
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-IYYaF432Hu8HQKp7no3ap1:Data.Aeson.Types.ToJSON f36660aaef3410ced418ccb283e21448
import  -/  base-4.9.1.0:Data.List 7349774f430841349c90dfd1144aea97
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Generics 87e8d511f978e043d53db008cc403901
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Lazy a933f8de698ac656298f2d79daa92bb5
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy.IO 3684544ba74554e780a58302484f8353
c6dfc4bbed30f203a0fa0825ac829a83
  $fEqQRes :: GHC.Classes.Eq Datas.QRes
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.QRes Datas.$fEqQRes_$c== Datas.$fEqQRes_$c/= -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fEqQRes_$c/= :: Datas.QRes -> Datas.QRes -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Datas.QRes) (b :: Datas.QRes) ->
                 case Datas.$fEqQRes_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fEqQRes_$c== :: Datas.QRes -> Datas.QRes -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.QRes) (w1 :: Datas.QRes) ->
                 case w of ww { Datas.QRes ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { Datas.QRes ww8 ww9 ww10 ww11 ww12 ww13 ->
                 Datas.$w$c==
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13 } }) -}
07d2863127f3528fee4141577492e659
  $fEqSpot :: GHC.Classes.Eq Datas.Spot
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.Spot Datas.$fEqSpot_$c== Datas.$fEqSpot_$c/= -}
07d2863127f3528fee4141577492e659
  $fEqSpot_$c/= :: Datas.Spot -> Datas.Spot -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)><S(S(S)LLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Datas.Spot) (b :: Datas.Spot) ->
                 case Datas.$fEqSpot_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
07d2863127f3528fee4141577492e659
  $fEqSpot_$c== :: Datas.Spot -> Datas.Spot -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)><S(S(S)LLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.Spot) (w1 :: Datas.Spot) ->
                 case w of ww { Datas.Spot ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case ww1 of ww9 { GHC.Types.D# ww10 ->
                 case w1 of ww11 { Datas.Spot ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 case ww12 of ww20 { GHC.Types.D# ww21 ->
                 Datas.$w$c==1
                   ww10
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww21
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19 } } } }) -}
07d2863127f3528fee4141577492e659
  $fEqTrip :: GHC.Classes.Eq Datas.Trip
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.Trip Datas.$fEqTrip_$c== Datas.$fEqTrip_$c/= -}
07d2863127f3528fee4141577492e659
  $fEqTrip_$c/= :: Datas.Trip -> Datas.Trip -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Datas.Trip) (b :: Datas.Trip) ->
                 case Datas.$fEqTrip_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
07d2863127f3528fee4141577492e659
  $fEqTrip_$c== :: Datas.Trip -> Datas.Trip -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.Trip) (w1 :: Datas.Trip) ->
                 case w of ww { Datas.Trip ww1 ww2 ww3 ->
                 case w1 of ww4 { Datas.Trip ww5 ww6 ww7 ->
                 Datas.$w$c==2 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fFromJSONQRes :: Data.Aeson.Types.FromJSON.FromJSON Datas.QRes
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.QRes
                  Datas.$fFromJSONQRes_$cparseJSON
                  Datas.$fFromJSONQRes_$cparseJSONList -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fFromJSONQRes1 ::
    [Data.Aeson.Types.Internal.Parser Datas.QRes]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Datas.QRes] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
008e86061e39770794b833704125c2fe
  $fFromJSONQRes2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fFromJSONQRes_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Datas.QRes
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "QRes"
                                "Datas"
                                "server-0.1.0.1-A87ge1buU3B90FB70286D6"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "QRes" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                ((GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "maxSpeed")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "minSpeed")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (GHC.Base.Maybe GHC.Types.Double))
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "aveSpeed")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (GHC.Base.Maybe
                                                                             GHC.Types.Double))))
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "trips")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        (GHC.Base.Maybe Datas.TripCount))
                                                   GHC.Generics.:*: (GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "dataPoints")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (GHC.Base.Maybe
                                                                             Datas.DataPoints))
                                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                                        ('GHC.Generics.MetaSel
                                                                                           ('GHC.Base.Just
                                                                                              "aveLocation")
                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                           'GHC.Generics.DecidedLazy)
                                                                                        (GHC.Generics.Rec0
                                                                                           (GHC.Base.Maybe
                                                                                              (GHC.Types.Double,
                                                                                               GHC.Types.Double)))))))
                             GHC.Prim.Any)
                   = Datas.$w$dGFromJSON
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       x
                 } in
                 (\ @ (f6 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f6 r)
                    (ks :: Data.Aeson.Types.Internal.Success Datas.QRes f6 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (Datas.Rep_QRes[0])) <GHC.Prim.Any>_N))
                    @ f6
                    @ r
                    path
                    kf
                    (\ (a2 :: GHC.Generics.Rep Datas.QRes GHC.Prim.Any) ->
                     ks (Datas.$fFromJSONQRes_$cto @ GHC.Prim.Any a2)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Datas.QRes>_R))) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fFromJSONQRes_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Datas.QRes]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Datas.QRes]
                        Datas.$fFromJSONQRes2
                        wild
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Datas.$fFromJSONQRes1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds1 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Datas.$fFromJSONQRes_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Datas.QRes]>_R)) } }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fFromJSONQRes_$cto :: GHC.Generics.Rep Datas.QRes x -> Datas.QRes
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LS)S(LS)),1*U(1*U(U,1*U(U,U)),1*U(U,1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Datas.QRes x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Datas.Rep_QRes[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "QRes"
                                        "Datas"
                                        "server-0.1.0.1-A87ge1buU3B90FB70286D6"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "QRes" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "maxSpeed")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "minSpeed")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 (GHC.Base.Maybe GHC.Types.Double))
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "aveSpeed")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  (GHC.Base.Maybe
                                                                                     GHC.Types.Double))))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "trips")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                (GHC.Base.Maybe Datas.TripCount))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "dataPoints")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  (GHC.Base.Maybe
                                                                                     Datas.DataPoints))
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "aveLocation")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   (GHC.Base.Maybe
                                                                                                      (GHC.Types.Double,
                                                                                                       GHC.Types.Double))))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "QRes" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "maxSpeed")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1
                                            GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                                       GHC.Generics.:*: (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "minSpeed")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              (GHC.Base.Maybe GHC.Types.Double))
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "aveSpeed")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               (GHC.Base.Maybe
                                                                                  GHC.Types.Double))))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "trips")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (GHC.Base.Maybe Datas.TripCount))
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "dataPoints")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               (GHC.Base.Maybe
                                                                                  Datas.DataPoints))
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "aveLocation")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                (GHC.Base.Maybe
                                                                                                   (GHC.Types.Double,
                                                                                                    GHC.Types.Double)))))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds4 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 case ds2 of wild3 { GHC.Generics.:*: ds7 ds8 ->
                 case ds8 of wild4 { GHC.Generics.:*: ds9 ds10 ->
                 Datas.QRes
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "maxSpeed")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Types.Double>_R <x>_P))
                   ds5
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "minSpeed")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Types.Double>_R <x>_P))
                   ds6
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "aveSpeed")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Types.Double>_R <x>_P))
                   ds7
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "trips")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe Datas.TripCount)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.Maybe Datas.TripCount>_R <x>_P))
                   ds9
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "dataPoints")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe Datas.DataPoints)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.Maybe Datas.DataPoints>_R <x>_P))
                   ds10
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "aveLocation")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R
                                (GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double))>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)>_R
                             <x>_P)) } } } } }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fFromJSONQRes_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Datas.QRes]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
07d2863127f3528fee4141577492e659
  $fFromJSONSpot :: Data.Aeson.Types.FromJSON.FromJSON Datas.Spot
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.Spot
                  Datas.$fFromJSONSpot_$cparseJSON
                  Datas.$fFromJSONSpot_$cparseJSONList -}
07d2863127f3528fee4141577492e659
  $fFromJSONSpot1 ::
    [Data.Aeson.Types.Internal.Parser Datas.Spot]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Datas.Spot] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
0c87cfb68a2df6439ea7ac43f30790b4
  $fFromJSONSpot2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "Spot"
               "Datas"
               "server-0.1.0.1-A87ge1buU3B90FB70286D6"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Spot" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (((GHC.Generics.S1
                    ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "lat")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                    (GHC.Generics.Rec0 GHC.Types.Double)
                  GHC.Generics.:*: GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "speed")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Double))
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "lng")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Double)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "dist")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Double)))
                GHC.Generics.:*: ((GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "index")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "extremes")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (GHC.Base.Maybe
                                                            (GHC.Types.Double, GHC.Types.Double))))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "sources")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (GHC.Base.Maybe
                                                            (GHC.Types.Int, GHC.Types.Int)))
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "tripInfo")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (GHC.Base.Maybe
                                                                             (GHC.Types.Int,
                                                                              GHC.Types.Double)))))))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U> -}
07d2863127f3528fee4141577492e659
  $fFromJSONSpot_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Datas.Spot
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "Spot"
                                "Datas"
                                "server-0.1.0.1-A87ge1buU3B90FB70286D6"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Spot" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (((GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "lat")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Double)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "speed")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Double))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "lng")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Double)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just "dist")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Types.Double)))
                                 GHC.Generics.:*: ((GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "index")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "extremes")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (GHC.Base.Maybe
                                                                             (GHC.Types.Double,
                                                                              GHC.Types.Double))))
                                                   GHC.Generics.:*: (GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just "sources")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (GHC.Base.Maybe
                                                                             (GHC.Types.Int,
                                                                              GHC.Types.Int)))
                                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                                        ('GHC.Generics.MetaSel
                                                                                           ('GHC.Base.Just
                                                                                              "tripInfo")
                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                           'GHC.Generics.DecidedLazy)
                                                                                        (GHC.Generics.Rec0
                                                                                           (GHC.Base.Maybe
                                                                                              (GHC.Types.Int,
                                                                                               GHC.Types.Double)))))))
                             GHC.Prim.Any)
                   = Datas.$fFromJSONSpot2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f6 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f6 r)
                    (ks :: Data.Aeson.Types.Internal.Success Datas.Spot f6 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (Datas.Rep_Spot[0])) <GHC.Prim.Any>_N))
                    @ f6
                    @ r
                    path
                    kf
                    (\ (a2 :: GHC.Generics.Rep Datas.Spot GHC.Prim.Any) ->
                     ks (Datas.$fFromJSONSpot_$cto @ GHC.Prim.Any a2)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Datas.Spot>_R))) -}
07d2863127f3528fee4141577492e659
  $fFromJSONSpot_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Datas.Spot]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Datas.Spot]
                        Datas.$fFromJSONQRes2
                        wild
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Datas.$fFromJSONSpot1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds1 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Datas.$fFromJSONSpot_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Datas.Spot]>_R)) } }) -}
07d2863127f3528fee4141577492e659
  $fFromJSONSpot_$cto :: GHC.Generics.Rep Datas.Spot x -> Datas.Spot
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(SS)S(SS)),1*U(1*U(1*U(U,U),1*U(U,U)),1*U(1*U(U,U),1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Datas.Spot x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Datas.Rep_Spot[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Spot"
                                        "Datas"
                                        "server-0.1.0.1-A87ge1buU3B90FB70286D6"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Spot" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (((GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "lat")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "speed")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Types.Double))
                                          GHC.Generics.:*: (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "lng")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Types.Double)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "dist")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Types.Double)))
                                         GHC.Generics.:*: ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "index")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Types.Int)
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "extremes")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  (GHC.Base.Maybe
                                                                                     (GHC.Types.Double,
                                                                                      GHC.Types.Double))))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "sources")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  (GHC.Base.Maybe
                                                                                     (GHC.Types.Int,
                                                                                      GHC.Types.Int)))
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "tripInfo")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   (GHC.Base.Maybe
                                                                                                      (GHC.Types.Int,
                                                                                                       GHC.Types.Double))))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Spot" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <((GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "lat")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                                        GHC.Generics.:*: GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "speed")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R GHC.Types.Double))
                                       GHC.Generics.:*: (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "lng")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R GHC.Types.Double)
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "dist")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Types.Double)))
                                      GHC.Generics.:*: ((GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "index")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R GHC.Types.Int)
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "extremes")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               (GHC.Base.Maybe
                                                                                  (GHC.Types.Double,
                                                                                   GHC.Types.Double))))
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "sources")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               (GHC.Base.Maybe
                                                                                  (GHC.Types.Int,
                                                                                   GHC.Types.Int)))
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "tripInfo")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                (GHC.Base.Maybe
                                                                                                   (GHC.Types.Int,
                                                                                                    GHC.Types.Double)))))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds3 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 case ds4 of wild3 { GHC.Generics.:*: ds7 ds8 ->
                 case ds2 of wild4 { GHC.Generics.:*: ds9 ds10 ->
                 case ds9 of wild5 { GHC.Generics.:*: ds11 ds12 ->
                 case ds10 of wild6 { GHC.Generics.:*: ds13 ds14 ->
                 Datas.Spot
                   ds5
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "lat")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Double>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Types.Double>_R <x>_P))
                   ds6
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "speed")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Double>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Types.Double>_R <x>_P))
                   ds7
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "lng")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Double>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Types.Double>_R <x>_P))
                   ds8
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "dist")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Double>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Types.Double>_R <x>_P))
                   ds11
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "index")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                   ds12
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "extremes")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R
                                (GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double))>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)>_R
                             <x>_P))
                   ds13
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "sources")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R
                                (GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int))>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int)>_R
                             <x>_P))
                   ds14
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "tripInfo")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R
                                (GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double))>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double)>_R
                             <x>_P)) } } } } } } }) -}
07d2863127f3528fee4141577492e659
  $fFromJSONSpot_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Datas.Spot]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
07d2863127f3528fee4141577492e659
  $fFromJSONTrip :: Data.Aeson.Types.FromJSON.FromJSON Datas.Trip
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.Trip
                  Datas.$fFromJSONTrip_$cparseJSON
                  Datas.$fFromJSONTrip_$cparseJSONList -}
07d2863127f3528fee4141577492e659
  $fFromJSONTrip1 ::
    [Data.Aeson.Types.Internal.Parser Datas.Trip]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Datas.Trip] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
3d5ead25a4b680e470ffa3d7cb83243b
  $fFromJSONTrip10 :: GHC.Generics.R:SingSymbols "start_time"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "start_time"
                   Datas.$fFromJSONTrip11
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"start_time">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"start_time">_N))) -}
1ba4e35fe12343be66fc984acddc4011
  $fFromJSONTrip11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "start_time"#) -}
07d2863127f3528fee4141577492e659
  $fFromJSONTrip12 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [Datas.Spot] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a2
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a2)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [Datas.Spot]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Datas.$fFromJSONTrip_$s$fFromJSON[]1
                   @ a2
                   w3) -}
f17cea09dbd038e4df5f75cf093478f1
  $fFromJSONTrip13 :: GHC.Generics.SingI ('GHC.Base.Just "coords")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$fFromJSONTrip14
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "coords">_N) -}
82af577aaaa53c0f7438f98235191837
  $fFromJSONTrip14 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "coords")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "coords")
                   @ "coords"
                   @~ <'GHC.Base.Just "coords">_N
                   Datas.$fFromJSONTrip15
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"coords">_N)) -}
27660f5ad56dcda21c6e9f3013f2be95
  $fFromJSONTrip15 :: GHC.Generics.R:SingSymbols "coords"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "coords"
                   Datas.$fFromJSONTrip16
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"coords">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"coords">_N))) -}
6809f0d315573c84adb072d2398ac729
  $fFromJSONTrip16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "coords"#) -}
07d2863127f3528fee4141577492e659
  $fFromJSONTrip2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "Trip"
               "Datas"
               "server-0.1.0.1-A87ge1buU3B90FB70286D6"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Trip" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "coords")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 [Datas.Spot])
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "start_time")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "end_time")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a2
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a2)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "coords")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 [Datas.Spot]))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "start_time")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "end_time")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String))
                             a2)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "coords")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [Datas.Spot]))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "start_time")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "end_time")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))
                                 a2)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "coords")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 [Datas.Spot])
                                       a2)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "coords")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R [Datas.Spot])
                                Datas.$fFromJSONTrip_$s$fSelectorMetaMetaSel2
                                Datas.$fFromJSONTrip12
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [Datas.Spot]>_N))
                                @ a2
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            m2 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "start_time")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String)
                                       a2)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "start_time")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                Datas.$fFromJSONTrip_$s$fSelectorMetaMetaSel1
                                Datas.$fFromJSONTrip7
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a2
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "end_time")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a2)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "end_time")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                Datas.$fFromJSONTrip_$s$fSelectorMetaMetaSel
                                Datas.$fFromJSONTrip7
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a2
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "coords")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 [Datas.Spot]))
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "start_time")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "end_time")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 GHC.Base.String))
                                         a2)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "coords")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [Datas.Spot])
                                   a2>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a3 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "coords")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 [Datas.Spot])
                                         a2) ->
                              m2
                                `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "start_time")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a2>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a4 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "start_time")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                            a2) ->
                                 e `cast`
                                 (Data.Aeson.Types.Internal.N:Parser[0]
                                      <GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "end_time")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)
                                         a2>_R)
                                   @ f
                                   @ r
                                   path
                                   kf
                                   (\ (a5 :: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "end_time")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 GHC.Base.String)
                                               a2) ->
                                    ks
                                      (GHC.Generics.:*:
                                         @ (GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "coords")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 [Datas.Spot]))
                                         @ (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "start_time")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String)
                                            GHC.Generics.:*: GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "end_time")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0 GHC.Base.String))
                                         @ a2
                                         a3
                                         (GHC.Generics.:*:
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "start_time")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String))
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "end_time")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String))
                                            @ a2
                                            a4
                                            a5))))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "coords")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 [Datas.Spot]))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "start_time")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "end_time")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Base.String))
                                       a2>_R)) } } }
                 } in
                 (\ @ (f6 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f6 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "Trip"
                                   "Datas"
                                   "server-0.1.0.1-A87ge1buU3B90FB70286D6"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Trip" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "coords")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 [Datas.Spot])
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "start_time")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Base.String)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "end_time")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Base.String))))
                                a2)
                             f6
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "coords")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 [Datas.Spot]))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "start_time")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "end_time")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                          a2>_R)
                    @ f6
                    @ r
                    path
                    kf
                    (\ (a3 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "coords")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [Datas.Spot]))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "start_time")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "end_time")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                                a2) ->
                     ks
                       a3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "Trip" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "coords")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 [Datas.Spot])
                                       GHC.Generics.:*: (GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "start_time")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Base.String)
                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "end_time")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.Rec0
                                                                               GHC.Base.String))>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "Trip"
                                         "Datas"
                                         "server-0.1.0.1-A87ge1buU3B90FB70286D6"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Trip" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "coords")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 [Datas.Spot])
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "start_time")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 GHC.Base.String)
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "end_time")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  GHC.Base.String)))>_R)) <a2>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "Trip"
                                 "Datas"
                                 "server-0.1.0.1-A87ge1buU3B90FB70286D6"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Trip" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "coords")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [Datas.Spot])
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "start_time")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Base.String)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "end_time")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Base.String))))
                              a2>_R))) -}
e01951ebe4e3751600323abd531018a7
  $fFromJSONTrip3 :: GHC.Generics.SingI ('GHC.Base.Just "end_time")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$fFromJSONTrip4
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "end_time">_N) -}
99896eb42cba99d373c60271eae1e215
  $fFromJSONTrip4 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "end_time")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "end_time")
                   @ "end_time"
                   @~ <'GHC.Base.Just "end_time">_N
                   Datas.$fFromJSONTrip5
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"end_time">_N)) -}
b2b68726bb0eaf01ffa5c601a066488f
  $fFromJSONTrip5 :: GHC.Generics.R:SingSymbols "end_time"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "end_time"
                   Datas.$fFromJSONTrip6
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"end_time">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"end_time">_N))) -}
73d9617a782deccd707adddf3a869171
  $fFromJSONTrip6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "end_time"#) -}
8226cc032199b04b7dbc69f70a8b68d4
  $fFromJSONTrip7 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a2
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a2)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [GHC.Types.Char]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Datas.$fFromJSONTrip_$s$fFromJSON[]
                   @ a2
                   w3) -}
13a9c4b9d94c4a2dccb27d642689d36a
  $fFromJSONTrip8 :: GHC.Generics.SingI ('GHC.Base.Just "start_time")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$fFromJSONTrip9
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "start_time">_N) -}
9666d40346af1da4c1479246f4eaf30d
  $fFromJSONTrip9 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "start_time")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "start_time")
                   @ "start_time"
                   @~ <'GHC.Base.Just "start_time">_N
                   Datas.$fFromJSONTrip10
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"start_time">_N)) -}
07d2863127f3528fee4141577492e659
  $fFromJSONTrip_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Datas.Trip
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "Trip"
                                "Datas"
                                "server-0.1.0.1-A87ge1buU3B90FB70286D6"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Trip" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "coords")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [Datas.Spot])
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "start_time")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just "end_time")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         GHC.Base.String))))
                             GHC.Prim.Any)
                   = Datas.$fFromJSONTrip2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f6 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f6 r)
                    (ks :: Data.Aeson.Types.Internal.Success Datas.Trip f6 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (Datas.Rep_Trip[0])) <GHC.Prim.Any>_N))
                    @ f6
                    @ r
                    path
                    kf
                    (\ (a2 :: GHC.Generics.Rep Datas.Trip GHC.Prim.Any) ->
                     ks (Datas.$fFromJSONTrip_$cto @ GHC.Prim.Any a2)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Datas.Trip>_R))) -}
07d2863127f3528fee4141577492e659
  $fFromJSONTrip_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Datas.Trip]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Datas.Trip]
                        Datas.$fFromJSONQRes2
                        wild
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Datas.$fFromJSONTrip1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds1 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Datas.$fFromJSONTrip_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Datas.Trip]>_R)) } }) -}
07d2863127f3528fee4141577492e659
  $fFromJSONTrip_$cto :: GHC.Generics.Rep Datas.Trip x -> Datas.Trip
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Datas.Trip x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Datas.Rep_Trip[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Trip"
                                        "Datas"
                                        "server-0.1.0.1-A87ge1buU3B90FB70286D6"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Trip" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "coords")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R [Datas.Spot])
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "start_time")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Base.String)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "end_time")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Base.String)))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Trip" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "coords")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R [Datas.Spot])
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "start_time")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Base.String)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "end_time")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              GHC.Base.String))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds2 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 Datas.Trip
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "coords")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [Datas.Spot]>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <[Datas.Spot]>_R <x>_P))
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "start_time")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "end_time")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) } }) -}
3a8a83afd613a2ebc00ed654dedb8779
  $fFromJSONTrip_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [GHC.Types.Char]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar) -}
07d2863127f3528fee4141577492e659
  $fFromJSONTrip_$s$fFromJSON[]1 ::
    Data.Aeson.Types.FromJSON.FromJSON [Datas.Spot]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Datas.Spot]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ Datas.Spot
                     Datas.$fFromJSONSpot)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ Datas.Spot
                     Datas.$fFromJSONSpot) -}
d77f8da677efd2c4776e2b5488dae938
  $fFromJSONTrip_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "end_time")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "end_time")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$fFromJSONTrip_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "end_time")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$fFromJSONTrip3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "end_time")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$fFromJSONTrip3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "end_time")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$fFromJSONTrip3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
d04237b73ab221beb81bb9cbc710fd94
  $fFromJSONTrip_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "start_time")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "start_time")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$fFromJSONTrip_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "start_time")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$fFromJSONTrip8
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "start_time")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$fFromJSONTrip8
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "start_time")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$fFromJSONTrip8
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
268d2b510b4b62de26adea4da7a1aeb2
  $fFromJSONTrip_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "coords")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "coords")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$fFromJSONTrip_$s$fSelectorMetaMetaSel_$cselName2
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "coords")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$fFromJSONTrip13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "coords")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$fFromJSONTrip13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "coords")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$fFromJSONTrip13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
2b84f56ce897895b6f7ef1a7c77017c4
  $fFromJSONTrip_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "end_time")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "end_time")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$fFromJSONTrip6) -}
09e88b3040b11a594f6d6206d98ef283
  $fFromJSONTrip_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "start_time")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "start_time")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$fFromJSONTrip11) -}
8a511a2161c3db4b21022c7586c5d0c7
  $fFromJSONTrip_$s$fSelectorMetaMetaSel_$cselName2 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "coords")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "coords")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$fFromJSONTrip16) -}
07d2863127f3528fee4141577492e659
  $fFromJSONTrip_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Datas.Trip]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fGenericQRes :: GHC.Generics.Generic Datas.QRes
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.QRes
                  Datas.$fGenericQRes_$cfrom
                  Datas.$fFromJSONQRes_$cto -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fGenericQRes1 ::
    Datas.QRes
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "QRes" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "maxSpeed")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
           GHC.Generics.:*: (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "minSpeed")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "aveSpeed")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (GHC.Base.Maybe GHC.Types.Double))))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "trips")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe Datas.TripCount))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "dataPoints")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R (GHC.Base.Maybe Datas.DataPoints))
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "aveLocation")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    (GHC.Base.Maybe
                                                                       (GHC.Types.Double,
                                                                        GHC.Types.Double))))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Datas.QRes) ->
                 case x1 of wild { Datas.QRes g1 g2 g3 g4 g5 g6 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "maxSpeed")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "minSpeed")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "aveSpeed")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (GHC.Base.Maybe GHC.Types.Double))))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "trips")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe Datas.TripCount))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "dataPoints")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R (GHC.Base.Maybe Datas.DataPoints))
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "aveLocation")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (GHC.Base.Maybe
                                                                  (GHC.Types.Double,
                                                                   GHC.Types.Double)))))
                    @ x
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "maxSpeed")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "minSpeed")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "aveSpeed")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Types.Double>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "maxSpeed")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         (GHC.Base.Maybe GHC.Types.Double)>_R) <x>_N))
                       (GHC.Generics.:*:
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "minSpeed")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "aveSpeed")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double)))
                          @ x
                          g2
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P
                                         <GHC.Base.Maybe GHC.Types.Double>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "minSpeed")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R
                                            (GHC.Base.Maybe GHC.Types.Double)>_R) <x>_N))
                          g3
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P
                                         <GHC.Base.Maybe GHC.Types.Double>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "aveSpeed")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R
                                            (GHC.Base.Maybe GHC.Types.Double)>_R) <x>_N))))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "trips")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe Datas.TripCount)))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "dataPoints")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe Datas.DataPoints))
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "aveLocation")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                (GHC.Base.Maybe
                                                   (GHC.Types.Double, GHC.Types.Double))))
                       @ x
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.Maybe Datas.TripCount>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "trips")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R (GHC.Base.Maybe Datas.TripCount)>_R) <x>_N))
                       (GHC.Generics.:*:
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "dataPoints")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe Datas.DataPoints)))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "aveLocation")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double))))
                          @ x
                          g5
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P
                                         <GHC.Base.Maybe Datas.DataPoints>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "dataPoints")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R
                                            (GHC.Base.Maybe Datas.DataPoints)>_R) <x>_N))
                          g6
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P
                                         <GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "aveLocation")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R
                                            (GHC.Base.Maybe
                                               (GHC.Types.Double, GHC.Types.Double))>_R) <x>_N)))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "QRes" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "maxSpeed")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "minSpeed")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (GHC.Base.Maybe GHC.Types.Double))
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "aveSpeed")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (GHC.Base.Maybe
                                                                        GHC.Types.Double))))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "trips")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R (GHC.Base.Maybe Datas.TripCount))
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "dataPoints")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (GHC.Base.Maybe
                                                                        Datas.DataPoints))
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "aveLocation")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      (GHC.Base.Maybe
                                                                                         (GHC.Types.Double,
                                                                                          GHC.Types.Double)))))>_R) <x>_N) }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fGenericQRes_$cfrom :: Datas.QRes -> GHC.Generics.Rep Datas.QRes x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Datas.$fGenericQRes1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Datas.QRes>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "QRes"
                                       "Datas"
                                       "server-0.1.0.1-A87ge1buU3B90FB70286D6"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "QRes" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       ((GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "maxSpeed")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R (GHC.Base.Maybe GHC.Types.Double))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "minSpeed")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                (GHC.Base.Maybe GHC.Types.Double))
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "aveSpeed")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 (GHC.Base.Maybe
                                                                                    GHC.Types.Double))))
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "trips")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (GHC.Base.Maybe Datas.TripCount))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "dataPoints")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 (GHC.Base.Maybe
                                                                                    Datas.DataPoints))
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "aveLocation")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  (GHC.Base.Maybe
                                                                                                     (GHC.Types.Double,
                                                                                                      GHC.Types.Double))))))>_R))
                          (Sub (Sym (Datas.Rep_QRes[0]))) <x>_N) -}
07d2863127f3528fee4141577492e659
  $fGenericSpot :: GHC.Generics.Generic Datas.Spot
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.Spot
                  Datas.$fGenericSpot_$cfrom
                  Datas.$fFromJSONSpot_$cto -}
07d2863127f3528fee4141577492e659
  $fGenericSpot1 ::
    Datas.Spot
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Spot" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (((GHC.Generics.M1
              GHC.Generics.S
              ('GHC.Generics.MetaSel
                 ('GHC.Base.Just "lat")
                 'GHC.Generics.NoSourceUnpackedness
                 'GHC.Generics.NoSourceStrictness
                 'GHC.Generics.DecidedLazy)
              (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
            GHC.Generics.:*: GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "speed")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double))
           GHC.Generics.:*: (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "lng")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "dist")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)))
          GHC.Generics.:*: ((GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "index")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "extremes")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (GHC.Base.Maybe
                                                      (GHC.Types.Double, GHC.Types.Double))))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "sources")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R
                                                   (GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int)))
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "tripInfo")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    (GHC.Base.Maybe
                                                                       (GHC.Types.Int,
                                                                        GHC.Types.Double))))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Datas.Spot) ->
                 case x1 of wild { Datas.Spot g1 g2 g3 g4 g5 g6 g7 g8 ->
                 (GHC.Generics.:*:
                    @ ((GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "lat")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                        GHC.Generics.:*: GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "speed")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "lng")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "dist")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Types.Double)))
                    @ ((GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "index")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                        GHC.Generics.:*: GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "extremes")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              (GHC.Base.Maybe
                                                 (GHC.Types.Double, GHC.Types.Double))))
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "sources")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R
                                              (GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int)))
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "tripInfo")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (GHC.Base.Maybe
                                                                  (GHC.Types.Int,
                                                                   GHC.Types.Double)))))
                    @ x
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "lat")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "speed")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "lng")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "dist")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double))
                       @ x
                       (GHC.Generics.:*:
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "lat")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "speed")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double))
                          @ x
                          g1
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P <GHC.Types.Double>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "lat")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Types.Double>_R) <x>_N))
                          g2
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P <GHC.Types.Double>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "speed")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Types.Double>_R) <x>_N)))
                       (GHC.Generics.:*:
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "lng")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "dist")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double))
                          @ x
                          g3
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P <GHC.Types.Double>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "lng")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Types.Double>_R) <x>_N))
                          g4
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P <GHC.Types.Double>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "dist")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Types.Double>_R) <x>_N))))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "index")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "extremes")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                (GHC.Base.Maybe
                                                   (GHC.Types.Double, GHC.Types.Double))))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "sources")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1
                               GHC.Generics.R (GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int)))
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "tripInfo")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R
                                                (GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double))))
                       @ x
                       (GHC.Generics.:*:
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "index")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "extremes")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double))))
                          @ x
                          g5
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "index")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                          g6
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P
                                         <GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "extremes")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R
                                            (GHC.Base.Maybe
                                               (GHC.Types.Double, GHC.Types.Double))>_R) <x>_N)))
                       (GHC.Generics.:*:
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "sources")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R (GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int))))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tripInfo")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1
                                  GHC.Generics.R
                                  (GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double))))
                          @ x
                          g7
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P
                                         <GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int)>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "sources")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R
                                            (GHC.Base.Maybe
                                               (GHC.Types.Int, GHC.Types.Int))>_R) <x>_N))
                          g8
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P
                                         <GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double)>_R
                                         <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "tripInfo")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R
                                            (GHC.Base.Maybe
                                               (GHC.Types.Int, GHC.Types.Double))>_R) <x>_N)))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Spot" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <((GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "lat")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "speed")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double))
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "lng")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "dist")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Types.Double)))
                            GHC.Generics.:*: ((GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "index")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "extremes")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (GHC.Base.Maybe
                                                                        (GHC.Types.Double,
                                                                         GHC.Types.Double))))
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "sources")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     (GHC.Base.Maybe
                                                                        (GHC.Types.Int,
                                                                         GHC.Types.Int)))
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "tripInfo")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      (GHC.Base.Maybe
                                                                                         (GHC.Types.Int,
                                                                                          GHC.Types.Double)))))>_R) <x>_N) }) -}
07d2863127f3528fee4141577492e659
  $fGenericSpot_$cfrom :: Datas.Spot -> GHC.Generics.Rep Datas.Spot x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Datas.$fGenericSpot1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Datas.Spot>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Spot"
                                       "Datas"
                                       "server-0.1.0.1-A87ge1buU3B90FB70286D6"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Spot" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "lat")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "speed")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Double))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "lng")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Double)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "dist")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Types.Double)))
                                        GHC.Generics.:*: ((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "index")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Int)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "extremes")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 (GHC.Base.Maybe
                                                                                    (GHC.Types.Double,
                                                                                     GHC.Types.Double))))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "sources")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 (GHC.Base.Maybe
                                                                                    (GHC.Types.Int,
                                                                                     GHC.Types.Int)))
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "tripInfo")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  (GHC.Base.Maybe
                                                                                                     (GHC.Types.Int,
                                                                                                      GHC.Types.Double))))))>_R))
                          (Sub (Sym (Datas.Rep_Spot[0]))) <x>_N) -}
07d2863127f3528fee4141577492e659
  $fGenericTrip :: GHC.Generics.Generic Datas.Trip
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.Trip
                  Datas.$fGenericTrip_$cfrom
                  Datas.$fFromJSONTrip_$cto -}
07d2863127f3528fee4141577492e659
  $fGenericTrip1 ::
    Datas.Trip
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Trip" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "coords")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R [Datas.Spot])
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "start_time")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "end_time")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Datas.Trip) ->
                 case x1 of wild { Datas.Trip g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "coords")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R [Datas.Spot]))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "start_time")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "end_time")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <[Datas.Spot]>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "coords")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R [Datas.Spot]>_R) <x>_N))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "start_time")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "end_time")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ x
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "start_time")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "end_time")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Trip" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "coords")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R [Datas.Spot])
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "start_time")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "end_time")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    GHC.Base.String))>_R) <x>_N) }) -}
07d2863127f3528fee4141577492e659
  $fGenericTrip_$cfrom :: Datas.Trip -> GHC.Generics.Rep Datas.Trip x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Datas.$fGenericTrip1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Datas.Trip>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Trip"
                                       "Datas"
                                       "server-0.1.0.1-A87ge1buU3B90FB70286D6"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Trip" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "coords")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R [Datas.Spot])
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "start_time")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String)
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Base.Just
                                                                                   "end_time")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                GHC.Base.String)))>_R))
                          (Sub (Sym (Datas.Rep_Trip[0]))) <x>_N) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fOrdQRes :: GHC.Classes.Ord Datas.QRes
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.QRes
                  Datas.$fEqQRes
                  Datas.$fOrdQRes_$ccompare
                  Datas.$fOrdQRes_$c<
                  Datas.$fOrdQRes_$c<=
                  Datas.$fOrdQRes_$c>
                  Datas.$fOrdQRes_$c>=
                  Datas.$fOrdQRes_$cmax
                  Datas.$fOrdQRes_$cmin -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fOrdQRes_$c< :: Datas.QRes -> Datas.QRes -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.QRes) (w1 :: Datas.QRes) ->
                 case w of ww { Datas.QRes ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { Datas.QRes ww8 ww9 ww10 ww11 ww12 ww13 ->
                 Datas.$w$c<
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13 } }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fOrdQRes_$c<= :: Datas.QRes -> Datas.QRes -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.QRes) (w1 :: Datas.QRes) ->
                 case w of ww { Datas.QRes ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { Datas.QRes ww8 ww9 ww10 ww11 ww12 ww13 ->
                 Datas.$w$c<=
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13 } }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fOrdQRes_$c> :: Datas.QRes -> Datas.QRes -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.QRes) (w1 :: Datas.QRes) ->
                 case w of ww { Datas.QRes ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { Datas.QRes ww8 ww9 ww10 ww11 ww12 ww13 ->
                 Datas.$w$c>
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13 } }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fOrdQRes_$c>= :: Datas.QRes -> Datas.QRes -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.QRes) (w1 :: Datas.QRes) ->
                 case w of ww { Datas.QRes ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { Datas.QRes ww8 ww9 ww10 ww11 ww12 ww13 ->
                 Datas.$w$c>=
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13 } }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fOrdQRes_$ccompare ::
    Datas.QRes -> Datas.QRes -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.QRes) (w1 :: Datas.QRes) ->
                 case w of ww { Datas.QRes ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { Datas.QRes ww8 ww9 ww10 ww11 ww12 ww13 ->
                 Datas.$w$ccompare
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13 } }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fOrdQRes_$cmax :: Datas.QRes -> Datas.QRes -> Datas.QRes
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),U(U,U,U,U,U,U)><S(SLLLLL),U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Datas.QRes) (y :: Datas.QRes) ->
                 case Datas.$fOrdQRes_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fOrdQRes_$cmin :: Datas.QRes -> Datas.QRes -> Datas.QRes
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),U(U,U,U,U,U,U)><S(SLLLLL),U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Datas.QRes) (y :: Datas.QRes) ->
                 case Datas.$fOrdQRes_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
07d2863127f3528fee4141577492e659
  $fOrdSpot :: GHC.Classes.Ord Datas.Spot
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.Spot
                  Datas.$fEqSpot
                  Datas.$fOrdSpot_$ccompare
                  Datas.$fOrdSpot_$c<
                  Datas.$fOrdSpot_$c<=
                  Datas.$fOrdSpot_$c>
                  Datas.$fOrdSpot_$c>=
                  Datas.$fOrdSpot_$cmax
                  Datas.$fOrdSpot_$cmin -}
07d2863127f3528fee4141577492e659
  $fOrdSpot_$c< :: Datas.Spot -> Datas.Spot -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLS),1*U(1*U(U),A,1*U(U),A,1*U(U),A,A,1*U)><S(LLLLLLLS),1*U(1*U(U),A,1*U(U),A,1*U(U),A,A,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Datas.Spot) (y :: Datas.Spot) ->
                 case Datas.$fOrdSpot_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
07d2863127f3528fee4141577492e659
  $fOrdSpot_$c<= :: Datas.Spot -> Datas.Spot -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLS),1*U(1*U(U),A,1*U(U),A,1*U(U),A,A,1*U)><S(LLLLLLLS),1*U(1*U(U),A,1*U(U),A,1*U(U),A,A,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Datas.Spot) (y :: Datas.Spot) ->
                 case Datas.$fOrdSpot_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
07d2863127f3528fee4141577492e659
  $fOrdSpot_$c> :: Datas.Spot -> Datas.Spot -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLS),1*U(1*U(U),A,1*U(U),A,1*U(U),A,A,1*U)><S(LLLLLLLS),1*U(1*U(U),A,1*U(U),A,1*U(U),A,A,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Datas.Spot) (y :: Datas.Spot) ->
                 case Datas.$fOrdSpot_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
07d2863127f3528fee4141577492e659
  $fOrdSpot_$c>= :: Datas.Spot -> Datas.Spot -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLS),1*U(1*U(U),A,1*U(U),A,1*U(U),A,A,1*U)><S(LLLLLLLS),1*U(1*U(U),A,1*U(U),A,1*U(U),A,A,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Datas.Spot) (y :: Datas.Spot) ->
                 case Datas.$fOrdSpot_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
07d2863127f3528fee4141577492e659
  $fOrdSpot_$ccompare ::
    Datas.Spot -> Datas.Spot -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLS),1*U(1*U(U),A,1*U(U),A,1*U(U),A,A,1*U)><S(LLLLLLLS),1*U(1*U(U),A,1*U(U),A,1*U(U),A,A,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.Spot) (w1 :: Datas.Spot) ->
                 case w of ww { Datas.Spot ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case w1 of ww9 { Datas.Spot ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 Datas.$w$ccompare1 ww1 ww3 ww5 ww8 ww10 ww12 ww14 ww17 } }) -}
07d2863127f3528fee4141577492e659
  $fOrdSpot_$cmax :: Datas.Spot -> Datas.Spot -> Datas.Spot
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLS),U(U(U),U,U(U),U,U(U),U,U,U)><S(LLLLLLLS),U(U(U),U,U(U),U,U(U),U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Datas.Spot) (y :: Datas.Spot) ->
                 case Datas.$fOrdSpot_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
07d2863127f3528fee4141577492e659
  $fOrdSpot_$cmin :: Datas.Spot -> Datas.Spot -> Datas.Spot
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLS),U(U(U),U,U(U),U,U(U),U,U,U)><S(LLLLLLLS),U(U(U),U,U(U),U,U(U),U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Datas.Spot) (y :: Datas.Spot) ->
                 case Datas.$fOrdSpot_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
07d2863127f3528fee4141577492e659
  $fOrdTrip :: GHC.Classes.Ord Datas.Trip
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.Trip
                  Datas.$fEqTrip
                  Datas.$fOrdTrip_$ccompare
                  Datas.$fOrdTrip_$c<
                  Datas.$fOrdTrip_$c<=
                  Datas.$fOrdTrip_$c>
                  Datas.$fOrdTrip_$c>=
                  Datas.$fOrdTrip_$cmax
                  Datas.$fOrdTrip_$cmin -}
07d2863127f3528fee4141577492e659
  $fOrdTrip_$c< :: Datas.Trip -> Datas.Trip -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.Trip) (w1 :: Datas.Trip) ->
                 case w of ww { Datas.Trip ww1 ww2 ww3 ->
                 case w1 of ww4 { Datas.Trip ww5 ww6 ww7 ->
                 Datas.$w$c<1 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
07d2863127f3528fee4141577492e659
  $fOrdTrip_$c<= :: Datas.Trip -> Datas.Trip -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.Trip) (w1 :: Datas.Trip) ->
                 case w of ww { Datas.Trip ww1 ww2 ww3 ->
                 case w1 of ww4 { Datas.Trip ww5 ww6 ww7 ->
                 Datas.$w$c<=1 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
07d2863127f3528fee4141577492e659
  $fOrdTrip_$c> :: Datas.Trip -> Datas.Trip -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.Trip) (w1 :: Datas.Trip) ->
                 case w of ww { Datas.Trip ww1 ww2 ww3 ->
                 case w1 of ww4 { Datas.Trip ww5 ww6 ww7 ->
                 Datas.$w$c>1 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
07d2863127f3528fee4141577492e659
  $fOrdTrip_$c>= :: Datas.Trip -> Datas.Trip -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.Trip) (w1 :: Datas.Trip) ->
                 case w of ww { Datas.Trip ww1 ww2 ww3 ->
                 case w1 of ww4 { Datas.Trip ww5 ww6 ww7 ->
                 Datas.$w$c>=1 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
07d2863127f3528fee4141577492e659
  $fOrdTrip_$ccompare ::
    Datas.Trip -> Datas.Trip -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Datas.Trip) (w1 :: Datas.Trip) ->
                 case w of ww { Datas.Trip ww1 ww2 ww3 ->
                 case w1 of ww4 { Datas.Trip ww5 ww6 ww7 ->
                 Datas.$w$ccompare2 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
07d2863127f3528fee4141577492e659
  $fOrdTrip_$cmax :: Datas.Trip -> Datas.Trip -> Datas.Trip
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),U(U,U,U)><S(SLL),U(U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Datas.Trip) (y :: Datas.Trip) ->
                 case Datas.$fOrdTrip_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
07d2863127f3528fee4141577492e659
  $fOrdTrip_$cmin :: Datas.Trip -> Datas.Trip -> Datas.Trip
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),U(U,U,U)><S(SLL),U(U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Datas.Trip) (y :: Datas.Trip) ->
                 case Datas.$fOrdTrip_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fShowQRes :: GHC.Show.Show Datas.QRes
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.QRes
                  Datas.$fShowQRes_$cshowsPrec
                  Datas.$fShowQRes_$cshow
                  Datas.$fShowQRes_$cshowList -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fShowQRes1 :: Datas.QRes -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Datas.QRes) ->
                 case w of ww { Datas.QRes ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Datas.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 ww5 ww6 }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fShowQRes_$cshow :: Datas.QRes -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Datas.QRes) ->
                 Datas.$fShowQRes_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fShowQRes_$cshowList :: [Datas.QRes] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Datas.QRes Datas.$fShowQRes1) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fShowQRes_$cshowsPrec ::
    GHC.Types.Int -> Datas.QRes -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Datas.QRes) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Datas.QRes ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Datas.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 ww7 ww8 } }) -}
07d2863127f3528fee4141577492e659
  $fShowSpot :: GHC.Show.Show Datas.Spot
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.Spot
                  Datas.$fShowSpot_$cshowsPrec
                  Datas.$fShowSpot_$cshow
                  Datas.$fShowSpot_$cshowList -}
07d2863127f3528fee4141577492e659
  $fShowSpot1 :: Datas.Spot -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Datas.Spot) ->
                 case w of ww { Datas.Spot ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Datas.$w$cshowsPrec1 0# ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 }) -}
07d2863127f3528fee4141577492e659
  $fShowSpot_$cshow :: Datas.Spot -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),U(U),1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Datas.Spot) ->
                 Datas.$fShowSpot_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
07d2863127f3528fee4141577492e659
  $fShowSpot_$cshowList :: [Datas.Spot] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Datas.Spot Datas.$fShowSpot1) -}
07d2863127f3528fee4141577492e659
  $fShowSpot_$cshowsPrec ::
    GHC.Types.Int -> Datas.Spot -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),U(U),1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Datas.Spot) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Datas.Spot ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 Datas.$w$cshowsPrec1 ww1 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 } }) -}
07d2863127f3528fee4141577492e659
  $fShowTrip :: GHC.Show.Show Datas.Trip
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.Trip
                  Datas.$fShowTrip_$cshowsPrec
                  Datas.$fShowTrip_$cshow
                  Datas.$fShowTrip_$cshowList -}
07d2863127f3528fee4141577492e659
  $fShowTrip1 :: Datas.Trip -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Datas.Trip) (w1 :: GHC.Base.String) ->
                 case w of ww { Datas.Trip ww1 ww2 ww3 ->
                 Datas.$w$cshowsPrec2 0# ww1 ww2 ww3 w1 }) -}
07d2863127f3528fee4141577492e659
  $fShowTrip_$cshow :: Datas.Trip -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Datas.Trip) ->
                 Datas.$fShowTrip_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
07d2863127f3528fee4141577492e659
  $fShowTrip_$cshowList :: [Datas.Trip] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Datas.Trip Datas.$fShowTrip1) -}
07d2863127f3528fee4141577492e659
  $fShowTrip_$cshowsPrec ::
    GHC.Types.Int -> Datas.Trip -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Datas.Trip)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Datas.Trip ww3 ww4 ww5 ->
                 Datas.$w$cshowsPrec2 ww1 ww3 ww4 ww5 w2 } }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fToJSONQRes :: Data.Aeson.Types.ToJSON.ToJSON Datas.QRes
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.QRes
                  Datas.$fToJSONQRes_$ctoJSON
                  Datas.$fToJSONQRes_$ctoEncoding
                  Datas.$fToJSONQRes_$ctoJSONList
                  Datas.$fToJSONQRes_$ctoEncodingList -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fToJSONQRes1 ::
    Datas.QRes
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U)>m1,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Datas.QRes) ->
                 case w of ww { Datas.QRes ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case Datas.$w$ctoJSON ww1 ww2 ww3 ww4 ww5 ww6 of ww7 { Unit# ww8 ->
                 (Data.Aeson.Types.Internal.Object ww8)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
7747ca5be4940f193aef309f0e2d5619
  $fToJSONQRes10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "trips"#) -}
5f1d788514f6f73473803f8d83653aac
  $fToJSONQRes11 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Datas.$fToJSONQRes12 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
253c2b0a242bc559e272390b2975e0fa
  $fToJSONQRes12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.ToJSON.$wouter3
                   ipv1
                   4#
                   Datas.$fToJSONQRes13
                   0#
                   ipv }) -}
1cdf688f4e21bcdbdaa6cea9d258f41f
  $fToJSONQRes13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "aveSpeed"#) -}
1e8520e0429b15bac999a86ee6143ace
  $fToJSONQRes14 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Datas.$fToJSONQRes15 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
4f0cdddd6928a918687c46abb3a17f5c
  $fToJSONQRes15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.ToJSON.$wouter3
                   ipv1
                   4#
                   Datas.$fToJSONQRes16
                   0#
                   ipv }) -}
f6151323dd1007909e4c3d06b7f9a966
  $fToJSONQRes16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "minSpeed"#) -}
991e34a78702ae7344722e98469b7d91
  $fToJSONQRes17 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Datas.$fToJSONQRes18 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
c0f76eef4892ff2fdbfc2bf0efd453c8
  $fToJSONQRes18 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.ToJSON.$wouter3
                   ipv1
                   4#
                   Datas.$fToJSONQRes19
                   0#
                   ipv }) -}
43c8636ce750788d27b20cc4bdfa01ed
  $fToJSONQRes19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "maxSpeed"#) -}
8fd31d4fe5e75e633a5ff383b3c27ff2
  $fToJSONQRes2 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Datas.$fToJSONQRes3 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
21fabc5ade1ccbdb8625947003bc30e2
  $fToJSONQRes3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.ToJSON.$wouter3
                   ipv1
                   4#
                   Datas.$fToJSONQRes4
                   0#
                   ipv }) -}
4bf55d132384a38e82b6bfa9bd3e2357
  $fToJSONQRes4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "aveLocation"#) -}
59c7cf5b80aa880e8c38e2ddd8f1982c
  $fToJSONQRes5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Datas.$fToJSONQRes6 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
a9ac2569960e1eb88a8500f95e04d92e
  $fToJSONQRes6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.ToJSON.$wouter3
                   ipv1
                   4#
                   Datas.$fToJSONQRes7
                   0#
                   ipv }) -}
02607a9fb8158c719e56aa607677acc5
  $fToJSONQRes7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "dataPoints"#) -}
f08fc085113884e4e848cd6f018d241b
  $fToJSONQRes8 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Datas.$fToJSONQRes9 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
1833b616ba9ca42c7bb924316ad988d0
  $fToJSONQRes9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.ToJSON.$wouter3
                   ipv1
                   4#
                   Datas.$fToJSONQRes10
                   0#
                   ipv }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fToJSONQRes_$ctoEncoding ::
    Datas.QRes -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Datas.QRes) ->
                 Data.Aeson.Encoding.Internal.value
                   (Datas.$fToJSONQRes_$ctoJSON eta)) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fToJSONQRes_$ctoEncodingList ::
    [Datas.QRes] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datas.QRes]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Datas.$fToJSONQRes_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Datas.QRes
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Datas.QRes)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Datas.$fToJSONQRes_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Datas.QRes>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fToJSONQRes_$ctoJSON ::
    Datas.QRes -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U)>m1,
     Unfolding: InlineRule (0, True, True)
                Datas.$fToJSONQRes1
                  `cast`
                (<Datas.QRes>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
c6dfc4bbed30f203a0fa0825ac829a83
  $fToJSONQRes_$ctoJSONList ::
    [Datas.QRes] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datas.QRes]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Datas.QRes
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Datas.QRes
                                       c
                                       Datas.$fToJSONQRes_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
07d2863127f3528fee4141577492e659
  $fToJSONSpot :: Data.Aeson.Types.ToJSON.ToJSON Datas.Spot
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.Spot
                  Datas.$fToJSONSpot_$ctoJSON
                  Datas.$fToJSONSpot_$ctoEncoding
                  Datas.$fToJSONSpot_$ctoJSONList
                  Datas.$fToJSONSpot_$ctoEncodingList -}
07d2863127f3528fee4141577492e659
  $fToJSONSpot1 ::
    Datas.Spot
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),U,U,U)>m1,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Datas.Spot) ->
                 case w of ww { Datas.Spot ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Datas.$w$dRecordToPairs
                        @ GHC.Prim.Any
                        (Data.Aeson.Types.Internal.Options
                           (GHC.Base.id @ GHC.Base.String)
                           (GHC.Base.id @ GHC.Base.String)
                           GHC.Types.True
                           GHC.Types.False
                           Data.Aeson.Types.Internal.defaultTaggedObject
                           GHC.Types.False)
                        ww1
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P <GHC.Types.Double>_R <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "lat")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R GHC.Types.Double>_R) <GHC.Prim.Any>_N))
                        ww2
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P <GHC.Types.Double>_R <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "speed")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R GHC.Types.Double>_R) <GHC.Prim.Any>_N))
                        (GHC.Generics.:*:
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "lng")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double))
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "dist")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Double))
                           @ GHC.Prim.Any
                           ww3
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Types.Double>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "lng")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Types.Double>_R) <GHC.Prim.Any>_N))
                           ww4
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Types.Double>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "dist")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Types.Double>_R) <GHC.Prim.Any>_N)))
                        (GHC.Generics.:*:
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "index")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "extremes")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (GHC.Base.Maybe
                                                       (GHC.Types.Double, GHC.Types.Double))))
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "sources")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R (GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int)))
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tripInfo")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (GHC.Base.Maybe
                                                       (GHC.Types.Int, GHC.Types.Double))))
                           @ GHC.Prim.Any
                           (GHC.Generics.:*:
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "index")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "extremes")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R
                                      (GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double))))
                              @ GHC.Prim.Any
                              ww5
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P <GHC.Types.Int>_R <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "index")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R GHC.Types.Int>_R) <GHC.Prim.Any>_N))
                              ww6
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "extremes")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                (GHC.Base.Maybe
                                                   (GHC.Types.Double,
                                                    GHC.Types.Double))>_R) <GHC.Prim.Any>_N)))
                           (GHC.Generics.:*:
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "sources")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R
                                      (GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int))))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tripInfo")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1
                                      GHC.Generics.R
                                      (GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double))))
                              @ GHC.Prim.Any
                              ww7
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int)>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "sources")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                (GHC.Base.Maybe
                                                   (GHC.Types.Int,
                                                    GHC.Types.Int))>_R) <GHC.Prim.Any>_N))
                              ww8
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double)>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "tripInfo")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                (GHC.Base.Maybe
                                                   (GHC.Types.Int,
                                                    GHC.Types.Double))>_R) <GHC.Prim.Any>_N))))
                        (GHC.Types.[]
                           @ Data.Aeson.Types.Internal.Pair) of ww9 { (#,#) ww10 ww11 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.: @ Data.Aeson.Types.Internal.Pair ww10 ww11)
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (Data.Aeson.Types.Internal.Object dt1)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } } }) -}
07d2863127f3528fee4141577492e659
  $fToJSONSpot_$ctoEncoding ::
    Datas.Spot -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Datas.Spot) ->
                 Data.Aeson.Encoding.Internal.value
                   (Datas.$fToJSONSpot_$ctoJSON eta)) -}
07d2863127f3528fee4141577492e659
  $fToJSONSpot_$ctoEncodingList ::
    [Datas.Spot] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datas.Spot]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Datas.$fToJSONSpot_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Datas.Spot
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Datas.Spot)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Datas.$fToJSONSpot_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Datas.Spot>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
07d2863127f3528fee4141577492e659
  $fToJSONSpot_$ctoJSON ::
    Datas.Spot -> Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),U,U,U)>m1,
     Unfolding: InlineRule (0, True, True)
                Datas.$fToJSONSpot1
                  `cast`
                (<Datas.Spot>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
07d2863127f3528fee4141577492e659
  $fToJSONSpot_$ctoJSONList ::
    [Datas.Spot] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datas.Spot]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Datas.Spot
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Datas.Spot
                                       c
                                       Datas.$fToJSONSpot_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
07d2863127f3528fee4141577492e659
  $fToJSONTrip :: Data.Aeson.Types.ToJSON.ToJSON Datas.Trip
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Datas.Trip
                  Datas.$fToJSONTrip_$ctoJSON
                  Datas.$fToJSONTrip_$ctoEncoding
                  Datas.$fToJSONTrip_$ctoJSONList
                  Datas.$fToJSONTrip_$ctoEncodingList -}
07d2863127f3528fee4141577492e659
  $fToJSONTrip1 ::
    Datas.Trip
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Datas.Trip) ->
                 case w of ww { Datas.Trip ww1 ww2 ww3 ->
                 case Datas.$w$dRecordToPairs1
                        @ GHC.Prim.Any
                        (Data.Aeson.Types.Internal.Options
                           (GHC.Base.id @ GHC.Base.String)
                           (GHC.Base.id @ GHC.Base.String)
                           GHC.Types.True
                           GHC.Types.False
                           Data.Aeson.Types.Internal.defaultTaggedObject
                           GHC.Types.False)
                        ww1
                          `cast`
                        (Trans
                             (Sym (GHC.Generics.N:K1[0]
                                       <GHC.Generics.R>_P <[Datas.Spot]>_R <GHC.Prim.Any>_P))
                             (Sym (GHC.Generics.N:M1[0]
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "coords")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R [Datas.Spot]>_R) <GHC.Prim.Any>_N))
                        (GHC.Generics.:*:
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "start_time")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "end_time")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                           @ GHC.Prim.Any
                           ww2
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "start_time")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                           ww3
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "end_time")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N)))
                        (GHC.Types.[]
                           @ Data.Aeson.Types.Internal.Pair) of ww4 { (#,#) ww5 ww6 ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.: @ Data.Aeson.Types.Internal.Pair ww5 ww6)
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (Data.Aeson.Types.Internal.Object dt1)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } } }) -}
07d2863127f3528fee4141577492e659
  $fToJSONTrip_$ctoEncoding ::
    Datas.Trip -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Datas.Trip) ->
                 Data.Aeson.Encoding.Internal.value
                   (Datas.$fToJSONTrip_$ctoJSON eta)) -}
07d2863127f3528fee4141577492e659
  $fToJSONTrip_$ctoEncodingList ::
    [Datas.Trip] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datas.Trip]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Datas.$fToJSONTrip_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Datas.Trip
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Datas.Trip)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Datas.$fToJSONTrip_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Datas.Trip>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
07d2863127f3528fee4141577492e659
  $fToJSONTrip_$ctoJSON ::
    Datas.Trip -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>m1,
     Unfolding: InlineRule (0, True, True)
                Datas.$fToJSONTrip1
                  `cast`
                (<Datas.Trip>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
07d2863127f3528fee4141577492e659
  $fToJSONTrip_$ctoJSONList ::
    [Datas.Trip] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Datas.Trip]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Datas.Trip
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Datas.Trip
                                       c
                                       Datas.$fToJSONTrip_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
3bff64f08724317352a7dc5c501b3dde
  $s$fFromJSON(,) ::
    Data.Aeson.Types.FromJSON.FromJSON
      (GHC.Types.Int, GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Types.Double)
                  (GHC.Base.$
                     @ 'GHC.Types.PtrRepLifted
                     @ (Data.Aeson.Types.Internal.Array
                        -> Data.Aeson.Types.Internal.Parser
                             (GHC.Types.Int, GHC.Types.Double))
                     @ (Data.Aeson.Types.Internal.Value
                        -> Data.Aeson.Types.Internal.Parser
                             (GHC.Types.Int, GHC.Types.Double))
                     (Data.Aeson.Types.FromJSON.withArray
                        @ (GHC.Types.Int, GHC.Types.Double)
                        (GHC.Base.build
                           @ GHC.Types.Char
                           (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "(a, b)"#)))
                     (\ (t :: Data.Aeson.Types.Internal.Array) ->
                      let {
                        n :: GHC.Types.Int
                        = Data.Vector.Fusion.Util.unId
                            @ GHC.Types.Int
                            (Data.Vector.Fusion.Bundle.Monadic.length
                               @ Data.Vector.Fusion.Util.Id
                               @ Data.Vector.Vector
                               @ Data.Aeson.Types.Internal.Value
                               Data.Vector.Fusion.Util.$fMonadId
                               (Data.Vector.Fusion.Bundle.Monadic.fromVector
                                  @ Data.Vector.Fusion.Util.Id
                                  @ Data.Vector.Vector
                                  @ Data.Aeson.Types.Internal.Value
                                  Data.Vector.Fusion.Util.$fMonadId
                                  (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                                  t))
                      } in
                      case GHC.Classes.eqInt n (GHC.Types.I# 2#) of wild {
                        GHC.Types.False
                        -> GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.Base.String
                             @ (Data.Aeson.Types.Internal.Parser
                                  (GHC.Types.Int, GHC.Types.Double))
                             (Data.Aeson.Types.Internal.$fMonadFailParser_$cfail
                                @ (GHC.Types.Int, GHC.Types.Double))
                             (GHC.Base.build
                                @ GHC.Types.Char
                                (\ @ b1
                                   (c :: GHC.Types.Char -> b1 -> b1)[OneShot]
                                   (n1 :: b1)[OneShot] ->
                                 GHC.CString.unpackFoldrCString#
                                   @ b1
                                   "cannot unpack array of length "#
                                   c
                                   (GHC.Base.foldr
                                      @ GHC.Types.Char
                                      @ b1
                                      c
                                      (GHC.CString.unpackFoldrCString#
                                         @ b1
                                         " into a tuple of length 2"#
                                         c
                                         n1)
                                      (GHC.Show.$fShowInt_$cshow n))))
                        GHC.Types.True
                        -> let {
                             d :: Data.Aeson.Types.Internal.Parser GHC.Types.Int
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ GHC.Types.Int
                                 Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON5
                                 (GHC.Types.I# 0#)
                                 t
                           } in
                           let {
                             d1 :: Data.Aeson.Types.Internal.Parser
                                     (GHC.Types.Double -> (GHC.Types.Int, GHC.Types.Double))
                               {- Arity: 3 -}
                             = Data.Aeson.Types.FromJSON.$fFromJSON(,)_$s<$>
                                 @ GHC.Types.Int
                                 @ (GHC.Types.Double -> (GHC.Types.Int, GHC.Types.Double))
                                 (GHC.Tuple.(,) @ GHC.Types.Int @ GHC.Types.Double)
                                 d
                           } in
                           let {
                             e :: Data.Aeson.Types.Internal.Parser GHC.Types.Double
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ GHC.Types.Double
                                 Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON1
                                 (GHC.Types.I# 1#)
                                 t
                           } in
                           GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ (forall (f :: * -> *) r.
                                Data.Aeson.Types.Internal.JSONPath
                                -> Data.Aeson.Types.Internal.Failure f r
                                -> Data.Aeson.Types.Internal.Success
                                     (GHC.Types.Int, GHC.Types.Double) f r
                                -> f r)
                             @ (Data.Aeson.Types.Internal.Parser
                                  (GHC.Types.Int, GHC.Types.Double))
                             (\ (tpl :: forall (f :: * -> *) r.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f r
                                        -> Data.Aeson.Types.Internal.Success
                                             (GHC.Types.Int, GHC.Types.Double) f r
                                        -> f r) ->
                              tpl)
                               `cast`
                             (<forall (f :: * -> *) r.
                               Data.Aeson.Types.Internal.JSONPath
                               -> Data.Aeson.Types.Internal.Failure f r
                               -> Data.Aeson.Types.Internal.Success
                                    (GHC.Types.Int, GHC.Types.Double) f r
                               -> f r>_R
                              ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                            <(GHC.Types.Int, GHC.Types.Double)>_R))
                             (\ @ (f :: * -> *)
                                @ r
                                (path :: Data.Aeson.Types.Internal.JSONPath)
                                (kf :: Data.Aeson.Types.Internal.Failure f r)
                                (ks :: Data.Aeson.Types.Internal.Success
                                         (GHC.Types.Int, GHC.Types.Double) f r) ->
                              Data.Aeson.Types.Internal.runParser
                                @ (GHC.Types.Double -> (GHC.Types.Int, GHC.Types.Double))
                                d1
                                @ f
                                @ r
                                path
                                kf
                                (\ (a2 :: GHC.Types.Double -> (GHC.Types.Int, GHC.Types.Double)) ->
                                 Data.Aeson.Types.Internal.runParser
                                   @ (GHC.Types.Int, GHC.Types.Double)
                                   (GHC.Base.$
                                      @ 'GHC.Types.PtrRepLifted
                                      @ (forall (f6 :: * -> *) r1.
                                         Data.Aeson.Types.Internal.JSONPath
                                         -> Data.Aeson.Types.Internal.Failure f6 r1
                                         -> Data.Aeson.Types.Internal.Success
                                              (GHC.Types.Int, GHC.Types.Double) f6 r1
                                         -> f6 r1)
                                      @ (Data.Aeson.Types.Internal.Parser
                                           (GHC.Types.Int, GHC.Types.Double))
                                      (\ (tpl :: forall (f6 :: * -> *) r1.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f6 r1
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (GHC.Types.Int, GHC.Types.Double) f6 r1
                                                 -> f6 r1) ->
                                       tpl)
                                        `cast`
                                      (<forall (f6 :: * -> *) r1.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f6 r1
                                        -> Data.Aeson.Types.Internal.Success
                                             (GHC.Types.Int, GHC.Types.Double) f6 r1
                                        -> f6 r1>_R
                                       ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                     <(GHC.Types.Int, GHC.Types.Double)>_R))
                                      (\ @ (f6 :: * -> *)
                                         @ r1
                                         (path1 :: Data.Aeson.Types.Internal.JSONPath)
                                         (kf1 :: Data.Aeson.Types.Internal.Failure f6 r1)
                                         (ks1 :: Data.Aeson.Types.Internal.Success
                                                   (GHC.Types.Int, GHC.Types.Double) f6 r1) ->
                                       Data.Aeson.Types.Internal.runParser
                                         @ GHC.Types.Double
                                         e
                                         @ f6
                                         @ r1
                                         path1
                                         kf1
                                         (\ (a3 :: GHC.Types.Double) ->
                                          let {
                                            a4 :: (GHC.Types.Int, GHC.Types.Double) = a2 a3
                                          } in
                                          Data.Aeson.Types.Internal.runParser
                                            @ (GHC.Types.Int, GHC.Types.Double)
                                            (GHC.Base.$
                                               @ 'GHC.Types.PtrRepLifted
                                               @ (forall (f7 :: * -> *) r2.
                                                  Data.Aeson.Types.Internal.JSONPath
                                                  -> Data.Aeson.Types.Internal.Failure f7 r2
                                                  -> Data.Aeson.Types.Internal.Success
                                                       (GHC.Types.Int, GHC.Types.Double) f7 r2
                                                  -> f7 r2)
                                               @ (Data.Aeson.Types.Internal.Parser
                                                    (GHC.Types.Int, GHC.Types.Double))
                                               (\ (tpl :: forall (f7 :: * -> *) r2.
                                                          Data.Aeson.Types.Internal.JSONPath
                                                          -> Data.Aeson.Types.Internal.Failure f7 r2
                                                          -> Data.Aeson.Types.Internal.Success
                                                               (GHC.Types.Int, GHC.Types.Double)
                                                               f7
                                                               r2
                                                          -> f7 r2) ->
                                                tpl)
                                                 `cast`
                                               (<forall (f7 :: * -> *) r2.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f7 r2
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (GHC.Types.Int, GHC.Types.Double) f7 r2
                                                 -> f7 r2>_R
                                                ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                              <(GHC.Types.Int,
                                                                GHC.Types.Double)>_R))
                                               (\ @ (f7 :: * -> *)
                                                  @ r2
                                                  (_path :: Data.Aeson.Types.Internal.JSONPath)
                                                  (_kf :: Data.Aeson.Types.Internal.Failure f7 r2)
                                                  (ks2 :: Data.Aeson.Types.Internal.Success
                                                            (GHC.Types.Int, GHC.Types.Double)
                                                            f7
                                                            r2) ->
                                                ks2 a4))
                                            @ f6
                                            @ r1
                                            path1
                                            kf1
                                            ks1)))
                                   @ f
                                   @ r
                                   path
                                   kf
                                   ks)) }))
                  (Data.Aeson.Types.FromJSON.$fFromJSON(,)_$cparseJSONList
                     @ GHC.Types.Int
                     @ GHC.Types.Double
                     Data.Aeson.Types.FromJSON.$fFromJSONInt
                     Data.Aeson.Types.FromJSON.$fFromJSONDouble) -}
6f7cff4d870c1c2e3571ef0c319c0043
  $s$fFromJSON(,)1 ::
    Data.Aeson.Types.FromJSON.FromJSON (GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Types.Int)
                  (GHC.Base.$
                     @ 'GHC.Types.PtrRepLifted
                     @ (Data.Aeson.Types.Internal.Array
                        -> Data.Aeson.Types.Internal.Parser (GHC.Types.Int, GHC.Types.Int))
                     @ (Data.Aeson.Types.Internal.Value
                        -> Data.Aeson.Types.Internal.Parser (GHC.Types.Int, GHC.Types.Int))
                     (Data.Aeson.Types.FromJSON.withArray
                        @ (GHC.Types.Int, GHC.Types.Int)
                        (GHC.Base.build
                           @ GHC.Types.Char
                           (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "(a, b)"#)))
                     (\ (t :: Data.Aeson.Types.Internal.Array) ->
                      let {
                        n :: GHC.Types.Int
                        = Data.Vector.Fusion.Util.unId
                            @ GHC.Types.Int
                            (Data.Vector.Fusion.Bundle.Monadic.length
                               @ Data.Vector.Fusion.Util.Id
                               @ Data.Vector.Vector
                               @ Data.Aeson.Types.Internal.Value
                               Data.Vector.Fusion.Util.$fMonadId
                               (Data.Vector.Fusion.Bundle.Monadic.fromVector
                                  @ Data.Vector.Fusion.Util.Id
                                  @ Data.Vector.Vector
                                  @ Data.Aeson.Types.Internal.Value
                                  Data.Vector.Fusion.Util.$fMonadId
                                  (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                                  t))
                      } in
                      case GHC.Classes.eqInt n (GHC.Types.I# 2#) of wild {
                        GHC.Types.False
                        -> GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.Base.String
                             @ (Data.Aeson.Types.Internal.Parser (GHC.Types.Int, GHC.Types.Int))
                             (Data.Aeson.Types.Internal.$fMonadFailParser_$cfail
                                @ (GHC.Types.Int, GHC.Types.Int))
                             (GHC.Base.build
                                @ GHC.Types.Char
                                (\ @ b1
                                   (c :: GHC.Types.Char -> b1 -> b1)[OneShot]
                                   (n1 :: b1)[OneShot] ->
                                 GHC.CString.unpackFoldrCString#
                                   @ b1
                                   "cannot unpack array of length "#
                                   c
                                   (GHC.Base.foldr
                                      @ GHC.Types.Char
                                      @ b1
                                      c
                                      (GHC.CString.unpackFoldrCString#
                                         @ b1
                                         " into a tuple of length 2"#
                                         c
                                         n1)
                                      (GHC.Show.$fShowInt_$cshow n))))
                        GHC.Types.True
                        -> let {
                             d :: Data.Aeson.Types.Internal.Parser GHC.Types.Int
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ GHC.Types.Int
                                 Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON5
                                 (GHC.Types.I# 0#)
                                 t
                           } in
                           let {
                             d1 :: Data.Aeson.Types.Internal.Parser
                                     (GHC.Types.Int -> (GHC.Types.Int, GHC.Types.Int))
                               {- Arity: 3 -}
                             = Data.Aeson.Types.FromJSON.$fFromJSON(,)_$s<$>
                                 @ GHC.Types.Int
                                 @ (GHC.Types.Int -> (GHC.Types.Int, GHC.Types.Int))
                                 (GHC.Tuple.(,) @ GHC.Types.Int @ GHC.Types.Int)
                                 d
                           } in
                           let {
                             e :: Data.Aeson.Types.Internal.Parser GHC.Types.Int
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ GHC.Types.Int
                                 Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON5
                                 (GHC.Types.I# 1#)
                                 t
                           } in
                           GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ (forall (f :: * -> *) r.
                                Data.Aeson.Types.Internal.JSONPath
                                -> Data.Aeson.Types.Internal.Failure f r
                                -> Data.Aeson.Types.Internal.Success
                                     (GHC.Types.Int, GHC.Types.Int) f r
                                -> f r)
                             @ (Data.Aeson.Types.Internal.Parser (GHC.Types.Int, GHC.Types.Int))
                             (\ (tpl :: forall (f :: * -> *) r.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f r
                                        -> Data.Aeson.Types.Internal.Success
                                             (GHC.Types.Int, GHC.Types.Int) f r
                                        -> f r) ->
                              tpl)
                               `cast`
                             (<forall (f :: * -> *) r.
                               Data.Aeson.Types.Internal.JSONPath
                               -> Data.Aeson.Types.Internal.Failure f r
                               -> Data.Aeson.Types.Internal.Success
                                    (GHC.Types.Int, GHC.Types.Int) f r
                               -> f r>_R
                              ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                            <(GHC.Types.Int, GHC.Types.Int)>_R))
                             (\ @ (f :: * -> *)
                                @ r
                                (path :: Data.Aeson.Types.Internal.JSONPath)
                                (kf :: Data.Aeson.Types.Internal.Failure f r)
                                (ks :: Data.Aeson.Types.Internal.Success
                                         (GHC.Types.Int, GHC.Types.Int) f r) ->
                              Data.Aeson.Types.Internal.runParser
                                @ (GHC.Types.Int -> (GHC.Types.Int, GHC.Types.Int))
                                d1
                                @ f
                                @ r
                                path
                                kf
                                (\ (a2 :: GHC.Types.Int -> (GHC.Types.Int, GHC.Types.Int)) ->
                                 Data.Aeson.Types.Internal.runParser
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   (GHC.Base.$
                                      @ 'GHC.Types.PtrRepLifted
                                      @ (forall (f6 :: * -> *) r1.
                                         Data.Aeson.Types.Internal.JSONPath
                                         -> Data.Aeson.Types.Internal.Failure f6 r1
                                         -> Data.Aeson.Types.Internal.Success
                                              (GHC.Types.Int, GHC.Types.Int) f6 r1
                                         -> f6 r1)
                                      @ (Data.Aeson.Types.Internal.Parser
                                           (GHC.Types.Int, GHC.Types.Int))
                                      (\ (tpl :: forall (f6 :: * -> *) r1.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f6 r1
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (GHC.Types.Int, GHC.Types.Int) f6 r1
                                                 -> f6 r1) ->
                                       tpl)
                                        `cast`
                                      (<forall (f6 :: * -> *) r1.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f6 r1
                                        -> Data.Aeson.Types.Internal.Success
                                             (GHC.Types.Int, GHC.Types.Int) f6 r1
                                        -> f6 r1>_R
                                       ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                     <(GHC.Types.Int, GHC.Types.Int)>_R))
                                      (\ @ (f6 :: * -> *)
                                         @ r1
                                         (path1 :: Data.Aeson.Types.Internal.JSONPath)
                                         (kf1 :: Data.Aeson.Types.Internal.Failure f6 r1)
                                         (ks1 :: Data.Aeson.Types.Internal.Success
                                                   (GHC.Types.Int, GHC.Types.Int) f6 r1) ->
                                       Data.Aeson.Types.Internal.runParser
                                         @ GHC.Types.Int
                                         e
                                         @ f6
                                         @ r1
                                         path1
                                         kf1
                                         (\ (a3 :: GHC.Types.Int) ->
                                          let {
                                            a4 :: (GHC.Types.Int, GHC.Types.Int) = a2 a3
                                          } in
                                          Data.Aeson.Types.Internal.runParser
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            (GHC.Base.$
                                               @ 'GHC.Types.PtrRepLifted
                                               @ (forall (f7 :: * -> *) r2.
                                                  Data.Aeson.Types.Internal.JSONPath
                                                  -> Data.Aeson.Types.Internal.Failure f7 r2
                                                  -> Data.Aeson.Types.Internal.Success
                                                       (GHC.Types.Int, GHC.Types.Int) f7 r2
                                                  -> f7 r2)
                                               @ (Data.Aeson.Types.Internal.Parser
                                                    (GHC.Types.Int, GHC.Types.Int))
                                               (\ (tpl :: forall (f7 :: * -> *) r2.
                                                          Data.Aeson.Types.Internal.JSONPath
                                                          -> Data.Aeson.Types.Internal.Failure f7 r2
                                                          -> Data.Aeson.Types.Internal.Success
                                                               (GHC.Types.Int, GHC.Types.Int) f7 r2
                                                          -> f7 r2) ->
                                                tpl)
                                                 `cast`
                                               (<forall (f7 :: * -> *) r2.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f7 r2
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (GHC.Types.Int, GHC.Types.Int) f7 r2
                                                 -> f7 r2>_R
                                                ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                              <(GHC.Types.Int, GHC.Types.Int)>_R))
                                               (\ @ (f7 :: * -> *)
                                                  @ r2
                                                  (_path :: Data.Aeson.Types.Internal.JSONPath)
                                                  (_kf :: Data.Aeson.Types.Internal.Failure f7 r2)
                                                  (ks2 :: Data.Aeson.Types.Internal.Success
                                                            (GHC.Types.Int, GHC.Types.Int) f7 r2) ->
                                                ks2 a4))
                                            @ f6
                                            @ r1
                                            path1
                                            kf1
                                            ks1)))
                                   @ f
                                   @ r
                                   path
                                   kf
                                   ks)) }))
                  (Data.Aeson.Types.FromJSON.$fFromJSON(,)_$cparseJSONList
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     Data.Aeson.Types.FromJSON.$fFromJSONInt
                     Data.Aeson.Types.FromJSON.$fFromJSONInt) -}
5134ad00477c4e9112f3f6630672d663
  $s$fFromJSON(,)2 ::
    Data.Aeson.Types.FromJSON.FromJSON
      (GHC.Types.Double, GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Double, GHC.Types.Double)
                  (GHC.Base.$
                     @ 'GHC.Types.PtrRepLifted
                     @ (Data.Aeson.Types.Internal.Array
                        -> Data.Aeson.Types.Internal.Parser
                             (GHC.Types.Double, GHC.Types.Double))
                     @ (Data.Aeson.Types.Internal.Value
                        -> Data.Aeson.Types.Internal.Parser
                             (GHC.Types.Double, GHC.Types.Double))
                     (Data.Aeson.Types.FromJSON.withArray
                        @ (GHC.Types.Double, GHC.Types.Double)
                        (GHC.Base.build
                           @ GHC.Types.Char
                           (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "(a, b)"#)))
                     (\ (t :: Data.Aeson.Types.Internal.Array) ->
                      let {
                        n :: GHC.Types.Int
                        = Data.Vector.Fusion.Util.unId
                            @ GHC.Types.Int
                            (Data.Vector.Fusion.Bundle.Monadic.length
                               @ Data.Vector.Fusion.Util.Id
                               @ Data.Vector.Vector
                               @ Data.Aeson.Types.Internal.Value
                               Data.Vector.Fusion.Util.$fMonadId
                               (Data.Vector.Fusion.Bundle.Monadic.fromVector
                                  @ Data.Vector.Fusion.Util.Id
                                  @ Data.Vector.Vector
                                  @ Data.Aeson.Types.Internal.Value
                                  Data.Vector.Fusion.Util.$fMonadId
                                  (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                                  t))
                      } in
                      case GHC.Classes.eqInt n (GHC.Types.I# 2#) of wild {
                        GHC.Types.False
                        -> GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.Base.String
                             @ (Data.Aeson.Types.Internal.Parser
                                  (GHC.Types.Double, GHC.Types.Double))
                             (Data.Aeson.Types.Internal.$fMonadFailParser_$cfail
                                @ (GHC.Types.Double, GHC.Types.Double))
                             (GHC.Base.build
                                @ GHC.Types.Char
                                (\ @ b1
                                   (c :: GHC.Types.Char -> b1 -> b1)[OneShot]
                                   (n1 :: b1)[OneShot] ->
                                 GHC.CString.unpackFoldrCString#
                                   @ b1
                                   "cannot unpack array of length "#
                                   c
                                   (GHC.Base.foldr
                                      @ GHC.Types.Char
                                      @ b1
                                      c
                                      (GHC.CString.unpackFoldrCString#
                                         @ b1
                                         " into a tuple of length 2"#
                                         c
                                         n1)
                                      (GHC.Show.$fShowInt_$cshow n))))
                        GHC.Types.True
                        -> let {
                             d :: Data.Aeson.Types.Internal.Parser GHC.Types.Double
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ GHC.Types.Double
                                 Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON1
                                 (GHC.Types.I# 0#)
                                 t
                           } in
                           let {
                             d1 :: Data.Aeson.Types.Internal.Parser
                                     (GHC.Types.Double -> (GHC.Types.Double, GHC.Types.Double))
                               {- Arity: 3 -}
                             = Data.Aeson.Types.FromJSON.$fFromJSON(,)_$s<$>
                                 @ GHC.Types.Double
                                 @ (GHC.Types.Double -> (GHC.Types.Double, GHC.Types.Double))
                                 (GHC.Tuple.(,) @ GHC.Types.Double @ GHC.Types.Double)
                                 d
                           } in
                           let {
                             e :: Data.Aeson.Types.Internal.Parser GHC.Types.Double
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ GHC.Types.Double
                                 Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON1
                                 (GHC.Types.I# 1#)
                                 t
                           } in
                           GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ (forall (f :: * -> *) r.
                                Data.Aeson.Types.Internal.JSONPath
                                -> Data.Aeson.Types.Internal.Failure f r
                                -> Data.Aeson.Types.Internal.Success
                                     (GHC.Types.Double, GHC.Types.Double) f r
                                -> f r)
                             @ (Data.Aeson.Types.Internal.Parser
                                  (GHC.Types.Double, GHC.Types.Double))
                             (\ (tpl :: forall (f :: * -> *) r.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f r
                                        -> Data.Aeson.Types.Internal.Success
                                             (GHC.Types.Double, GHC.Types.Double) f r
                                        -> f r) ->
                              tpl)
                               `cast`
                             (<forall (f :: * -> *) r.
                               Data.Aeson.Types.Internal.JSONPath
                               -> Data.Aeson.Types.Internal.Failure f r
                               -> Data.Aeson.Types.Internal.Success
                                    (GHC.Types.Double, GHC.Types.Double) f r
                               -> f r>_R
                              ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                            <(GHC.Types.Double, GHC.Types.Double)>_R))
                             (\ @ (f :: * -> *)
                                @ r
                                (path :: Data.Aeson.Types.Internal.JSONPath)
                                (kf :: Data.Aeson.Types.Internal.Failure f r)
                                (ks :: Data.Aeson.Types.Internal.Success
                                         (GHC.Types.Double, GHC.Types.Double) f r) ->
                              Data.Aeson.Types.Internal.runParser
                                @ (GHC.Types.Double -> (GHC.Types.Double, GHC.Types.Double))
                                d1
                                @ f
                                @ r
                                path
                                kf
                                (\ (a2 :: GHC.Types.Double
                                          -> (GHC.Types.Double, GHC.Types.Double)) ->
                                 Data.Aeson.Types.Internal.runParser
                                   @ (GHC.Types.Double, GHC.Types.Double)
                                   (GHC.Base.$
                                      @ 'GHC.Types.PtrRepLifted
                                      @ (forall (f6 :: * -> *) r1.
                                         Data.Aeson.Types.Internal.JSONPath
                                         -> Data.Aeson.Types.Internal.Failure f6 r1
                                         -> Data.Aeson.Types.Internal.Success
                                              (GHC.Types.Double, GHC.Types.Double) f6 r1
                                         -> f6 r1)
                                      @ (Data.Aeson.Types.Internal.Parser
                                           (GHC.Types.Double, GHC.Types.Double))
                                      (\ (tpl :: forall (f6 :: * -> *) r1.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f6 r1
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (GHC.Types.Double, GHC.Types.Double) f6 r1
                                                 -> f6 r1) ->
                                       tpl)
                                        `cast`
                                      (<forall (f6 :: * -> *) r1.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f6 r1
                                        -> Data.Aeson.Types.Internal.Success
                                             (GHC.Types.Double, GHC.Types.Double) f6 r1
                                        -> f6 r1>_R
                                       ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                     <(GHC.Types.Double, GHC.Types.Double)>_R))
                                      (\ @ (f6 :: * -> *)
                                         @ r1
                                         (path1 :: Data.Aeson.Types.Internal.JSONPath)
                                         (kf1 :: Data.Aeson.Types.Internal.Failure f6 r1)
                                         (ks1 :: Data.Aeson.Types.Internal.Success
                                                   (GHC.Types.Double, GHC.Types.Double) f6 r1) ->
                                       Data.Aeson.Types.Internal.runParser
                                         @ GHC.Types.Double
                                         e
                                         @ f6
                                         @ r1
                                         path1
                                         kf1
                                         (\ (a3 :: GHC.Types.Double) ->
                                          let {
                                            a4 :: (GHC.Types.Double, GHC.Types.Double) = a2 a3
                                          } in
                                          Data.Aeson.Types.Internal.runParser
                                            @ (GHC.Types.Double, GHC.Types.Double)
                                            (GHC.Base.$
                                               @ 'GHC.Types.PtrRepLifted
                                               @ (forall (f7 :: * -> *) r2.
                                                  Data.Aeson.Types.Internal.JSONPath
                                                  -> Data.Aeson.Types.Internal.Failure f7 r2
                                                  -> Data.Aeson.Types.Internal.Success
                                                       (GHC.Types.Double, GHC.Types.Double) f7 r2
                                                  -> f7 r2)
                                               @ (Data.Aeson.Types.Internal.Parser
                                                    (GHC.Types.Double, GHC.Types.Double))
                                               (\ (tpl :: forall (f7 :: * -> *) r2.
                                                          Data.Aeson.Types.Internal.JSONPath
                                                          -> Data.Aeson.Types.Internal.Failure f7 r2
                                                          -> Data.Aeson.Types.Internal.Success
                                                               (GHC.Types.Double, GHC.Types.Double)
                                                               f7
                                                               r2
                                                          -> f7 r2) ->
                                                tpl)
                                                 `cast`
                                               (<forall (f7 :: * -> *) r2.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f7 r2
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (GHC.Types.Double, GHC.Types.Double) f7 r2
                                                 -> f7 r2>_R
                                                ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                              <(GHC.Types.Double,
                                                                GHC.Types.Double)>_R))
                                               (\ @ (f7 :: * -> *)
                                                  @ r2
                                                  (_path :: Data.Aeson.Types.Internal.JSONPath)
                                                  (_kf :: Data.Aeson.Types.Internal.Failure f7 r2)
                                                  (ks2 :: Data.Aeson.Types.Internal.Success
                                                            (GHC.Types.Double, GHC.Types.Double)
                                                            f7
                                                            r2) ->
                                                ks2 a4))
                                            @ f6
                                            @ r1
                                            path1
                                            kf1
                                            ks1)))
                                   @ f
                                   @ r
                                   path
                                   kf
                                   ks)) }))
                  (Data.Aeson.Types.FromJSON.$fFromJSON(,)_$cparseJSONList
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     Data.Aeson.Types.FromJSON.$fFromJSONDouble
                     Data.Aeson.Types.FromJSON.$fFromJSONDouble) -}
daf6a4fd6c67dcfe843fb48627dc1f8a
  $s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "aveLocation")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "aveLocation")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "aveLocation")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "aveLocation")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "aveLocation")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
cdebdd014780f1473545f025438fefa5
  $s$fSelectorMetaMetaSel1 ::
    GHC.Generics.SingI ('GHC.Base.Just "aveLocation")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel2
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "aveLocation">_N) -}
cf6754971b62612bf276b4859a67a15f
  $s$fSelectorMetaMetaSel10 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "trips")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "trips")
                   @ "trips"
                   @~ <'GHC.Base.Just "trips">_N
                   Datas.$s$fSelectorMetaMetaSel11
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"trips">_N)) -}
a04b05145aa4f2f86ba42ac63bcf4484
  $s$fSelectorMetaMetaSel11 :: GHC.Generics.R:SingSymbols "trips"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "trips"
                   Datas.$fToJSONQRes10
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"trips">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"trips">_N))) -}
a7546b2c26865019586632ae5e725b93
  $s$fSelectorMetaMetaSel12 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "aveSpeed")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "aveSpeed")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName3
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "aveSpeed")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "aveSpeed")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "aveSpeed")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
3c2dac5bc45e897699ad671079c23eb8
  $s$fSelectorMetaMetaSel13 ::
    GHC.Generics.SingI ('GHC.Base.Just "aveSpeed")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel14
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "aveSpeed">_N) -}
c219bd0ee0bd6df9890bc4d616ec208a
  $s$fSelectorMetaMetaSel14 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "aveSpeed")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "aveSpeed")
                   @ "aveSpeed"
                   @~ <'GHC.Base.Just "aveSpeed">_N
                   Datas.$s$fSelectorMetaMetaSel15
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"aveSpeed">_N)) -}
77fc159786247c74d983045e02ec2705
  $s$fSelectorMetaMetaSel15 :: GHC.Generics.R:SingSymbols "aveSpeed"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "aveSpeed"
                   Datas.$fToJSONQRes13
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"aveSpeed">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"aveSpeed">_N))) -}
ed8b83808e2c1d36cdd3c5193cfd7810
  $s$fSelectorMetaMetaSel16 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "minSpeed")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "minSpeed")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName4
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "minSpeed")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel17
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "minSpeed")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel17
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "minSpeed")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel17
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
8a2e86372d307a4fdeb952b67d87d52c
  $s$fSelectorMetaMetaSel17 ::
    GHC.Generics.SingI ('GHC.Base.Just "minSpeed")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel18
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "minSpeed">_N) -}
bbbc1cd974caea7b1cfb509ee6ecfff0
  $s$fSelectorMetaMetaSel18 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "minSpeed")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "minSpeed")
                   @ "minSpeed"
                   @~ <'GHC.Base.Just "minSpeed">_N
                   Datas.$s$fSelectorMetaMetaSel19
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"minSpeed">_N)) -}
b7b9a07b980e99e2066249cc44a7c562
  $s$fSelectorMetaMetaSel19 :: GHC.Generics.R:SingSymbols "minSpeed"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "minSpeed"
                   Datas.$fToJSONQRes16
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"minSpeed">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"minSpeed">_N))) -}
a063eecdb18de7ee15396567eba34fea
  $s$fSelectorMetaMetaSel2 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "aveLocation")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "aveLocation")
                   @ "aveLocation"
                   @~ <'GHC.Base.Just "aveLocation">_N
                   Datas.$s$fSelectorMetaMetaSel3
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"aveLocation">_N)) -}
18c57912232ba1b07c2a65f9a17d9566
  $s$fSelectorMetaMetaSel20 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "maxSpeed")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "maxSpeed")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName5
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "maxSpeed")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel21
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "maxSpeed")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel21
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "maxSpeed")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel21
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
28362c41a4047551da781f468a357601
  $s$fSelectorMetaMetaSel21 ::
    GHC.Generics.SingI ('GHC.Base.Just "maxSpeed")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel22
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "maxSpeed">_N) -}
14da6209a937767a90dab5bf2e2b4034
  $s$fSelectorMetaMetaSel22 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "maxSpeed")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "maxSpeed")
                   @ "maxSpeed"
                   @~ <'GHC.Base.Just "maxSpeed">_N
                   Datas.$s$fSelectorMetaMetaSel23
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"maxSpeed">_N)) -}
8333642460925f935b5f809527dfd665
  $s$fSelectorMetaMetaSel23 :: GHC.Generics.R:SingSymbols "maxSpeed"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "maxSpeed"
                   Datas.$fToJSONQRes19
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"maxSpeed">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"maxSpeed">_N))) -}
b0c83094d6e35e35df3af720bb00fb20
  $s$fSelectorMetaMetaSel24 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "tripInfo")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "tripInfo")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName6
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "tripInfo")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel25
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "tripInfo")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel25
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "tripInfo")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel25
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
c41bbe81c463a5d78f315b045c127d90
  $s$fSelectorMetaMetaSel25 ::
    GHC.Generics.SingI ('GHC.Base.Just "tripInfo")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel26
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "tripInfo">_N) -}
13b0e41fa862024acc6e06a69021d8b9
  $s$fSelectorMetaMetaSel26 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "tripInfo")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "tripInfo")
                   @ "tripInfo"
                   @~ <'GHC.Base.Just "tripInfo">_N
                   Datas.$s$fSelectorMetaMetaSel27
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"tripInfo">_N)) -}
a2ce96e77a237ae85a1c3ab41f28f304
  $s$fSelectorMetaMetaSel27 :: GHC.Generics.R:SingSymbols "tripInfo"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "tripInfo"
                   Datas.$s$fSelectorMetaMetaSel28
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"tripInfo">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"tripInfo">_N))) -}
a4b09be0952c3d7910b8bcc5806a3d28
  $s$fSelectorMetaMetaSel28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tripInfo"#) -}
f738174847b716682f3adbf2957ffb7e
  $s$fSelectorMetaMetaSel29 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "sources")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "sources")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName7
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "sources")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel30
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "sources")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel30
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "sources")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel30
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
fd5385ade37266b84e111de4097bbefb
  $s$fSelectorMetaMetaSel3 ::
    GHC.Generics.R:SingSymbols "aveLocation"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "aveLocation"
                   Datas.$fToJSONQRes4
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"aveLocation">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"aveLocation">_N))) -}
3e00e60dd3c287e2281a5224c3265972
  $s$fSelectorMetaMetaSel30 ::
    GHC.Generics.SingI ('GHC.Base.Just "sources")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel31
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "sources">_N) -}
3e16aba35bf19f1bc2f679adf335ae31
  $s$fSelectorMetaMetaSel31 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "sources")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "sources")
                   @ "sources"
                   @~ <'GHC.Base.Just "sources">_N
                   Datas.$s$fSelectorMetaMetaSel32
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"sources">_N)) -}
c0fa223b02bebad42fc7eece05978ebe
  $s$fSelectorMetaMetaSel32 :: GHC.Generics.R:SingSymbols "sources"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "sources"
                   Datas.$s$fSelectorMetaMetaSel33
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"sources">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"sources">_N))) -}
bd919d40ab303ed74b1f44f16cc5ba50
  $s$fSelectorMetaMetaSel33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sources"#) -}
49a30e1b9848d1f4c883c4bf072a4472
  $s$fSelectorMetaMetaSel34 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "extremes")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "extremes")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName8
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "extremes")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel35
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "extremes")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel35
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "extremes")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel35
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
172671a5061a79f2c3275b063ec3f8a6
  $s$fSelectorMetaMetaSel35 ::
    GHC.Generics.SingI ('GHC.Base.Just "extremes")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel36
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "extremes">_N) -}
9e87af7df4a29462d6cf523b83f82859
  $s$fSelectorMetaMetaSel36 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "extremes")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "extremes")
                   @ "extremes"
                   @~ <'GHC.Base.Just "extremes">_N
                   Datas.$s$fSelectorMetaMetaSel37
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"extremes">_N)) -}
193e853314e15120ed6616ce568e243e
  $s$fSelectorMetaMetaSel37 :: GHC.Generics.R:SingSymbols "extremes"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "extremes"
                   Datas.$s$fSelectorMetaMetaSel38
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"extremes">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"extremes">_N))) -}
2629d56352f39fdd59c6e0c1c057f8eb
  $s$fSelectorMetaMetaSel38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "extremes"#) -}
75bdd89e489c8273b5b5edec27b14917
  $s$fSelectorMetaMetaSel39 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "index")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "index")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName9
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "index")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel40
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "index")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel40
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "index")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel40
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
7316603abd757f327d2c06e153d1cfdb
  $s$fSelectorMetaMetaSel4 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "dataPoints")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "dataPoints")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "dataPoints")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "dataPoints")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "dataPoints")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
50c7f974bbee45086e339d041244b16d
  $s$fSelectorMetaMetaSel40 ::
    GHC.Generics.SingI ('GHC.Base.Just "index")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel41
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "index">_N) -}
408c02b5cc6184f4fc62a5d3e7dd9910
  $s$fSelectorMetaMetaSel41 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "index")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "index")
                   @ "index"
                   @~ <'GHC.Base.Just "index">_N
                   Datas.$s$fSelectorMetaMetaSel42
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"index">_N)) -}
78dc5e925ec193d5e5e043101ff23427
  $s$fSelectorMetaMetaSel42 :: GHC.Generics.R:SingSymbols "index"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "index"
                   Datas.$s$fSelectorMetaMetaSel43
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"index">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"index">_N))) -}
ac45d15f81b4a5223e258539319f34cd
  $s$fSelectorMetaMetaSel43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "index"#) -}
762b9e037506e5280355f2859b6dc52c
  $s$fSelectorMetaMetaSel44 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "dist")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "dist")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName10
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "dist")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel45
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "dist")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel45
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "dist")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel45
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
3c355943bd4fd30c14ac8fda1603b66d
  $s$fSelectorMetaMetaSel45 ::
    GHC.Generics.SingI ('GHC.Base.Just "dist")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel46
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "dist">_N) -}
9b4982670acb6f0196cf1090927f8084
  $s$fSelectorMetaMetaSel46 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "dist")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "dist")
                   @ "dist"
                   @~ <'GHC.Base.Just "dist">_N
                   Datas.$s$fSelectorMetaMetaSel47
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"dist">_N)) -}
9abb74878dfd1c1758ad79b12cd74e18
  $s$fSelectorMetaMetaSel47 :: GHC.Generics.R:SingSymbols "dist"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "dist"
                   Datas.$s$fSelectorMetaMetaSel48
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"dist">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"dist">_N))) -}
c6b237105fb4c06a83f898142bc79b64
  $s$fSelectorMetaMetaSel48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "dist"#) -}
c0ad608a0a92e5c914138ff8abbb4a94
  $s$fSelectorMetaMetaSel49 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "lng")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "lng")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName11
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "lng")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel50
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "lng")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel50
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "lng")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel50
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
9fb185c087fe872b66aace063bf0711a
  $s$fSelectorMetaMetaSel5 ::
    GHC.Generics.SingI ('GHC.Base.Just "dataPoints")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel6
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "dataPoints">_N) -}
bd7a712eb6ab979e63d3a98fb2e29ef9
  $s$fSelectorMetaMetaSel50 ::
    GHC.Generics.SingI ('GHC.Base.Just "lng")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel51
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "lng">_N) -}
4c1d0218aa4dceffc8b6a60244f512a1
  $s$fSelectorMetaMetaSel51 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "lng")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "lng")
                   @ "lng"
                   @~ <'GHC.Base.Just "lng">_N
                   Datas.$s$fSelectorMetaMetaSel52
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"lng">_N)) -}
05c58aa0111bd3fd7ba4b3401183af12
  $s$fSelectorMetaMetaSel52 :: GHC.Generics.R:SingSymbols "lng"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "lng"
                   Datas.$s$fSelectorMetaMetaSel53
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"lng">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"lng">_N))) -}
9c2a62987ba3d40a3b3bace7be965070
  $s$fSelectorMetaMetaSel53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "lng"#) -}
d17c95c17b77a85aa9a5d88cb72e15fc
  $s$fSelectorMetaMetaSel54 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "speed")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "speed")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName12
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "speed")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel55
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "speed")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel55
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "speed")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel55
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
963fe928639ea11fcbbf5639f6073b58
  $s$fSelectorMetaMetaSel55 ::
    GHC.Generics.SingI ('GHC.Base.Just "speed")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel56
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "speed">_N) -}
8199c863ce75912af93ddb0713b35e83
  $s$fSelectorMetaMetaSel56 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "speed")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "speed")
                   @ "speed"
                   @~ <'GHC.Base.Just "speed">_N
                   Datas.$s$fSelectorMetaMetaSel57
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"speed">_N)) -}
9bc249f6730f645a73a1cdb17da0c8e4
  $s$fSelectorMetaMetaSel57 :: GHC.Generics.R:SingSymbols "speed"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "speed"
                   Datas.$s$fSelectorMetaMetaSel58
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"speed">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"speed">_N))) -}
72fc6baf3f90944f0038446944fc1df2
  $s$fSelectorMetaMetaSel58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "speed"#) -}
8aaba8adc8d7070afe43fec94d407d9c
  $s$fSelectorMetaMetaSel59 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "lat")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "lat")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName13
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "lat")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel60
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "lat")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel60
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "lat")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel60
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
c232894600620d9a26e38cddc0ddf9e3
  $s$fSelectorMetaMetaSel6 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "dataPoints")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "dataPoints")
                   @ "dataPoints"
                   @~ <'GHC.Base.Just "dataPoints">_N
                   Datas.$s$fSelectorMetaMetaSel7
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"dataPoints">_N)) -}
e565defc91710ce34d7313c61e34a7ab
  $s$fSelectorMetaMetaSel60 ::
    GHC.Generics.SingI ('GHC.Base.Just "lat")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel61
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "lat">_N) -}
3c831bde5f988b2d7ebe8112d65f6a5e
  $s$fSelectorMetaMetaSel61 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "lat")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "lat")
                   @ "lat"
                   @~ <'GHC.Base.Just "lat">_N
                   Datas.$s$fSelectorMetaMetaSel62
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"lat">_N)) -}
5ecc224f4a02b218e6cb4d43ba5fa7c7
  $s$fSelectorMetaMetaSel62 :: GHC.Generics.R:SingSymbols "lat"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "lat"
                   Datas.$s$fSelectorMetaMetaSel63
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"lat">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"lat">_N))) -}
ba667c3b222d95dfee2507e75c96dd70
  $s$fSelectorMetaMetaSel63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "lat"#) -}
4a0dde314865ec4122014fb8f5b39b47
  $s$fSelectorMetaMetaSel7 :: GHC.Generics.R:SingSymbols "dataPoints"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "dataPoints"
                   Datas.$fToJSONQRes7
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"dataPoints">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"dataPoints">_N))) -}
96294bcc8f2998fd8df13613bee99528
  $s$fSelectorMetaMetaSel8 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "trips")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "trips")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName2
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "trips")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "trips")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "trips")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Datas.$s$fSelectorMetaMetaSel9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
eda3a01f6bb3c0b11dabb0b732fec474
  $s$fSelectorMetaMetaSel9 ::
    GHC.Generics.SingI ('GHC.Base.Just "trips")
  {- Unfolding: InlineRule (0, True, True)
                Datas.$s$fSelectorMetaMetaSel10
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "trips">_N) -}
8bbdb06ef1e76452a05a2b3700e175ab
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "aveLocation")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "aveLocation")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$fToJSONQRes4) -}
ed23962dac3f11282269f675898f15ce
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "dataPoints")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "dataPoints")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$fToJSONQRes7) -}
77294755a9962dbfd7957617686b7f1c
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName10 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "dist")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "dist")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$s$fSelectorMetaMetaSel48) -}
431f98d1545104167b909b6a2297efd6
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName11 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "lng")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "lng")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$s$fSelectorMetaMetaSel53) -}
8462ad4385c0aba336d3d4b28f7489a1
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName12 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "speed")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "speed")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$s$fSelectorMetaMetaSel58) -}
c67f50ff2149de055fc50e523926cf2d
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName13 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "lat")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "lat")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$s$fSelectorMetaMetaSel63) -}
6918f0be654aae90d23c5427a2ee2ff4
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName2 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "trips")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "trips")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$fToJSONQRes10) -}
5431192e98f611798a6e19ee97383ac6
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName3 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "aveSpeed")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "aveSpeed")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$fToJSONQRes13) -}
9ee22faf71190c74d185408c11128403
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName4 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "minSpeed")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "minSpeed")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$fToJSONQRes16) -}
98b353671abd32e354707ffc9b0e0145
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName5 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "maxSpeed")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "maxSpeed")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$fToJSONQRes19) -}
56ffb615e6caea8033b41b7ec93f28b8
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName6 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "tripInfo")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "tripInfo")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$s$fSelectorMetaMetaSel28) -}
9907b8ae839853c61971205345fb60da
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName7 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "sources")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "sources")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$s$fSelectorMetaMetaSel33) -}
465985137f00ed311f2e59c9a0efb49d
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName8 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "extremes")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "extremes")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$s$fSelectorMetaMetaSel38) -}
d0ee0abac49228de7414120c8e1503bd
  $s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName9 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "index")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "index")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Datas.$s$fSelectorMetaMetaSel43) -}
81c06d0f1ec2c67ec27a7106f2e84cef
  $s$fShow(,) :: GHC.Show.Show (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Types.Int)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     GHC.Show.$fShowInt
                     GHC.Show.$fShowInt)
                  Datas.$s$fShow(,)_$s$fShow(,)_$cshow
                  Datas.$s$fShow(,)_$s$fShow(,)_$cshowList -}
c040ce038f3784ec9b508df96cbb8d25
  $s$fShow(,)1 :: GHC.Show.Show (GHC.Types.Int, GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Types.Double)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ GHC.Types.Int
                     @ GHC.Types.Double
                     GHC.Show.$fShowInt
                     GHC.Float.$fShowDouble)
                  Datas.$s$fShow(,)_$s$fShow(,)_$cshow1
                  Datas.$s$fShow(,)_$s$fShow(,)_$cshowList1 -}
6add6887cdb636d62b8f68e9e814ce0a
  $s$fShow(,)2 :: GHC.Show.Show (GHC.Types.Double, GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Double, GHC.Types.Double)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     GHC.Float.$fShowDouble
                     GHC.Float.$fShowDouble)
                  Datas.$s$fShow(,)_$s$fShow(,)_$cshow2
                  Datas.$s$fShow(,)_$s$fShow(,)_$cshowList2 -}
60f0c12b2d2114feee4dcf92ed69befc
  $s$fShow(,)_$s$fShow(,)_$cshow ::
    (GHC.Types.Int, GHC.Types.Int) -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U(U),U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (GHC.Types.Int, GHC.Types.Int)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   GHC.Show.$fShowInt
                   GHC.Show.$fShowInt
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5b1294e0d5854841435ba8b5f8baf49e
  $s$fShow(,)_$s$fShow(,)_$cshow1 ::
    (GHC.Types.Int, GHC.Types.Double) -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (GHC.Types.Int, GHC.Types.Double)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ GHC.Types.Int
                   @ GHC.Types.Double
                   GHC.Show.$fShowInt
                   GHC.Float.$fShowDouble
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c976bef9f9436b18e03ac14f01d4cb64
  $s$fShow(,)_$s$fShow(,)_$cshow2 ::
    (GHC.Types.Double, GHC.Types.Double) -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (GHC.Types.Double, GHC.Types.Double)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ GHC.Types.Double
                   @ GHC.Types.Double
                   GHC.Float.$fShowDouble
                   GHC.Float.$fShowDouble
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e3b4e218a3ddfba1a82138519f5bc761
  $s$fShow(,)_$s$fShow(,)_$cshowList ::
    [(GHC.Types.Int, GHC.Types.Int)] -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [(GHC.Types.Int, GHC.Types.Int)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Types.Int, GHC.Types.Int)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ GHC.Types.Int
                      @ GHC.Types.Int
                      GHC.Show.$fShowInt
                      GHC.Show.$fShowInt
                      GHC.Show.shows22)
                   eta
                   eta1) -}
2496883bf715b11d86c0a234853e7dd5
  $s$fShow(,)_$s$fShow(,)_$cshowList1 ::
    [(GHC.Types.Int, GHC.Types.Double)] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [(GHC.Types.Int, GHC.Types.Double)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Types.Int, GHC.Types.Double)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ GHC.Types.Int
                      @ GHC.Types.Double
                      GHC.Show.$fShowInt
                      GHC.Float.$fShowDouble
                      GHC.Show.shows22)
                   eta
                   eta1) -}
48aee99df8f142617c76153301d71f22
  $s$fShow(,)_$s$fShow(,)_$cshowList2 ::
    [(GHC.Types.Double, GHC.Types.Double)] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [(GHC.Types.Double, GHC.Types.Double)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Types.Double, GHC.Types.Double)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ GHC.Types.Double
                      @ GHC.Types.Double
                      GHC.Float.$fShowDouble
                      GHC.Float.$fShowDouble
                      GHC.Show.shows22)
                   eta
                   eta1) -}
fd1cb5fbca7370e66327a7caf7c89d53
  $s$fToJSON(,) ::
    Data.Aeson.Types.ToJSON.ToJSON (GHC.Types.Int, GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Types.Double)
                  (\ (eta :: (GHC.Types.Int, GHC.Types.Double)) ->
                   case eta of wild { (,) a2 b1 ->
                   GHC.Base.$
                     @ 'GHC.Types.PtrRepLifted
                     @ Data.Aeson.Types.Internal.Array
                     @ Data.Aeson.Types.Internal.Value
                     Data.Aeson.Types.Internal.$WArray
                     (GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (forall s.
                           GHC.ST.ST
                             s (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value))
                        @ Data.Aeson.Types.Internal.Array
                        (Data.Vector.create @ Data.Aeson.Types.Internal.Value)
                        (\ @ s (s1 :: GHC.Prim.State# s)[OneShot] ->
                         case (GHC.Base.$
                                 @ 'GHC.Types.PtrRepLifted
                                 @ (GHC.ST.ST
                                      s
                                      (Data.Vector.Mutable.MVector
                                         (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         Data.Aeson.Types.Internal.Value))
                                 @ (GHC.ST.ST
                                      s
                                      (Data.Vector.Mutable.MVector
                                         (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         Data.Aeson.Types.Internal.Value))
                                 (Data.Vector.Internal.Check.checkLength
                                    @ (GHC.ST.ST
                                         s
                                         (Data.Vector.Mutable.MVector
                                            (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                            Data.Aeson.Types.Internal.Value))
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b2 ->
                                        GHC.CString.unpackFoldrCString#
                                          @ b2
                                          ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                    (GHC.Types.I# 591#)
                                    Data.Vector.Internal.Check.Unsafe
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b2 ->
                                        GHC.CString.unpackFoldrCString# @ b2 "unsafeNew"#))
                                    (GHC.Types.I# 2#))
                                 (\ (s2 :: GHC.Prim.State# s)[OneShot] ->
                                  case GHC.Prim.newArray#
                                         @ Data.Aeson.Types.Internal.Value
                                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         2#
                                         (Data.Vector.Mutable.uninitialised
                                            @ Data.Aeson.Types.Internal.Value)
                                         s2
                                           `cast`
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                      <s>_N)))_R of ds7 { (#,#) ipv ipv1 ->
                                  (GHC.ST.$fMonadST_$creturn
                                     @ s
                                     @ (Data.Vector.Mutable.MVector
                                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                          Data.Aeson.Types.Internal.Value)
                                     (Data.Vector.Mutable.MVector
                                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        @ Data.Aeson.Types.Internal.Value
                                        0#
                                        2#
                                        ipv1))
                                    `cast`
                                  (GHC.ST.N:ST[0]
                                       <s>_N
                                       <Data.Vector.Mutable.MVector
                                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                          Data.Aeson.Types.Internal.Value>_R)
                                    ipv
                                      `cast`
                                    (GHC.Prim.State#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))_R })
                                   `cast`
                                 (Sym (GHC.ST.N:ST[0]
                                           <s>_N
                                           <Data.Vector.Mutable.MVector
                                              (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                              Data.Aeson.Types.Internal.Value>_R)))
                                `cast`
                              (GHC.ST.N:ST[0]
                                   <s>_N
                                   (Data.Vector.Mutable.MVector
                                      (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N)
                                      <Data.Aeson.Types.Internal.Value>_R)_R)
                                s1 of ds7 { (#,#) ipv ipv1 ->
                         let {
                           eta1 :: GHC.Types.Int = GHC.Types.I# 0#
                         } in
                         (GHC.ST.$fMonadST_$c>>
                            @ s
                            @ ()
                            @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                            (GHC.Base.$
                               @ 'GHC.Types.PtrRepLifted
                               @ (GHC.ST.ST s ())
                               @ (GHC.ST.ST s ())
                               (Data.Vector.Internal.Check.checkIndex
                                  @ (GHC.ST.ST s ())
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b2 ->
                                      GHC.CString.unpackFoldrCString#
                                        @ b2
                                        ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                  (GHC.Types.I# 729#)
                                  Data.Vector.Internal.Check.Unsafe
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b2 ->
                                      GHC.CString.unpackFoldrCString# @ b2 "unsafeWrite"#))
                                  eta1
                                  (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                     @ Data.Aeson.Types.Internal.Value
                                     @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                     ipv1
                                       `cast`
                                     (Data.Vector.Mutable.MVector
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                        <Data.Aeson.Types.Internal.Value>_R)_R))
                               (case ipv1
                                       `cast`
                                     (Data.Vector.Mutable.MVector
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                        <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                case GHC.Num.$fNumInt_$c+
                                       (GHC.Types.I# dt1)
                                       eta1 of wild2 { GHC.Types.I# i# ->
                                (\ (s# :: GHC.Prim.State#
                                            (Control.Monad.Primitive.PrimState
                                               (GHC.ST.ST s)))[OneShot] ->
                                 case Data.Primitive.Array.marray#
                                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        @ Data.Aeson.Types.Internal.Value
                                        (Data.Primitive.Array.MutableArray
                                           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                           @ Data.Aeson.Types.Internal.Value
                                           dt3) of wild3 { DEFAULT ->
                                 case GHC.Prim.writeArray#
                                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        @ Data.Aeson.Types.Internal.Value
                                        wild3
                                        i#
                                        (case GHC.Real.fromIntegral
                                                @ GHC.Types.Int
                                                @ Data.Scientific.Scientific
                                                GHC.Real.$fIntegralInt
                                                Data.Scientific.$fNumScientific
                                                a2 of dt4 { Data.Scientific.Scientific ipv2 ipv3 ->
                                         Data.Aeson.Types.Internal.Number dt4 })
                                        s# of s'# { DEFAULT ->
                                 (# s'#, GHC.Tuple.() #) } })
                                  `cast`
                                (Sym (GHC.ST.N:ST[0]
                                          (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                          <()>_R)) } }))
                            (GHC.ST.$fMonadST_$c>>
                               @ s
                               @ ()
                               @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                               (let {
                                  eta2 :: GHC.Types.Int = GHC.Types.I# 1#
                                } in
                                GHC.Base.$
                                  @ 'GHC.Types.PtrRepLifted
                                  @ (GHC.ST.ST s ())
                                  @ (GHC.ST.ST s ())
                                  (Data.Vector.Internal.Check.checkIndex
                                     @ (GHC.ST.ST s ())
                                     (GHC.Base.build
                                        @ GHC.Types.Char
                                        (\ @ b2 ->
                                         GHC.CString.unpackFoldrCString#
                                           @ b2
                                           ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                     (GHC.Types.I# 729#)
                                     Data.Vector.Internal.Check.Unsafe
                                     (GHC.Base.build
                                        @ GHC.Types.Char
                                        (\ @ b2 ->
                                         GHC.CString.unpackFoldrCString# @ b2 "unsafeWrite"#))
                                     eta2
                                     (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                        @ Data.Aeson.Types.Internal.Value
                                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        ipv1
                                          `cast`
                                        (Data.Vector.Mutable.MVector
                                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                           <Data.Aeson.Types.Internal.Value>_R)_R))
                                  (case ipv1
                                          `cast`
                                        (Data.Vector.Mutable.MVector
                                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                           <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                   case GHC.Num.$fNumInt_$c+
                                          (GHC.Types.I# dt1)
                                          eta2 of wild2 { GHC.Types.I# i# ->
                                   (\ (s# :: GHC.Prim.State#
                                               (Control.Monad.Primitive.PrimState
                                                  (GHC.ST.ST s)))[OneShot] ->
                                    case Data.Primitive.Array.marray#
                                           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                           @ Data.Aeson.Types.Internal.Value
                                           (Data.Primitive.Array.MutableArray
                                              @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                              @ Data.Aeson.Types.Internal.Value
                                              dt3) of wild3 { DEFAULT ->
                                    case GHC.Prim.writeArray#
                                           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                           @ Data.Aeson.Types.Internal.Value
                                           wild3
                                           i#
                                           (Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON
                                              b1)
                                           s# of s'# { DEFAULT ->
                                    (# s'#, GHC.Tuple.() #) } })
                                     `cast`
                                   (Sym (GHC.ST.N:ST[0]
                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                       <s>_N))
                                             <()>_R)) } }))
                               (GHC.ST.$fMonadST_$creturn
                                  @ s
                                  @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                                  ipv1)))
                           `cast`
                         (GHC.ST.N:ST[0]
                              <s>_N
                              <Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value>_R)
                           ipv })
                          `cast`
                        (forall (s :: <*>_N).
                         Sym (GHC.ST.N:ST[0]
                                  <s>_N
                                  <Data.Vector.Mutable.MVector
                                     s Data.Aeson.Types.Internal.Value>_R))) })
                  (\ (eta :: (GHC.Types.Int, GHC.Types.Double)) ->
                   case eta of wild { (,) a2 b1 ->
                   case GHC.Base.build
                          @ Data.Aeson.Encoding.Internal.Encoding
                          (\ @ a3
                             (c :: Data.Aeson.Encoding.Internal.Encoding -> a3 -> a3)[OneShot]
                             (n :: a3)[OneShot] ->
                           c (Data.Aeson.Encoding.Internal.int a2)
                             (c (Data.Aeson.Encoding.Internal.double b1) n)) of wild1 {
                     [] -> Data.Aeson.Encoding.Internal.emptyArray_
                     : x xs
                     -> (Data.ByteString.Builder.Internal.append
                           (Data.Aeson.Encoding.Internal.openBracket
                              @ Data.Aeson.Types.Internal.Value)
                             `cast`
                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)
                           (Data.ByteString.Builder.Internal.append
                              (GHC.Base.id @ Data.Aeson.Encoding.Internal.Encoding x)
                                `cast`
                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                   <Data.Aeson.Types.Internal.Value>_P)
                              (Data.ByteString.Builder.Internal.append
                                 (GHC.Base.foldr
                                    @ Data.Aeson.Encoding.Internal.Encoding
                                    @ (Data.Aeson.Encoding.Internal.Encoding'
                                         Data.Aeson.Types.Internal.Value)
                                    (\ (v :: Data.Aeson.Encoding.Internal.Encoding)
                                       (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                Data.Aeson.Types.Internal.Value)[OneShot] ->
                                     Data.ByteString.Builder.Internal.append
                                       (Data.Aeson.Encoding.Internal.comma
                                          @ Data.Aeson.Types.Internal.Value)
                                         `cast`
                                       (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                            <Data.Aeson.Types.Internal.Value>_P)
                                       (Data.ByteString.Builder.Internal.append
                                          (GHC.Base.id @ Data.Aeson.Encoding.Internal.Encoding v)
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)
                                          vs
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)))
                                      `cast`
                                    (<Data.Aeson.Encoding.Internal.Encoding>_R
                                     ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value>_R
                                     ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P))
                                    (Data.Aeson.Encoding.Internal.empty
                                       @ Data.Aeson.Types.Internal.Value)
                                    xs)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)
                                 (Data.Aeson.Encoding.Internal.closeBracket
                                    @ Data.Aeson.Types.Internal.Value)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P))))
                          `cast`
                        (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                  <Data.Aeson.Types.Internal.Value>_P)) } })
                  (\ (eta :: [(GHC.Types.Int, GHC.Types.Double)]) ->
                   case Data.Vector.Generic.new
                          @ Data.Vector.Vector
                          @ Data.Aeson.Types.Internal.Value
                          (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                          (Data.Vector.Generic.New.unstream
                             @ Data.Vector.Vector
                             @ Data.Aeson.Types.Internal.Value
                             (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                             (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                @ Data.Vector.Fusion.Util.Id
                                @ Data.Aeson.Types.Internal.Value
                                @ Data.Vector.Vector
                                Data.Vector.Fusion.Util.$fMonadId
                                Data.Vector.Fusion.Bundle.Size.Unknown
                                (GHC.Base.build
                                   @ Data.Aeson.Types.Internal.Value
                                   (\ @ b1
                                      (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                      (n :: b1)[OneShot] ->
                                    GHC.Base.foldr
                                      @ (GHC.Types.Int, GHC.Types.Double)
                                      @ b1
                                      (GHC.Base.mapFB
                                         @ Data.Aeson.Types.Internal.Value
                                         @ b1
                                         @ (GHC.Types.Int, GHC.Types.Double)
                                         c
                                         (\ (eta1 :: (GHC.Types.Int, GHC.Types.Double)) ->
                                          case eta1 of wild { (,) a2 b2 ->
                                          GHC.Base.$
                                            @ 'GHC.Types.PtrRepLifted
                                            @ Data.Aeson.Types.Internal.Array
                                            @ Data.Aeson.Types.Internal.Value
                                            Data.Aeson.Types.Internal.$WArray
                                            (GHC.Base.$
                                               @ 'GHC.Types.PtrRepLifted
                                               @ (forall s.
                                                  GHC.ST.ST
                                                    s
                                                    (Data.Vector.Mutable.MVector
                                                       s Data.Aeson.Types.Internal.Value))
                                               @ Data.Aeson.Types.Internal.Array
                                               (Data.Vector.create
                                                  @ Data.Aeson.Types.Internal.Value)
                                               (\ @ s (s1 :: GHC.Prim.State# s)[OneShot] ->
                                                case (GHC.Base.$
                                                        @ 'GHC.Types.PtrRepLifted
                                                        @ (GHC.ST.ST
                                                             s
                                                             (Data.Vector.Mutable.MVector
                                                                (Control.Monad.Primitive.PrimState
                                                                   (GHC.ST.ST s))
                                                                Data.Aeson.Types.Internal.Value))
                                                        @ (GHC.ST.ST
                                                             s
                                                             (Data.Vector.Mutable.MVector
                                                                (Control.Monad.Primitive.PrimState
                                                                   (GHC.ST.ST s))
                                                                Data.Aeson.Types.Internal.Value))
                                                        (Data.Vector.Internal.Check.checkLength
                                                           @ (GHC.ST.ST
                                                                s
                                                                (Data.Vector.Mutable.MVector
                                                                   (Control.Monad.Primitive.PrimState
                                                                      (GHC.ST.ST s))
                                                                   Data.Aeson.Types.Internal.Value))
                                                           (GHC.Base.build
                                                              @ GHC.Types.Char
                                                              (\ @ b3 ->
                                                               GHC.CString.unpackFoldrCString#
                                                                 @ b3
                                                                 ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                                           (GHC.Types.I# 591#)
                                                           Data.Vector.Internal.Check.Unsafe
                                                           (GHC.Base.build
                                                              @ GHC.Types.Char
                                                              (\ @ b3 ->
                                                               GHC.CString.unpackFoldrCString#
                                                                 @ b3
                                                                 "unsafeNew"#))
                                                           (GHC.Types.I# 2#))
                                                        (\ (s2 :: GHC.Prim.State# s)[OneShot] ->
                                                         case GHC.Prim.newArray#
                                                                @ Data.Aeson.Types.Internal.Value
                                                                @ (Control.Monad.Primitive.PrimState
                                                                     (GHC.ST.ST s))
                                                                2#
                                                                (Data.Vector.Mutable.uninitialised
                                                                   @ Data.Aeson.Types.Internal.Value)
                                                                s2
                                                                  `cast`
                                                                (GHC.Prim.State#
                                                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                             <s>_N)))_R of ds7 { (#,#) ipv ipv1 ->
                                                         (GHC.ST.$fMonadST_$creturn
                                                            @ s
                                                            @ (Data.Vector.Mutable.MVector
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                                 Data.Aeson.Types.Internal.Value)
                                                            (Data.Vector.Mutable.MVector
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                               @ Data.Aeson.Types.Internal.Value
                                                               0#
                                                               2#
                                                               ipv1))
                                                           `cast`
                                                         (GHC.ST.N:ST[0]
                                                              <s>_N
                                                              <Data.Vector.Mutable.MVector
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                                 Data.Aeson.Types.Internal.Value>_R)
                                                           ipv
                                                             `cast`
                                                           (GHC.Prim.State#
                                                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                   <s>_N))_R })
                                                          `cast`
                                                        (Sym (GHC.ST.N:ST[0]
                                                                  <s>_N
                                                                  <Data.Vector.Mutable.MVector
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST s))
                                                                     Data.Aeson.Types.Internal.Value>_R)))
                                                       `cast`
                                                     (GHC.ST.N:ST[0]
                                                          <s>_N
                                                          (Data.Vector.Mutable.MVector
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <s>_N)
                                                             <Data.Aeson.Types.Internal.Value>_R)_R)
                                                       s1 of ds7 { (#,#) ipv ipv1 ->
                                                let {
                                                  eta2 :: GHC.Types.Int = GHC.Types.I# 0#
                                                } in
                                                (GHC.ST.$fMonadST_$c>>
                                                   @ s
                                                   @ ()
                                                   @ (Data.Vector.Mutable.MVector
                                                        s Data.Aeson.Types.Internal.Value)
                                                   (GHC.Base.$
                                                      @ 'GHC.Types.PtrRepLifted
                                                      @ (GHC.ST.ST s ())
                                                      @ (GHC.ST.ST s ())
                                                      (Data.Vector.Internal.Check.checkIndex
                                                         @ (GHC.ST.ST s ())
                                                         (GHC.Base.build
                                                            @ GHC.Types.Char
                                                            (\ @ b3 ->
                                                             GHC.CString.unpackFoldrCString#
                                                               @ b3
                                                               ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                                         (GHC.Types.I# 729#)
                                                         Data.Vector.Internal.Check.Unsafe
                                                         (GHC.Base.build
                                                            @ GHC.Types.Char
                                                            (\ @ b3 ->
                                                             GHC.CString.unpackFoldrCString#
                                                               @ b3
                                                               "unsafeWrite"#))
                                                         eta2
                                                         (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                                            @ Data.Aeson.Types.Internal.Value
                                                            @ (Control.Monad.Primitive.PrimState
                                                                 (GHC.ST.ST s))
                                                            ipv1
                                                              `cast`
                                                            (Data.Vector.Mutable.MVector
                                                               (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                         <s>_N))
                                                               <Data.Aeson.Types.Internal.Value>_R)_R))
                                                      (case ipv1
                                                              `cast`
                                                            (Data.Vector.Mutable.MVector
                                                               (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                         <s>_N))
                                                               <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                                       case GHC.Num.$fNumInt_$c+
                                                              (GHC.Types.I# dt1)
                                                              eta2 of wild2 { GHC.Types.I# i# ->
                                                       (\ (s# :: GHC.Prim.State#
                                                                   (Control.Monad.Primitive.PrimState
                                                                      (GHC.ST.ST s)))[OneShot] ->
                                                        case Data.Primitive.Array.marray#
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                               @ Data.Aeson.Types.Internal.Value
                                                               (Data.Primitive.Array.MutableArray
                                                                  @ (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST s))
                                                                  @ Data.Aeson.Types.Internal.Value
                                                                  dt3) of wild3 { DEFAULT ->
                                                        case GHC.Prim.writeArray#
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                               @ Data.Aeson.Types.Internal.Value
                                                               wild3
                                                               i#
                                                               (case GHC.Real.fromIntegral
                                                                       @ GHC.Types.Int
                                                                       @ Data.Scientific.Scientific
                                                                       GHC.Real.$fIntegralInt
                                                                       Data.Scientific.$fNumScientific
                                                                       a2 of dt4 { Data.Scientific.Scientific ipv2 ipv3 ->
                                                                Data.Aeson.Types.Internal.Number
                                                                  dt4 })
                                                               s# of s'# { DEFAULT ->
                                                        (# s'#, GHC.Tuple.() #) } })
                                                         `cast`
                                                       (Sym (GHC.ST.N:ST[0]
                                                                 (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                           <s>_N))
                                                                 <()>_R)) } }))
                                                   (GHC.ST.$fMonadST_$c>>
                                                      @ s
                                                      @ ()
                                                      @ (Data.Vector.Mutable.MVector
                                                           s Data.Aeson.Types.Internal.Value)
                                                      (let {
                                                         eta3 :: GHC.Types.Int = GHC.Types.I# 1#
                                                       } in
                                                       GHC.Base.$
                                                         @ 'GHC.Types.PtrRepLifted
                                                         @ (GHC.ST.ST s ())
                                                         @ (GHC.ST.ST s ())
                                                         (Data.Vector.Internal.Check.checkIndex
                                                            @ (GHC.ST.ST s ())
                                                            (GHC.Base.build
                                                               @ GHC.Types.Char
                                                               (\ @ b3 ->
                                                                GHC.CString.unpackFoldrCString#
                                                                  @ b3
                                                                  ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                                            (GHC.Types.I# 729#)
                                                            Data.Vector.Internal.Check.Unsafe
                                                            (GHC.Base.build
                                                               @ GHC.Types.Char
                                                               (\ @ b3 ->
                                                                GHC.CString.unpackFoldrCString#
                                                                  @ b3
                                                                  "unsafeWrite"#))
                                                            eta3
                                                            (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                                               @ Data.Aeson.Types.Internal.Value
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                               ipv1
                                                                 `cast`
                                                               (Data.Vector.Mutable.MVector
                                                                  (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                            <s>_N))
                                                                  <Data.Aeson.Types.Internal.Value>_R)_R))
                                                         (case ipv1
                                                                 `cast`
                                                               (Data.Vector.Mutable.MVector
                                                                  (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                            <s>_N))
                                                                  <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                                          case GHC.Num.$fNumInt_$c+
                                                                 (GHC.Types.I# dt1)
                                                                 eta3 of wild2 { GHC.Types.I# i# ->
                                                          (\ (s# :: GHC.Prim.State#
                                                                      (Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST s)))[OneShot] ->
                                                           case Data.Primitive.Array.marray#
                                                                  @ (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST s))
                                                                  @ Data.Aeson.Types.Internal.Value
                                                                  (Data.Primitive.Array.MutableArray
                                                                     @ (Control.Monad.Primitive.PrimState
                                                                          (GHC.ST.ST s))
                                                                     @ Data.Aeson.Types.Internal.Value
                                                                     dt3) of wild3 { DEFAULT ->
                                                           case GHC.Prim.writeArray#
                                                                  @ (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST s))
                                                                  @ Data.Aeson.Types.Internal.Value
                                                                  wild3
                                                                  i#
                                                                  (Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON
                                                                     b2)
                                                                  s# of s'# { DEFAULT ->
                                                           (# s'#, GHC.Tuple.() #) } })
                                                            `cast`
                                                          (Sym (GHC.ST.N:ST[0]
                                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                              <s>_N))
                                                                    <()>_R)) } }))
                                                      (GHC.ST.$fMonadST_$creturn
                                                         @ s
                                                         @ (Data.Vector.Mutable.MVector
                                                              s Data.Aeson.Types.Internal.Value)
                                                         ipv1)))
                                                  `cast`
                                                (GHC.ST.N:ST[0]
                                                     <s>_N
                                                     <Data.Vector.Mutable.MVector
                                                        s Data.Aeson.Types.Internal.Value>_R)
                                                  ipv })
                                                 `cast`
                                               (forall (s :: <*>_N).
                                                Sym (GHC.ST.N:ST[0]
                                                         <s>_N
                                                         <Data.Vector.Mutable.MVector
                                                            s
                                                            Data.Aeson.Types.Internal.Value>_R))) }))
                                      n
                                      eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                   Data.Aeson.Types.Internal.Array dt1 })
                  (\ (eta :: [(GHC.Types.Int, GHC.Types.Double)]) ->
                   let {
                     ds7 :: (GHC.Types.Int, GHC.Types.Double)
                            -> Data.Aeson.Encoding.Internal.Encoding
                       {- Arity: 1 -}
                     = \ (eta1 :: (GHC.Types.Int, GHC.Types.Double)) ->
                       case eta1 of wild { (,) a2 b1 ->
                       case GHC.Base.build
                              @ Data.Aeson.Encoding.Internal.Encoding
                              (\ @ a3
                                 (c :: Data.Aeson.Encoding.Internal.Encoding -> a3 -> a3)[OneShot]
                                 (n :: a3)[OneShot] ->
                               c (Data.Aeson.Encoding.Internal.int a2)
                                 (c (Data.Aeson.Encoding.Internal.double b1) n)) of wild1 {
                         [] -> Data.Aeson.Encoding.Internal.emptyArray_
                         : x xs
                         -> (Data.ByteString.Builder.Internal.append
                               (Data.Aeson.Encoding.Internal.openBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.ByteString.Builder.Internal.append
                                  (GHC.Base.id @ Data.Aeson.Encoding.Internal.Encoding x)
                                    `cast`
                                  (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                       <Data.Aeson.Types.Internal.Value>_P)
                                  (Data.ByteString.Builder.Internal.append
                                     (GHC.Base.foldr
                                        @ Data.Aeson.Encoding.Internal.Encoding
                                        @ (Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value)
                                        (\ (v :: Data.Aeson.Encoding.Internal.Encoding)
                                           (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                    Data.Aeson.Types.Internal.Value)[OneShot] ->
                                         Data.ByteString.Builder.Internal.append
                                           (Data.Aeson.Encoding.Internal.comma
                                              @ Data.Aeson.Types.Internal.Value)
                                             `cast`
                                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                <Data.Aeson.Types.Internal.Value>_P)
                                           (Data.ByteString.Builder.Internal.append
                                              (GHC.Base.id
                                                 @ Data.Aeson.Encoding.Internal.Encoding
                                                 v)
                                                `cast`
                                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P)
                                              vs
                                                `cast`
                                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P)))
                                          `cast`
                                        (<Data.Aeson.Encoding.Internal.Encoding>_R
                                         ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                                 Data.Aeson.Types.Internal.Value>_R
                                         ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                       <Data.Aeson.Types.Internal.Value>_P))
                                        (Data.Aeson.Encoding.Internal.empty
                                           @ Data.Aeson.Types.Internal.Value)
                                        xs)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.Aeson.Encoding.Internal.closeBracket
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P))))
                              `cast`
                            (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)) } }
                   } in
                   case eta of wild {
                     [] -> Data.Aeson.Encoding.Internal.emptyArray_
                     : x xs
                     -> (Data.ByteString.Builder.Internal.append
                           (Data.Aeson.Encoding.Internal.openBracket
                              @ Data.Aeson.Types.Internal.Value)
                             `cast`
                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)
                           (Data.ByteString.Builder.Internal.append
                              (ds7 x)
                                `cast`
                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                   <Data.Aeson.Types.Internal.Value>_P)
                              (Data.ByteString.Builder.Internal.append
                                 (GHC.Base.foldr
                                    @ (GHC.Types.Int, GHC.Types.Double)
                                    @ (Data.Aeson.Encoding.Internal.Encoding'
                                         Data.Aeson.Types.Internal.Value)
                                    (\ (v :: (GHC.Types.Int, GHC.Types.Double))
                                       (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                Data.Aeson.Types.Internal.Value)[OneShot] ->
                                     Data.ByteString.Builder.Internal.append
                                       (Data.Aeson.Encoding.Internal.comma
                                          @ Data.Aeson.Types.Internal.Value)
                                         `cast`
                                       (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                            <Data.Aeson.Types.Internal.Value>_P)
                                       (Data.ByteString.Builder.Internal.append
                                          (ds7 v)
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)
                                          vs
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)))
                                      `cast`
                                    (<(GHC.Types.Int, GHC.Types.Double)>_R
                                     ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value>_R
                                     ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P))
                                    (Data.Aeson.Encoding.Internal.empty
                                       @ Data.Aeson.Types.Internal.Value)
                                    xs)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)
                                 (Data.Aeson.Encoding.Internal.closeBracket
                                    @ Data.Aeson.Types.Internal.Value)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P))))
                          `cast`
                        (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                  <Data.Aeson.Types.Internal.Value>_P)) }) -}
29c55cc14ac70739d0b6cbfb434854b0
  $s$fToJSON(,)1 ::
    Data.Aeson.Types.ToJSON.ToJSON (GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Types.Int)
                  (\ (eta :: (GHC.Types.Int, GHC.Types.Int)) ->
                   case eta of wild { (,) a2 b1 ->
                   GHC.Base.$
                     @ 'GHC.Types.PtrRepLifted
                     @ Data.Aeson.Types.Internal.Array
                     @ Data.Aeson.Types.Internal.Value
                     Data.Aeson.Types.Internal.$WArray
                     (GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (forall s.
                           GHC.ST.ST
                             s (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value))
                        @ Data.Aeson.Types.Internal.Array
                        (Data.Vector.create @ Data.Aeson.Types.Internal.Value)
                        (\ @ s (s1 :: GHC.Prim.State# s)[OneShot] ->
                         case (GHC.Base.$
                                 @ 'GHC.Types.PtrRepLifted
                                 @ (GHC.ST.ST
                                      s
                                      (Data.Vector.Mutable.MVector
                                         (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         Data.Aeson.Types.Internal.Value))
                                 @ (GHC.ST.ST
                                      s
                                      (Data.Vector.Mutable.MVector
                                         (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         Data.Aeson.Types.Internal.Value))
                                 (Data.Vector.Internal.Check.checkLength
                                    @ (GHC.ST.ST
                                         s
                                         (Data.Vector.Mutable.MVector
                                            (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                            Data.Aeson.Types.Internal.Value))
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b2 ->
                                        GHC.CString.unpackFoldrCString#
                                          @ b2
                                          ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                    (GHC.Types.I# 591#)
                                    Data.Vector.Internal.Check.Unsafe
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b2 ->
                                        GHC.CString.unpackFoldrCString# @ b2 "unsafeNew"#))
                                    (GHC.Types.I# 2#))
                                 (\ (s2 :: GHC.Prim.State# s)[OneShot] ->
                                  case GHC.Prim.newArray#
                                         @ Data.Aeson.Types.Internal.Value
                                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         2#
                                         (Data.Vector.Mutable.uninitialised
                                            @ Data.Aeson.Types.Internal.Value)
                                         s2
                                           `cast`
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                      <s>_N)))_R of ds7 { (#,#) ipv ipv1 ->
                                  (GHC.ST.$fMonadST_$creturn
                                     @ s
                                     @ (Data.Vector.Mutable.MVector
                                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                          Data.Aeson.Types.Internal.Value)
                                     (Data.Vector.Mutable.MVector
                                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        @ Data.Aeson.Types.Internal.Value
                                        0#
                                        2#
                                        ipv1))
                                    `cast`
                                  (GHC.ST.N:ST[0]
                                       <s>_N
                                       <Data.Vector.Mutable.MVector
                                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                          Data.Aeson.Types.Internal.Value>_R)
                                    ipv
                                      `cast`
                                    (GHC.Prim.State#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))_R })
                                   `cast`
                                 (Sym (GHC.ST.N:ST[0]
                                           <s>_N
                                           <Data.Vector.Mutable.MVector
                                              (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                              Data.Aeson.Types.Internal.Value>_R)))
                                `cast`
                              (GHC.ST.N:ST[0]
                                   <s>_N
                                   (Data.Vector.Mutable.MVector
                                      (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N)
                                      <Data.Aeson.Types.Internal.Value>_R)_R)
                                s1 of ds7 { (#,#) ipv ipv1 ->
                         let {
                           eta1 :: GHC.Types.Int = GHC.Types.I# 0#
                         } in
                         (GHC.ST.$fMonadST_$c>>
                            @ s
                            @ ()
                            @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                            (GHC.Base.$
                               @ 'GHC.Types.PtrRepLifted
                               @ (GHC.ST.ST s ())
                               @ (GHC.ST.ST s ())
                               (Data.Vector.Internal.Check.checkIndex
                                  @ (GHC.ST.ST s ())
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b2 ->
                                      GHC.CString.unpackFoldrCString#
                                        @ b2
                                        ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                  (GHC.Types.I# 729#)
                                  Data.Vector.Internal.Check.Unsafe
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b2 ->
                                      GHC.CString.unpackFoldrCString# @ b2 "unsafeWrite"#))
                                  eta1
                                  (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                     @ Data.Aeson.Types.Internal.Value
                                     @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                     ipv1
                                       `cast`
                                     (Data.Vector.Mutable.MVector
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                        <Data.Aeson.Types.Internal.Value>_R)_R))
                               (case ipv1
                                       `cast`
                                     (Data.Vector.Mutable.MVector
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                        <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                case GHC.Num.$fNumInt_$c+
                                       (GHC.Types.I# dt1)
                                       eta1 of wild2 { GHC.Types.I# i# ->
                                (\ (s# :: GHC.Prim.State#
                                            (Control.Monad.Primitive.PrimState
                                               (GHC.ST.ST s)))[OneShot] ->
                                 case Data.Primitive.Array.marray#
                                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        @ Data.Aeson.Types.Internal.Value
                                        (Data.Primitive.Array.MutableArray
                                           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                           @ Data.Aeson.Types.Internal.Value
                                           dt3) of wild3 { DEFAULT ->
                                 case GHC.Prim.writeArray#
                                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        @ Data.Aeson.Types.Internal.Value
                                        wild3
                                        i#
                                        (case GHC.Real.fromIntegral
                                                @ GHC.Types.Int
                                                @ Data.Scientific.Scientific
                                                GHC.Real.$fIntegralInt
                                                Data.Scientific.$fNumScientific
                                                a2 of dt4 { Data.Scientific.Scientific ipv2 ipv3 ->
                                         Data.Aeson.Types.Internal.Number dt4 })
                                        s# of s'# { DEFAULT ->
                                 (# s'#, GHC.Tuple.() #) } })
                                  `cast`
                                (Sym (GHC.ST.N:ST[0]
                                          (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                          <()>_R)) } }))
                            (GHC.ST.$fMonadST_$c>>
                               @ s
                               @ ()
                               @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                               (let {
                                  eta2 :: GHC.Types.Int = GHC.Types.I# 1#
                                } in
                                GHC.Base.$
                                  @ 'GHC.Types.PtrRepLifted
                                  @ (GHC.ST.ST s ())
                                  @ (GHC.ST.ST s ())
                                  (Data.Vector.Internal.Check.checkIndex
                                     @ (GHC.ST.ST s ())
                                     (GHC.Base.build
                                        @ GHC.Types.Char
                                        (\ @ b2 ->
                                         GHC.CString.unpackFoldrCString#
                                           @ b2
                                           ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                     (GHC.Types.I# 729#)
                                     Data.Vector.Internal.Check.Unsafe
                                     (GHC.Base.build
                                        @ GHC.Types.Char
                                        (\ @ b2 ->
                                         GHC.CString.unpackFoldrCString# @ b2 "unsafeWrite"#))
                                     eta2
                                     (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                        @ Data.Aeson.Types.Internal.Value
                                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        ipv1
                                          `cast`
                                        (Data.Vector.Mutable.MVector
                                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                           <Data.Aeson.Types.Internal.Value>_R)_R))
                                  (case ipv1
                                          `cast`
                                        (Data.Vector.Mutable.MVector
                                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                           <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                   case GHC.Num.$fNumInt_$c+
                                          (GHC.Types.I# dt1)
                                          eta2 of wild2 { GHC.Types.I# i# ->
                                   (\ (s# :: GHC.Prim.State#
                                               (Control.Monad.Primitive.PrimState
                                                  (GHC.ST.ST s)))[OneShot] ->
                                    case Data.Primitive.Array.marray#
                                           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                           @ Data.Aeson.Types.Internal.Value
                                           (Data.Primitive.Array.MutableArray
                                              @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                              @ Data.Aeson.Types.Internal.Value
                                              dt3) of wild3 { DEFAULT ->
                                    case GHC.Prim.writeArray#
                                           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                           @ Data.Aeson.Types.Internal.Value
                                           wild3
                                           i#
                                           (case GHC.Real.fromIntegral
                                                   @ GHC.Types.Int
                                                   @ Data.Scientific.Scientific
                                                   GHC.Real.$fIntegralInt
                                                   Data.Scientific.$fNumScientific
                                                   b1 of dt4 { Data.Scientific.Scientific ipv2 ipv3 ->
                                            Data.Aeson.Types.Internal.Number dt4 })
                                           s# of s'# { DEFAULT ->
                                    (# s'#, GHC.Tuple.() #) } })
                                     `cast`
                                   (Sym (GHC.ST.N:ST[0]
                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                       <s>_N))
                                             <()>_R)) } }))
                               (GHC.ST.$fMonadST_$creturn
                                  @ s
                                  @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                                  ipv1)))
                           `cast`
                         (GHC.ST.N:ST[0]
                              <s>_N
                              <Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value>_R)
                           ipv })
                          `cast`
                        (forall (s :: <*>_N).
                         Sym (GHC.ST.N:ST[0]
                                  <s>_N
                                  <Data.Vector.Mutable.MVector
                                     s Data.Aeson.Types.Internal.Value>_R))) })
                  (\ (eta :: (GHC.Types.Int, GHC.Types.Int)) ->
                   case eta of wild { (,) a2 b1 ->
                   case GHC.Base.build
                          @ Data.Aeson.Encoding.Internal.Encoding
                          (\ @ a3
                             (c :: Data.Aeson.Encoding.Internal.Encoding -> a3 -> a3)[OneShot]
                             (n :: a3)[OneShot] ->
                           c (Data.Aeson.Encoding.Internal.int a2)
                             (c (Data.Aeson.Encoding.Internal.int b1) n)) of wild1 {
                     [] -> Data.Aeson.Encoding.Internal.emptyArray_
                     : x xs
                     -> (Data.ByteString.Builder.Internal.append
                           (Data.Aeson.Encoding.Internal.openBracket
                              @ Data.Aeson.Types.Internal.Value)
                             `cast`
                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)
                           (Data.ByteString.Builder.Internal.append
                              (GHC.Base.id @ Data.Aeson.Encoding.Internal.Encoding x)
                                `cast`
                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                   <Data.Aeson.Types.Internal.Value>_P)
                              (Data.ByteString.Builder.Internal.append
                                 (GHC.Base.foldr
                                    @ Data.Aeson.Encoding.Internal.Encoding
                                    @ (Data.Aeson.Encoding.Internal.Encoding'
                                         Data.Aeson.Types.Internal.Value)
                                    (\ (v :: Data.Aeson.Encoding.Internal.Encoding)
                                       (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                Data.Aeson.Types.Internal.Value)[OneShot] ->
                                     Data.ByteString.Builder.Internal.append
                                       (Data.Aeson.Encoding.Internal.comma
                                          @ Data.Aeson.Types.Internal.Value)
                                         `cast`
                                       (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                            <Data.Aeson.Types.Internal.Value>_P)
                                       (Data.ByteString.Builder.Internal.append
                                          (GHC.Base.id @ Data.Aeson.Encoding.Internal.Encoding v)
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)
                                          vs
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)))
                                      `cast`
                                    (<Data.Aeson.Encoding.Internal.Encoding>_R
                                     ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value>_R
                                     ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P))
                                    (Data.Aeson.Encoding.Internal.empty
                                       @ Data.Aeson.Types.Internal.Value)
                                    xs)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)
                                 (Data.Aeson.Encoding.Internal.closeBracket
                                    @ Data.Aeson.Types.Internal.Value)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P))))
                          `cast`
                        (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                  <Data.Aeson.Types.Internal.Value>_P)) } })
                  (\ (eta :: [(GHC.Types.Int, GHC.Types.Int)]) ->
                   case Data.Vector.Generic.new
                          @ Data.Vector.Vector
                          @ Data.Aeson.Types.Internal.Value
                          (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                          (Data.Vector.Generic.New.unstream
                             @ Data.Vector.Vector
                             @ Data.Aeson.Types.Internal.Value
                             (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                             (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                @ Data.Vector.Fusion.Util.Id
                                @ Data.Aeson.Types.Internal.Value
                                @ Data.Vector.Vector
                                Data.Vector.Fusion.Util.$fMonadId
                                Data.Vector.Fusion.Bundle.Size.Unknown
                                (GHC.Base.build
                                   @ Data.Aeson.Types.Internal.Value
                                   (\ @ b1
                                      (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                      (n :: b1)[OneShot] ->
                                    GHC.Base.foldr
                                      @ (GHC.Types.Int, GHC.Types.Int)
                                      @ b1
                                      (GHC.Base.mapFB
                                         @ Data.Aeson.Types.Internal.Value
                                         @ b1
                                         @ (GHC.Types.Int, GHC.Types.Int)
                                         c
                                         (\ (eta1 :: (GHC.Types.Int, GHC.Types.Int)) ->
                                          case eta1 of wild { (,) a2 b2 ->
                                          GHC.Base.$
                                            @ 'GHC.Types.PtrRepLifted
                                            @ Data.Aeson.Types.Internal.Array
                                            @ Data.Aeson.Types.Internal.Value
                                            Data.Aeson.Types.Internal.$WArray
                                            (GHC.Base.$
                                               @ 'GHC.Types.PtrRepLifted
                                               @ (forall s.
                                                  GHC.ST.ST
                                                    s
                                                    (Data.Vector.Mutable.MVector
                                                       s Data.Aeson.Types.Internal.Value))
                                               @ Data.Aeson.Types.Internal.Array
                                               (Data.Vector.create
                                                  @ Data.Aeson.Types.Internal.Value)
                                               (\ @ s (s1 :: GHC.Prim.State# s)[OneShot] ->
                                                case (GHC.Base.$
                                                        @ 'GHC.Types.PtrRepLifted
                                                        @ (GHC.ST.ST
                                                             s
                                                             (Data.Vector.Mutable.MVector
                                                                (Control.Monad.Primitive.PrimState
                                                                   (GHC.ST.ST s))
                                                                Data.Aeson.Types.Internal.Value))
                                                        @ (GHC.ST.ST
                                                             s
                                                             (Data.Vector.Mutable.MVector
                                                                (Control.Monad.Primitive.PrimState
                                                                   (GHC.ST.ST s))
                                                                Data.Aeson.Types.Internal.Value))
                                                        (Data.Vector.Internal.Check.checkLength
                                                           @ (GHC.ST.ST
                                                                s
                                                                (Data.Vector.Mutable.MVector
                                                                   (Control.Monad.Primitive.PrimState
                                                                      (GHC.ST.ST s))
                                                                   Data.Aeson.Types.Internal.Value))
                                                           (GHC.Base.build
                                                              @ GHC.Types.Char
                                                              (\ @ b3 ->
                                                               GHC.CString.unpackFoldrCString#
                                                                 @ b3
                                                                 ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                                           (GHC.Types.I# 591#)
                                                           Data.Vector.Internal.Check.Unsafe
                                                           (GHC.Base.build
                                                              @ GHC.Types.Char
                                                              (\ @ b3 ->
                                                               GHC.CString.unpackFoldrCString#
                                                                 @ b3
                                                                 "unsafeNew"#))
                                                           (GHC.Types.I# 2#))
                                                        (\ (s2 :: GHC.Prim.State# s)[OneShot] ->
                                                         case GHC.Prim.newArray#
                                                                @ Data.Aeson.Types.Internal.Value
                                                                @ (Control.Monad.Primitive.PrimState
                                                                     (GHC.ST.ST s))
                                                                2#
                                                                (Data.Vector.Mutable.uninitialised
                                                                   @ Data.Aeson.Types.Internal.Value)
                                                                s2
                                                                  `cast`
                                                                (GHC.Prim.State#
                                                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                             <s>_N)))_R of ds7 { (#,#) ipv ipv1 ->
                                                         (GHC.ST.$fMonadST_$creturn
                                                            @ s
                                                            @ (Data.Vector.Mutable.MVector
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                                 Data.Aeson.Types.Internal.Value)
                                                            (Data.Vector.Mutable.MVector
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                               @ Data.Aeson.Types.Internal.Value
                                                               0#
                                                               2#
                                                               ipv1))
                                                           `cast`
                                                         (GHC.ST.N:ST[0]
                                                              <s>_N
                                                              <Data.Vector.Mutable.MVector
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                                 Data.Aeson.Types.Internal.Value>_R)
                                                           ipv
                                                             `cast`
                                                           (GHC.Prim.State#
                                                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                   <s>_N))_R })
                                                          `cast`
                                                        (Sym (GHC.ST.N:ST[0]
                                                                  <s>_N
                                                                  <Data.Vector.Mutable.MVector
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST s))
                                                                     Data.Aeson.Types.Internal.Value>_R)))
                                                       `cast`
                                                     (GHC.ST.N:ST[0]
                                                          <s>_N
                                                          (Data.Vector.Mutable.MVector
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <s>_N)
                                                             <Data.Aeson.Types.Internal.Value>_R)_R)
                                                       s1 of ds7 { (#,#) ipv ipv1 ->
                                                let {
                                                  eta2 :: GHC.Types.Int = GHC.Types.I# 0#
                                                } in
                                                (GHC.ST.$fMonadST_$c>>
                                                   @ s
                                                   @ ()
                                                   @ (Data.Vector.Mutable.MVector
                                                        s Data.Aeson.Types.Internal.Value)
                                                   (GHC.Base.$
                                                      @ 'GHC.Types.PtrRepLifted
                                                      @ (GHC.ST.ST s ())
                                                      @ (GHC.ST.ST s ())
                                                      (Data.Vector.Internal.Check.checkIndex
                                                         @ (GHC.ST.ST s ())
                                                         (GHC.Base.build
                                                            @ GHC.Types.Char
                                                            (\ @ b3 ->
                                                             GHC.CString.unpackFoldrCString#
                                                               @ b3
                                                               ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                                         (GHC.Types.I# 729#)
                                                         Data.Vector.Internal.Check.Unsafe
                                                         (GHC.Base.build
                                                            @ GHC.Types.Char
                                                            (\ @ b3 ->
                                                             GHC.CString.unpackFoldrCString#
                                                               @ b3
                                                               "unsafeWrite"#))
                                                         eta2
                                                         (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                                            @ Data.Aeson.Types.Internal.Value
                                                            @ (Control.Monad.Primitive.PrimState
                                                                 (GHC.ST.ST s))
                                                            ipv1
                                                              `cast`
                                                            (Data.Vector.Mutable.MVector
                                                               (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                         <s>_N))
                                                               <Data.Aeson.Types.Internal.Value>_R)_R))
                                                      (case ipv1
                                                              `cast`
                                                            (Data.Vector.Mutable.MVector
                                                               (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                         <s>_N))
                                                               <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                                       case GHC.Num.$fNumInt_$c+
                                                              (GHC.Types.I# dt1)
                                                              eta2 of wild2 { GHC.Types.I# i# ->
                                                       (\ (s# :: GHC.Prim.State#
                                                                   (Control.Monad.Primitive.PrimState
                                                                      (GHC.ST.ST s)))[OneShot] ->
                                                        case Data.Primitive.Array.marray#
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                               @ Data.Aeson.Types.Internal.Value
                                                               (Data.Primitive.Array.MutableArray
                                                                  @ (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST s))
                                                                  @ Data.Aeson.Types.Internal.Value
                                                                  dt3) of wild3 { DEFAULT ->
                                                        case GHC.Prim.writeArray#
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                               @ Data.Aeson.Types.Internal.Value
                                                               wild3
                                                               i#
                                                               (case GHC.Real.fromIntegral
                                                                       @ GHC.Types.Int
                                                                       @ Data.Scientific.Scientific
                                                                       GHC.Real.$fIntegralInt
                                                                       Data.Scientific.$fNumScientific
                                                                       a2 of dt4 { Data.Scientific.Scientific ipv2 ipv3 ->
                                                                Data.Aeson.Types.Internal.Number
                                                                  dt4 })
                                                               s# of s'# { DEFAULT ->
                                                        (# s'#, GHC.Tuple.() #) } })
                                                         `cast`
                                                       (Sym (GHC.ST.N:ST[0]
                                                                 (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                           <s>_N))
                                                                 <()>_R)) } }))
                                                   (GHC.ST.$fMonadST_$c>>
                                                      @ s
                                                      @ ()
                                                      @ (Data.Vector.Mutable.MVector
                                                           s Data.Aeson.Types.Internal.Value)
                                                      (let {
                                                         eta3 :: GHC.Types.Int = GHC.Types.I# 1#
                                                       } in
                                                       GHC.Base.$
                                                         @ 'GHC.Types.PtrRepLifted
                                                         @ (GHC.ST.ST s ())
                                                         @ (GHC.ST.ST s ())
                                                         (Data.Vector.Internal.Check.checkIndex
                                                            @ (GHC.ST.ST s ())
                                                            (GHC.Base.build
                                                               @ GHC.Types.Char
                                                               (\ @ b3 ->
                                                                GHC.CString.unpackFoldrCString#
                                                                  @ b3
                                                                  ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                                            (GHC.Types.I# 729#)
                                                            Data.Vector.Internal.Check.Unsafe
                                                            (GHC.Base.build
                                                               @ GHC.Types.Char
                                                               (\ @ b3 ->
                                                                GHC.CString.unpackFoldrCString#
                                                                  @ b3
                                                                  "unsafeWrite"#))
                                                            eta3
                                                            (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                                               @ Data.Aeson.Types.Internal.Value
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                               ipv1
                                                                 `cast`
                                                               (Data.Vector.Mutable.MVector
                                                                  (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                            <s>_N))
                                                                  <Data.Aeson.Types.Internal.Value>_R)_R))
                                                         (case ipv1
                                                                 `cast`
                                                               (Data.Vector.Mutable.MVector
                                                                  (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                            <s>_N))
                                                                  <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                                          case GHC.Num.$fNumInt_$c+
                                                                 (GHC.Types.I# dt1)
                                                                 eta3 of wild2 { GHC.Types.I# i# ->
                                                          (\ (s# :: GHC.Prim.State#
                                                                      (Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST s)))[OneShot] ->
                                                           case Data.Primitive.Array.marray#
                                                                  @ (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST s))
                                                                  @ Data.Aeson.Types.Internal.Value
                                                                  (Data.Primitive.Array.MutableArray
                                                                     @ (Control.Monad.Primitive.PrimState
                                                                          (GHC.ST.ST s))
                                                                     @ Data.Aeson.Types.Internal.Value
                                                                     dt3) of wild3 { DEFAULT ->
                                                           case GHC.Prim.writeArray#
                                                                  @ (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST s))
                                                                  @ Data.Aeson.Types.Internal.Value
                                                                  wild3
                                                                  i#
                                                                  (case GHC.Real.fromIntegral
                                                                          @ GHC.Types.Int
                                                                          @ Data.Scientific.Scientific
                                                                          GHC.Real.$fIntegralInt
                                                                          Data.Scientific.$fNumScientific
                                                                          b2 of dt4 { Data.Scientific.Scientific ipv2 ipv3 ->
                                                                   Data.Aeson.Types.Internal.Number
                                                                     dt4 })
                                                                  s# of s'# { DEFAULT ->
                                                           (# s'#, GHC.Tuple.() #) } })
                                                            `cast`
                                                          (Sym (GHC.ST.N:ST[0]
                                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                              <s>_N))
                                                                    <()>_R)) } }))
                                                      (GHC.ST.$fMonadST_$creturn
                                                         @ s
                                                         @ (Data.Vector.Mutable.MVector
                                                              s Data.Aeson.Types.Internal.Value)
                                                         ipv1)))
                                                  `cast`
                                                (GHC.ST.N:ST[0]
                                                     <s>_N
                                                     <Data.Vector.Mutable.MVector
                                                        s Data.Aeson.Types.Internal.Value>_R)
                                                  ipv })
                                                 `cast`
                                               (forall (s :: <*>_N).
                                                Sym (GHC.ST.N:ST[0]
                                                         <s>_N
                                                         <Data.Vector.Mutable.MVector
                                                            s
                                                            Data.Aeson.Types.Internal.Value>_R))) }))
                                      n
                                      eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                   Data.Aeson.Types.Internal.Array dt1 })
                  (\ (eta :: [(GHC.Types.Int, GHC.Types.Int)]) ->
                   let {
                     ds7 :: (GHC.Types.Int, GHC.Types.Int)
                            -> Data.Aeson.Encoding.Internal.Encoding
                       {- Arity: 1 -}
                     = \ (eta1 :: (GHC.Types.Int, GHC.Types.Int)) ->
                       case eta1 of wild { (,) a2 b1 ->
                       case GHC.Base.build
                              @ Data.Aeson.Encoding.Internal.Encoding
                              (\ @ a3
                                 (c :: Data.Aeson.Encoding.Internal.Encoding -> a3 -> a3)[OneShot]
                                 (n :: a3)[OneShot] ->
                               c (Data.Aeson.Encoding.Internal.int a2)
                                 (c (Data.Aeson.Encoding.Internal.int b1) n)) of wild1 {
                         [] -> Data.Aeson.Encoding.Internal.emptyArray_
                         : x xs
                         -> (Data.ByteString.Builder.Internal.append
                               (Data.Aeson.Encoding.Internal.openBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.ByteString.Builder.Internal.append
                                  (GHC.Base.id @ Data.Aeson.Encoding.Internal.Encoding x)
                                    `cast`
                                  (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                       <Data.Aeson.Types.Internal.Value>_P)
                                  (Data.ByteString.Builder.Internal.append
                                     (GHC.Base.foldr
                                        @ Data.Aeson.Encoding.Internal.Encoding
                                        @ (Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value)
                                        (\ (v :: Data.Aeson.Encoding.Internal.Encoding)
                                           (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                    Data.Aeson.Types.Internal.Value)[OneShot] ->
                                         Data.ByteString.Builder.Internal.append
                                           (Data.Aeson.Encoding.Internal.comma
                                              @ Data.Aeson.Types.Internal.Value)
                                             `cast`
                                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                <Data.Aeson.Types.Internal.Value>_P)
                                           (Data.ByteString.Builder.Internal.append
                                              (GHC.Base.id
                                                 @ Data.Aeson.Encoding.Internal.Encoding
                                                 v)
                                                `cast`
                                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P)
                                              vs
                                                `cast`
                                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P)))
                                          `cast`
                                        (<Data.Aeson.Encoding.Internal.Encoding>_R
                                         ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                                 Data.Aeson.Types.Internal.Value>_R
                                         ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                       <Data.Aeson.Types.Internal.Value>_P))
                                        (Data.Aeson.Encoding.Internal.empty
                                           @ Data.Aeson.Types.Internal.Value)
                                        xs)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.Aeson.Encoding.Internal.closeBracket
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P))))
                              `cast`
                            (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)) } }
                   } in
                   case eta of wild {
                     [] -> Data.Aeson.Encoding.Internal.emptyArray_
                     : x xs
                     -> (Data.ByteString.Builder.Internal.append
                           (Data.Aeson.Encoding.Internal.openBracket
                              @ Data.Aeson.Types.Internal.Value)
                             `cast`
                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)
                           (Data.ByteString.Builder.Internal.append
                              (ds7 x)
                                `cast`
                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                   <Data.Aeson.Types.Internal.Value>_P)
                              (Data.ByteString.Builder.Internal.append
                                 (GHC.Base.foldr
                                    @ (GHC.Types.Int, GHC.Types.Int)
                                    @ (Data.Aeson.Encoding.Internal.Encoding'
                                         Data.Aeson.Types.Internal.Value)
                                    (\ (v :: (GHC.Types.Int, GHC.Types.Int))
                                       (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                Data.Aeson.Types.Internal.Value)[OneShot] ->
                                     Data.ByteString.Builder.Internal.append
                                       (Data.Aeson.Encoding.Internal.comma
                                          @ Data.Aeson.Types.Internal.Value)
                                         `cast`
                                       (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                            <Data.Aeson.Types.Internal.Value>_P)
                                       (Data.ByteString.Builder.Internal.append
                                          (ds7 v)
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)
                                          vs
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)))
                                      `cast`
                                    (<(GHC.Types.Int, GHC.Types.Int)>_R
                                     ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value>_R
                                     ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P))
                                    (Data.Aeson.Encoding.Internal.empty
                                       @ Data.Aeson.Types.Internal.Value)
                                    xs)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)
                                 (Data.Aeson.Encoding.Internal.closeBracket
                                    @ Data.Aeson.Types.Internal.Value)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P))))
                          `cast`
                        (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                  <Data.Aeson.Types.Internal.Value>_P)) }) -}
5fc8995f8ad0974cd99e7761780135d2
  $s$fToJSON(,)2 ::
    Data.Aeson.Types.ToJSON.ToJSON (GHC.Types.Double, GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Double, GHC.Types.Double)
                  (\ (eta :: (GHC.Types.Double, GHC.Types.Double)) ->
                   case eta of wild { (,) a2 b1 ->
                   GHC.Base.$
                     @ 'GHC.Types.PtrRepLifted
                     @ Data.Aeson.Types.Internal.Array
                     @ Data.Aeson.Types.Internal.Value
                     Data.Aeson.Types.Internal.$WArray
                     (GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (forall s.
                           GHC.ST.ST
                             s (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value))
                        @ Data.Aeson.Types.Internal.Array
                        (Data.Vector.create @ Data.Aeson.Types.Internal.Value)
                        (\ @ s (s1 :: GHC.Prim.State# s)[OneShot] ->
                         case (GHC.Base.$
                                 @ 'GHC.Types.PtrRepLifted
                                 @ (GHC.ST.ST
                                      s
                                      (Data.Vector.Mutable.MVector
                                         (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         Data.Aeson.Types.Internal.Value))
                                 @ (GHC.ST.ST
                                      s
                                      (Data.Vector.Mutable.MVector
                                         (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         Data.Aeson.Types.Internal.Value))
                                 (Data.Vector.Internal.Check.checkLength
                                    @ (GHC.ST.ST
                                         s
                                         (Data.Vector.Mutable.MVector
                                            (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                            Data.Aeson.Types.Internal.Value))
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b2 ->
                                        GHC.CString.unpackFoldrCString#
                                          @ b2
                                          ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                    (GHC.Types.I# 591#)
                                    Data.Vector.Internal.Check.Unsafe
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b2 ->
                                        GHC.CString.unpackFoldrCString# @ b2 "unsafeNew"#))
                                    (GHC.Types.I# 2#))
                                 (\ (s2 :: GHC.Prim.State# s)[OneShot] ->
                                  case GHC.Prim.newArray#
                                         @ Data.Aeson.Types.Internal.Value
                                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         2#
                                         (Data.Vector.Mutable.uninitialised
                                            @ Data.Aeson.Types.Internal.Value)
                                         s2
                                           `cast`
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                      <s>_N)))_R of ds7 { (#,#) ipv ipv1 ->
                                  (GHC.ST.$fMonadST_$creturn
                                     @ s
                                     @ (Data.Vector.Mutable.MVector
                                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                          Data.Aeson.Types.Internal.Value)
                                     (Data.Vector.Mutable.MVector
                                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        @ Data.Aeson.Types.Internal.Value
                                        0#
                                        2#
                                        ipv1))
                                    `cast`
                                  (GHC.ST.N:ST[0]
                                       <s>_N
                                       <Data.Vector.Mutable.MVector
                                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                          Data.Aeson.Types.Internal.Value>_R)
                                    ipv
                                      `cast`
                                    (GHC.Prim.State#
                                       (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))_R })
                                   `cast`
                                 (Sym (GHC.ST.N:ST[0]
                                           <s>_N
                                           <Data.Vector.Mutable.MVector
                                              (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                              Data.Aeson.Types.Internal.Value>_R)))
                                `cast`
                              (GHC.ST.N:ST[0]
                                   <s>_N
                                   (Data.Vector.Mutable.MVector
                                      (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N)
                                      <Data.Aeson.Types.Internal.Value>_R)_R)
                                s1 of ds7 { (#,#) ipv ipv1 ->
                         let {
                           eta1 :: GHC.Types.Int = GHC.Types.I# 0#
                         } in
                         (GHC.ST.$fMonadST_$c>>
                            @ s
                            @ ()
                            @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                            (GHC.Base.$
                               @ 'GHC.Types.PtrRepLifted
                               @ (GHC.ST.ST s ())
                               @ (GHC.ST.ST s ())
                               (Data.Vector.Internal.Check.checkIndex
                                  @ (GHC.ST.ST s ())
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b2 ->
                                      GHC.CString.unpackFoldrCString#
                                        @ b2
                                        ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                  (GHC.Types.I# 729#)
                                  Data.Vector.Internal.Check.Unsafe
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b2 ->
                                      GHC.CString.unpackFoldrCString# @ b2 "unsafeWrite"#))
                                  eta1
                                  (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                     @ Data.Aeson.Types.Internal.Value
                                     @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                     ipv1
                                       `cast`
                                     (Data.Vector.Mutable.MVector
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                        <Data.Aeson.Types.Internal.Value>_R)_R))
                               (case ipv1
                                       `cast`
                                     (Data.Vector.Mutable.MVector
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                        <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                case GHC.Num.$fNumInt_$c+
                                       (GHC.Types.I# dt1)
                                       eta1 of wild2 { GHC.Types.I# i# ->
                                (\ (s# :: GHC.Prim.State#
                                            (Control.Monad.Primitive.PrimState
                                               (GHC.ST.ST s)))[OneShot] ->
                                 case Data.Primitive.Array.marray#
                                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        @ Data.Aeson.Types.Internal.Value
                                        (Data.Primitive.Array.MutableArray
                                           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                           @ Data.Aeson.Types.Internal.Value
                                           dt3) of wild3 { DEFAULT ->
                                 case GHC.Prim.writeArray#
                                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        @ Data.Aeson.Types.Internal.Value
                                        wild3
                                        i#
                                        (Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON
                                           a2)
                                        s# of s'# { DEFAULT ->
                                 (# s'#, GHC.Tuple.() #) } })
                                  `cast`
                                (Sym (GHC.ST.N:ST[0]
                                          (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                          <()>_R)) } }))
                            (GHC.ST.$fMonadST_$c>>
                               @ s
                               @ ()
                               @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                               (let {
                                  eta2 :: GHC.Types.Int = GHC.Types.I# 1#
                                } in
                                GHC.Base.$
                                  @ 'GHC.Types.PtrRepLifted
                                  @ (GHC.ST.ST s ())
                                  @ (GHC.ST.ST s ())
                                  (Data.Vector.Internal.Check.checkIndex
                                     @ (GHC.ST.ST s ())
                                     (GHC.Base.build
                                        @ GHC.Types.Char
                                        (\ @ b2 ->
                                         GHC.CString.unpackFoldrCString#
                                           @ b2
                                           ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                     (GHC.Types.I# 729#)
                                     Data.Vector.Internal.Check.Unsafe
                                     (GHC.Base.build
                                        @ GHC.Types.Char
                                        (\ @ b2 ->
                                         GHC.CString.unpackFoldrCString# @ b2 "unsafeWrite"#))
                                     eta2
                                     (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                        @ Data.Aeson.Types.Internal.Value
                                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        ipv1
                                          `cast`
                                        (Data.Vector.Mutable.MVector
                                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                           <Data.Aeson.Types.Internal.Value>_R)_R))
                                  (case ipv1
                                          `cast`
                                        (Data.Vector.Mutable.MVector
                                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                           <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                   case GHC.Num.$fNumInt_$c+
                                          (GHC.Types.I# dt1)
                                          eta2 of wild2 { GHC.Types.I# i# ->
                                   (\ (s# :: GHC.Prim.State#
                                               (Control.Monad.Primitive.PrimState
                                                  (GHC.ST.ST s)))[OneShot] ->
                                    case Data.Primitive.Array.marray#
                                           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                           @ Data.Aeson.Types.Internal.Value
                                           (Data.Primitive.Array.MutableArray
                                              @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                              @ Data.Aeson.Types.Internal.Value
                                              dt3) of wild3 { DEFAULT ->
                                    case GHC.Prim.writeArray#
                                           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                           @ Data.Aeson.Types.Internal.Value
                                           wild3
                                           i#
                                           (Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON
                                              b1)
                                           s# of s'# { DEFAULT ->
                                    (# s'#, GHC.Tuple.() #) } })
                                     `cast`
                                   (Sym (GHC.ST.N:ST[0]
                                             (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                       <s>_N))
                                             <()>_R)) } }))
                               (GHC.ST.$fMonadST_$creturn
                                  @ s
                                  @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                                  ipv1)))
                           `cast`
                         (GHC.ST.N:ST[0]
                              <s>_N
                              <Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value>_R)
                           ipv })
                          `cast`
                        (forall (s :: <*>_N).
                         Sym (GHC.ST.N:ST[0]
                                  <s>_N
                                  <Data.Vector.Mutable.MVector
                                     s Data.Aeson.Types.Internal.Value>_R))) })
                  (\ (eta :: (GHC.Types.Double, GHC.Types.Double)) ->
                   case eta of wild { (,) a2 b1 ->
                   case GHC.Base.build
                          @ Data.Aeson.Encoding.Internal.Encoding
                          (\ @ a3
                             (c :: Data.Aeson.Encoding.Internal.Encoding -> a3 -> a3)[OneShot]
                             (n :: a3)[OneShot] ->
                           c (Data.Aeson.Encoding.Internal.double a2)
                             (c (Data.Aeson.Encoding.Internal.double b1) n)) of wild1 {
                     [] -> Data.Aeson.Encoding.Internal.emptyArray_
                     : x xs
                     -> (Data.ByteString.Builder.Internal.append
                           (Data.Aeson.Encoding.Internal.openBracket
                              @ Data.Aeson.Types.Internal.Value)
                             `cast`
                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)
                           (Data.ByteString.Builder.Internal.append
                              (GHC.Base.id @ Data.Aeson.Encoding.Internal.Encoding x)
                                `cast`
                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                   <Data.Aeson.Types.Internal.Value>_P)
                              (Data.ByteString.Builder.Internal.append
                                 (GHC.Base.foldr
                                    @ Data.Aeson.Encoding.Internal.Encoding
                                    @ (Data.Aeson.Encoding.Internal.Encoding'
                                         Data.Aeson.Types.Internal.Value)
                                    (\ (v :: Data.Aeson.Encoding.Internal.Encoding)
                                       (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                Data.Aeson.Types.Internal.Value)[OneShot] ->
                                     Data.ByteString.Builder.Internal.append
                                       (Data.Aeson.Encoding.Internal.comma
                                          @ Data.Aeson.Types.Internal.Value)
                                         `cast`
                                       (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                            <Data.Aeson.Types.Internal.Value>_P)
                                       (Data.ByteString.Builder.Internal.append
                                          (GHC.Base.id @ Data.Aeson.Encoding.Internal.Encoding v)
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)
                                          vs
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)))
                                      `cast`
                                    (<Data.Aeson.Encoding.Internal.Encoding>_R
                                     ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value>_R
                                     ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P))
                                    (Data.Aeson.Encoding.Internal.empty
                                       @ Data.Aeson.Types.Internal.Value)
                                    xs)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)
                                 (Data.Aeson.Encoding.Internal.closeBracket
                                    @ Data.Aeson.Types.Internal.Value)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P))))
                          `cast`
                        (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                  <Data.Aeson.Types.Internal.Value>_P)) } })
                  (\ (eta :: [(GHC.Types.Double, GHC.Types.Double)]) ->
                   case Data.Vector.Generic.new
                          @ Data.Vector.Vector
                          @ Data.Aeson.Types.Internal.Value
                          (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                          (Data.Vector.Generic.New.unstream
                             @ Data.Vector.Vector
                             @ Data.Aeson.Types.Internal.Value
                             (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                             (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                @ Data.Vector.Fusion.Util.Id
                                @ Data.Aeson.Types.Internal.Value
                                @ Data.Vector.Vector
                                Data.Vector.Fusion.Util.$fMonadId
                                Data.Vector.Fusion.Bundle.Size.Unknown
                                (GHC.Base.build
                                   @ Data.Aeson.Types.Internal.Value
                                   (\ @ b1
                                      (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                      (n :: b1)[OneShot] ->
                                    GHC.Base.foldr
                                      @ (GHC.Types.Double, GHC.Types.Double)
                                      @ b1
                                      (GHC.Base.mapFB
                                         @ Data.Aeson.Types.Internal.Value
                                         @ b1
                                         @ (GHC.Types.Double, GHC.Types.Double)
                                         c
                                         (\ (eta1 :: (GHC.Types.Double, GHC.Types.Double)) ->
                                          case eta1 of wild { (,) a2 b2 ->
                                          GHC.Base.$
                                            @ 'GHC.Types.PtrRepLifted
                                            @ Data.Aeson.Types.Internal.Array
                                            @ Data.Aeson.Types.Internal.Value
                                            Data.Aeson.Types.Internal.$WArray
                                            (GHC.Base.$
                                               @ 'GHC.Types.PtrRepLifted
                                               @ (forall s.
                                                  GHC.ST.ST
                                                    s
                                                    (Data.Vector.Mutable.MVector
                                                       s Data.Aeson.Types.Internal.Value))
                                               @ Data.Aeson.Types.Internal.Array
                                               (Data.Vector.create
                                                  @ Data.Aeson.Types.Internal.Value)
                                               (\ @ s (s1 :: GHC.Prim.State# s)[OneShot] ->
                                                case (GHC.Base.$
                                                        @ 'GHC.Types.PtrRepLifted
                                                        @ (GHC.ST.ST
                                                             s
                                                             (Data.Vector.Mutable.MVector
                                                                (Control.Monad.Primitive.PrimState
                                                                   (GHC.ST.ST s))
                                                                Data.Aeson.Types.Internal.Value))
                                                        @ (GHC.ST.ST
                                                             s
                                                             (Data.Vector.Mutable.MVector
                                                                (Control.Monad.Primitive.PrimState
                                                                   (GHC.ST.ST s))
                                                                Data.Aeson.Types.Internal.Value))
                                                        (Data.Vector.Internal.Check.checkLength
                                                           @ (GHC.ST.ST
                                                                s
                                                                (Data.Vector.Mutable.MVector
                                                                   (Control.Monad.Primitive.PrimState
                                                                      (GHC.ST.ST s))
                                                                   Data.Aeson.Types.Internal.Value))
                                                           (GHC.Base.build
                                                              @ GHC.Types.Char
                                                              (\ @ b3 ->
                                                               GHC.CString.unpackFoldrCString#
                                                                 @ b3
                                                                 ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                                           (GHC.Types.I# 591#)
                                                           Data.Vector.Internal.Check.Unsafe
                                                           (GHC.Base.build
                                                              @ GHC.Types.Char
                                                              (\ @ b3 ->
                                                               GHC.CString.unpackFoldrCString#
                                                                 @ b3
                                                                 "unsafeNew"#))
                                                           (GHC.Types.I# 2#))
                                                        (\ (s2 :: GHC.Prim.State# s)[OneShot] ->
                                                         case GHC.Prim.newArray#
                                                                @ Data.Aeson.Types.Internal.Value
                                                                @ (Control.Monad.Primitive.PrimState
                                                                     (GHC.ST.ST s))
                                                                2#
                                                                (Data.Vector.Mutable.uninitialised
                                                                   @ Data.Aeson.Types.Internal.Value)
                                                                s2
                                                                  `cast`
                                                                (GHC.Prim.State#
                                                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                             <s>_N)))_R of ds7 { (#,#) ipv ipv1 ->
                                                         (GHC.ST.$fMonadST_$creturn
                                                            @ s
                                                            @ (Data.Vector.Mutable.MVector
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                                 Data.Aeson.Types.Internal.Value)
                                                            (Data.Vector.Mutable.MVector
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                               @ Data.Aeson.Types.Internal.Value
                                                               0#
                                                               2#
                                                               ipv1))
                                                           `cast`
                                                         (GHC.ST.N:ST[0]
                                                              <s>_N
                                                              <Data.Vector.Mutable.MVector
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                                 Data.Aeson.Types.Internal.Value>_R)
                                                           ipv
                                                             `cast`
                                                           (GHC.Prim.State#
                                                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                   <s>_N))_R })
                                                          `cast`
                                                        (Sym (GHC.ST.N:ST[0]
                                                                  <s>_N
                                                                  <Data.Vector.Mutable.MVector
                                                                     (Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST s))
                                                                     Data.Aeson.Types.Internal.Value>_R)))
                                                       `cast`
                                                     (GHC.ST.N:ST[0]
                                                          <s>_N
                                                          (Data.Vector.Mutable.MVector
                                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                  <s>_N)
                                                             <Data.Aeson.Types.Internal.Value>_R)_R)
                                                       s1 of ds7 { (#,#) ipv ipv1 ->
                                                let {
                                                  eta2 :: GHC.Types.Int = GHC.Types.I# 0#
                                                } in
                                                (GHC.ST.$fMonadST_$c>>
                                                   @ s
                                                   @ ()
                                                   @ (Data.Vector.Mutable.MVector
                                                        s Data.Aeson.Types.Internal.Value)
                                                   (GHC.Base.$
                                                      @ 'GHC.Types.PtrRepLifted
                                                      @ (GHC.ST.ST s ())
                                                      @ (GHC.ST.ST s ())
                                                      (Data.Vector.Internal.Check.checkIndex
                                                         @ (GHC.ST.ST s ())
                                                         (GHC.Base.build
                                                            @ GHC.Types.Char
                                                            (\ @ b3 ->
                                                             GHC.CString.unpackFoldrCString#
                                                               @ b3
                                                               ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                                         (GHC.Types.I# 729#)
                                                         Data.Vector.Internal.Check.Unsafe
                                                         (GHC.Base.build
                                                            @ GHC.Types.Char
                                                            (\ @ b3 ->
                                                             GHC.CString.unpackFoldrCString#
                                                               @ b3
                                                               "unsafeWrite"#))
                                                         eta2
                                                         (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                                            @ Data.Aeson.Types.Internal.Value
                                                            @ (Control.Monad.Primitive.PrimState
                                                                 (GHC.ST.ST s))
                                                            ipv1
                                                              `cast`
                                                            (Data.Vector.Mutable.MVector
                                                               (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                         <s>_N))
                                                               <Data.Aeson.Types.Internal.Value>_R)_R))
                                                      (case ipv1
                                                              `cast`
                                                            (Data.Vector.Mutable.MVector
                                                               (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                         <s>_N))
                                                               <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                                       case GHC.Num.$fNumInt_$c+
                                                              (GHC.Types.I# dt1)
                                                              eta2 of wild2 { GHC.Types.I# i# ->
                                                       (\ (s# :: GHC.Prim.State#
                                                                   (Control.Monad.Primitive.PrimState
                                                                      (GHC.ST.ST s)))[OneShot] ->
                                                        case Data.Primitive.Array.marray#
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                               @ Data.Aeson.Types.Internal.Value
                                                               (Data.Primitive.Array.MutableArray
                                                                  @ (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST s))
                                                                  @ Data.Aeson.Types.Internal.Value
                                                                  dt3) of wild3 { DEFAULT ->
                                                        case GHC.Prim.writeArray#
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                               @ Data.Aeson.Types.Internal.Value
                                                               wild3
                                                               i#
                                                               (Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON
                                                                  a2)
                                                               s# of s'# { DEFAULT ->
                                                        (# s'#, GHC.Tuple.() #) } })
                                                         `cast`
                                                       (Sym (GHC.ST.N:ST[0]
                                                                 (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                           <s>_N))
                                                                 <()>_R)) } }))
                                                   (GHC.ST.$fMonadST_$c>>
                                                      @ s
                                                      @ ()
                                                      @ (Data.Vector.Mutable.MVector
                                                           s Data.Aeson.Types.Internal.Value)
                                                      (let {
                                                         eta3 :: GHC.Types.Int = GHC.Types.I# 1#
                                                       } in
                                                       GHC.Base.$
                                                         @ 'GHC.Types.PtrRepLifted
                                                         @ (GHC.ST.ST s ())
                                                         @ (GHC.ST.ST s ())
                                                         (Data.Vector.Internal.Check.checkIndex
                                                            @ (GHC.ST.ST s ())
                                                            (GHC.Base.build
                                                               @ GHC.Types.Char
                                                               (\ @ b3 ->
                                                                GHC.CString.unpackFoldrCString#
                                                                  @ b3
                                                                  ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                                            (GHC.Types.I# 729#)
                                                            Data.Vector.Internal.Check.Unsafe
                                                            (GHC.Base.build
                                                               @ GHC.Types.Char
                                                               (\ @ b3 ->
                                                                GHC.CString.unpackFoldrCString#
                                                                  @ b3
                                                                  "unsafeWrite"#))
                                                            eta3
                                                            (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                                               @ Data.Aeson.Types.Internal.Value
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST s))
                                                               ipv1
                                                                 `cast`
                                                               (Data.Vector.Mutable.MVector
                                                                  (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                            <s>_N))
                                                                  <Data.Aeson.Types.Internal.Value>_R)_R))
                                                         (case ipv1
                                                                 `cast`
                                                               (Data.Vector.Mutable.MVector
                                                                  (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                            <s>_N))
                                                                  <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                                          case GHC.Num.$fNumInt_$c+
                                                                 (GHC.Types.I# dt1)
                                                                 eta3 of wild2 { GHC.Types.I# i# ->
                                                          (\ (s# :: GHC.Prim.State#
                                                                      (Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST s)))[OneShot] ->
                                                           case Data.Primitive.Array.marray#
                                                                  @ (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST s))
                                                                  @ Data.Aeson.Types.Internal.Value
                                                                  (Data.Primitive.Array.MutableArray
                                                                     @ (Control.Monad.Primitive.PrimState
                                                                          (GHC.ST.ST s))
                                                                     @ Data.Aeson.Types.Internal.Value
                                                                     dt3) of wild3 { DEFAULT ->
                                                           case GHC.Prim.writeArray#
                                                                  @ (Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST s))
                                                                  @ Data.Aeson.Types.Internal.Value
                                                                  wild3
                                                                  i#
                                                                  (Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON
                                                                     b2)
                                                                  s# of s'# { DEFAULT ->
                                                           (# s'#, GHC.Tuple.() #) } })
                                                            `cast`
                                                          (Sym (GHC.ST.N:ST[0]
                                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                              <s>_N))
                                                                    <()>_R)) } }))
                                                      (GHC.ST.$fMonadST_$creturn
                                                         @ s
                                                         @ (Data.Vector.Mutable.MVector
                                                              s Data.Aeson.Types.Internal.Value)
                                                         ipv1)))
                                                  `cast`
                                                (GHC.ST.N:ST[0]
                                                     <s>_N
                                                     <Data.Vector.Mutable.MVector
                                                        s Data.Aeson.Types.Internal.Value>_R)
                                                  ipv })
                                                 `cast`
                                               (forall (s :: <*>_N).
                                                Sym (GHC.ST.N:ST[0]
                                                         <s>_N
                                                         <Data.Vector.Mutable.MVector
                                                            s
                                                            Data.Aeson.Types.Internal.Value>_R))) }))
                                      n
                                      eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                   Data.Aeson.Types.Internal.Array dt1 })
                  (\ (eta :: [(GHC.Types.Double, GHC.Types.Double)]) ->
                   let {
                     ds7 :: (GHC.Types.Double, GHC.Types.Double)
                            -> Data.Aeson.Encoding.Internal.Encoding
                       {- Arity: 1 -}
                     = \ (eta1 :: (GHC.Types.Double, GHC.Types.Double)) ->
                       case eta1 of wild { (,) a2 b1 ->
                       case GHC.Base.build
                              @ Data.Aeson.Encoding.Internal.Encoding
                              (\ @ a3
                                 (c :: Data.Aeson.Encoding.Internal.Encoding -> a3 -> a3)[OneShot]
                                 (n :: a3)[OneShot] ->
                               c (Data.Aeson.Encoding.Internal.double a2)
                                 (c (Data.Aeson.Encoding.Internal.double b1) n)) of wild1 {
                         [] -> Data.Aeson.Encoding.Internal.emptyArray_
                         : x xs
                         -> (Data.ByteString.Builder.Internal.append
                               (Data.Aeson.Encoding.Internal.openBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.ByteString.Builder.Internal.append
                                  (GHC.Base.id @ Data.Aeson.Encoding.Internal.Encoding x)
                                    `cast`
                                  (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                       <Data.Aeson.Types.Internal.Value>_P)
                                  (Data.ByteString.Builder.Internal.append
                                     (GHC.Base.foldr
                                        @ Data.Aeson.Encoding.Internal.Encoding
                                        @ (Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value)
                                        (\ (v :: Data.Aeson.Encoding.Internal.Encoding)
                                           (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                    Data.Aeson.Types.Internal.Value)[OneShot] ->
                                         Data.ByteString.Builder.Internal.append
                                           (Data.Aeson.Encoding.Internal.comma
                                              @ Data.Aeson.Types.Internal.Value)
                                             `cast`
                                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                <Data.Aeson.Types.Internal.Value>_P)
                                           (Data.ByteString.Builder.Internal.append
                                              (GHC.Base.id
                                                 @ Data.Aeson.Encoding.Internal.Encoding
                                                 v)
                                                `cast`
                                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P)
                                              vs
                                                `cast`
                                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P)))
                                          `cast`
                                        (<Data.Aeson.Encoding.Internal.Encoding>_R
                                         ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                                 Data.Aeson.Types.Internal.Value>_R
                                         ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                       <Data.Aeson.Types.Internal.Value>_P))
                                        (Data.Aeson.Encoding.Internal.empty
                                           @ Data.Aeson.Types.Internal.Value)
                                        xs)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.Aeson.Encoding.Internal.closeBracket
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P))))
                              `cast`
                            (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)) } }
                   } in
                   case eta of wild {
                     [] -> Data.Aeson.Encoding.Internal.emptyArray_
                     : x xs
                     -> (Data.ByteString.Builder.Internal.append
                           (Data.Aeson.Encoding.Internal.openBracket
                              @ Data.Aeson.Types.Internal.Value)
                             `cast`
                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)
                           (Data.ByteString.Builder.Internal.append
                              (ds7 x)
                                `cast`
                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                   <Data.Aeson.Types.Internal.Value>_P)
                              (Data.ByteString.Builder.Internal.append
                                 (GHC.Base.foldr
                                    @ (GHC.Types.Double, GHC.Types.Double)
                                    @ (Data.Aeson.Encoding.Internal.Encoding'
                                         Data.Aeson.Types.Internal.Value)
                                    (\ (v :: (GHC.Types.Double, GHC.Types.Double))
                                       (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                Data.Aeson.Types.Internal.Value)[OneShot] ->
                                     Data.ByteString.Builder.Internal.append
                                       (Data.Aeson.Encoding.Internal.comma
                                          @ Data.Aeson.Types.Internal.Value)
                                         `cast`
                                       (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                            <Data.Aeson.Types.Internal.Value>_P)
                                       (Data.ByteString.Builder.Internal.append
                                          (ds7 v)
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)
                                          vs
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)))
                                      `cast`
                                    (<(GHC.Types.Double, GHC.Types.Double)>_R
                                     ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value>_R
                                     ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P))
                                    (Data.Aeson.Encoding.Internal.empty
                                       @ Data.Aeson.Types.Internal.Value)
                                    xs)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)
                                 (Data.Aeson.Encoding.Internal.closeBracket
                                    @ Data.Aeson.Types.Internal.Value)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P))))
                          `cast`
                        (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                  <Data.Aeson.Types.Internal.Value>_P)) }) -}
13eb9ead98d75568d92cbeabc1633d6e
  $s$fToJSON(,)_$ctoJSON ::
    (GHC.Types.Int, GHC.Types.Double)
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U))>m2,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: (GHC.Types.Int, GHC.Types.Double)) ->
                 case eta of wild { (,) a2 b1 ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ Data.Aeson.Types.Internal.Array
                   @ Data.Aeson.Types.Internal.Value
                   Data.Aeson.Types.Internal.$WArray
                   (GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ (forall s.
                         GHC.ST.ST
                           s (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value))
                      @ Data.Aeson.Types.Internal.Array
                      (Data.Vector.create @ Data.Aeson.Types.Internal.Value)
                      (\ @ s (s1 :: GHC.Prim.State# s)[OneShot] ->
                       case (GHC.Base.$
                               @ 'GHC.Types.PtrRepLifted
                               @ (GHC.ST.ST
                                    s
                                    (Data.Vector.Mutable.MVector
                                       (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                       Data.Aeson.Types.Internal.Value))
                               @ (GHC.ST.ST
                                    s
                                    (Data.Vector.Mutable.MVector
                                       (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                       Data.Aeson.Types.Internal.Value))
                               (Data.Vector.Internal.Check.checkLength
                                  @ (GHC.ST.ST
                                       s
                                       (Data.Vector.Mutable.MVector
                                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                          Data.Aeson.Types.Internal.Value))
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b2 ->
                                      GHC.CString.unpackFoldrCString#
                                        @ b2
                                        ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                  (GHC.Types.I# 591#)
                                  Data.Vector.Internal.Check.Unsafe
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b2 -> GHC.CString.unpackFoldrCString# @ b2 "unsafeNew"#))
                                  (GHC.Types.I# 2#))
                               (\ (s2 :: GHC.Prim.State# s)[OneShot] ->
                                case GHC.Prim.newArray#
                                       @ Data.Aeson.Types.Internal.Value
                                       @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                       2#
                                       (Data.Vector.Mutable.uninitialised
                                          @ Data.Aeson.Types.Internal.Value)
                                       s2
                                         `cast`
                                       (GHC.Prim.State#
                                          (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                    <s>_N)))_R of ds7 { (#,#) ipv ipv1 ->
                                (GHC.ST.$fMonadST_$creturn
                                   @ s
                                   @ (Data.Vector.Mutable.MVector
                                        (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        Data.Aeson.Types.Internal.Value)
                                   (Data.Vector.Mutable.MVector
                                      @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                      @ Data.Aeson.Types.Internal.Value
                                      0#
                                      2#
                                      ipv1))
                                  `cast`
                                (GHC.ST.N:ST[0]
                                     <s>_N
                                     <Data.Vector.Mutable.MVector
                                        (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        Data.Aeson.Types.Internal.Value>_R)
                                  ipv
                                    `cast`
                                  (GHC.Prim.State#
                                     (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))_R })
                                 `cast`
                               (Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <Data.Vector.Mutable.MVector
                                            (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                            Data.Aeson.Types.Internal.Value>_R)))
                              `cast`
                            (GHC.ST.N:ST[0]
                                 <s>_N
                                 (Data.Vector.Mutable.MVector
                                    (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N)
                                    <Data.Aeson.Types.Internal.Value>_R)_R)
                              s1 of ds7 { (#,#) ipv ipv1 ->
                       let {
                         eta1 :: GHC.Types.Int = GHC.Types.I# 0#
                       } in
                       (GHC.ST.$fMonadST_$c>>
                          @ s
                          @ ()
                          @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                          (GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ (GHC.ST.ST s ())
                             @ (GHC.ST.ST s ())
                             (Data.Vector.Internal.Check.checkIndex
                                @ (GHC.ST.ST s ())
                                (GHC.Base.build
                                   @ GHC.Types.Char
                                   (\ @ b2 ->
                                    GHC.CString.unpackFoldrCString#
                                      @ b2
                                      ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                (GHC.Types.I# 729#)
                                Data.Vector.Internal.Check.Unsafe
                                (GHC.Base.build
                                   @ GHC.Types.Char
                                   (\ @ b2 -> GHC.CString.unpackFoldrCString# @ b2 "unsafeWrite"#))
                                eta1
                                (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                   @ Data.Aeson.Types.Internal.Value
                                   @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                   ipv1
                                     `cast`
                                   (Data.Vector.Mutable.MVector
                                      (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                      <Data.Aeson.Types.Internal.Value>_R)_R))
                             (case ipv1
                                     `cast`
                                   (Data.Vector.Mutable.MVector
                                      (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                      <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                              case GHC.Num.$fNumInt_$c+
                                     (GHC.Types.I# dt1)
                                     eta1 of wild2 { GHC.Types.I# i# ->
                              (\ (s# :: GHC.Prim.State#
                                          (Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST s)))[OneShot] ->
                               case Data.Primitive.Array.marray#
                                      @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                      @ Data.Aeson.Types.Internal.Value
                                      (Data.Primitive.Array.MutableArray
                                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         @ Data.Aeson.Types.Internal.Value
                                         dt3) of wild3 { DEFAULT ->
                               case GHC.Prim.writeArray#
                                      @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                      @ Data.Aeson.Types.Internal.Value
                                      wild3
                                      i#
                                      (case GHC.Real.fromIntegral
                                              @ GHC.Types.Int
                                              @ Data.Scientific.Scientific
                                              GHC.Real.$fIntegralInt
                                              Data.Scientific.$fNumScientific
                                              a2 of dt4 { Data.Scientific.Scientific ipv2 ipv3 ->
                                       Data.Aeson.Types.Internal.Number dt4 })
                                      s# of s'# { DEFAULT ->
                               (# s'#, GHC.Tuple.() #) } })
                                `cast`
                              (Sym (GHC.ST.N:ST[0]
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                        <()>_R)) } }))
                          (GHC.ST.$fMonadST_$c>>
                             @ s
                             @ ()
                             @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                             (let {
                                eta2 :: GHC.Types.Int = GHC.Types.I# 1#
                              } in
                              GHC.Base.$
                                @ 'GHC.Types.PtrRepLifted
                                @ (GHC.ST.ST s ())
                                @ (GHC.ST.ST s ())
                                (Data.Vector.Internal.Check.checkIndex
                                   @ (GHC.ST.ST s ())
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b2 ->
                                       GHC.CString.unpackFoldrCString#
                                         @ b2
                                         ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                   (GHC.Types.I# 729#)
                                   Data.Vector.Internal.Check.Unsafe
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b2 ->
                                       GHC.CString.unpackFoldrCString# @ b2 "unsafeWrite"#))
                                   eta2
                                   (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                      @ Data.Aeson.Types.Internal.Value
                                      @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                      ipv1
                                        `cast`
                                      (Data.Vector.Mutable.MVector
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                         <Data.Aeson.Types.Internal.Value>_R)_R))
                                (case ipv1
                                        `cast`
                                      (Data.Vector.Mutable.MVector
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                         <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                 case GHC.Num.$fNumInt_$c+
                                        (GHC.Types.I# dt1)
                                        eta2 of wild2 { GHC.Types.I# i# ->
                                 (\ (s# :: GHC.Prim.State#
                                             (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST s)))[OneShot] ->
                                  case Data.Primitive.Array.marray#
                                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         @ Data.Aeson.Types.Internal.Value
                                         (Data.Primitive.Array.MutableArray
                                            @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                            @ Data.Aeson.Types.Internal.Value
                                            dt3) of wild3 { DEFAULT ->
                                  case GHC.Prim.writeArray#
                                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         @ Data.Aeson.Types.Internal.Value
                                         wild3
                                         i#
                                         (Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON
                                            b1)
                                         s# of s'# { DEFAULT ->
                                  (# s'#, GHC.Tuple.() #) } })
                                   `cast`
                                 (Sym (GHC.ST.N:ST[0]
                                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                           <()>_R)) } }))
                             (GHC.ST.$fMonadST_$creturn
                                @ s
                                @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                                ipv1)))
                         `cast`
                       (GHC.ST.N:ST[0]
                            <s>_N
                            <Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value>_R)
                         ipv })
                        `cast`
                      (forall (s :: <*>_N).
                       Sym (GHC.ST.N:ST[0]
                                <s>_N
                                <Data.Vector.Mutable.MVector
                                   s Data.Aeson.Types.Internal.Value>_R))) }) -}
22696ffbb777b15b930264876cf62a24
  $s$fToJSON(,)_$ctoJSON1 ::
    (GHC.Types.Int, GHC.Types.Int) -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U))>m2,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: (GHC.Types.Int, GHC.Types.Int)) ->
                 case eta of wild { (,) a2 b1 ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ Data.Aeson.Types.Internal.Array
                   @ Data.Aeson.Types.Internal.Value
                   Data.Aeson.Types.Internal.$WArray
                   (GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ (forall s.
                         GHC.ST.ST
                           s (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value))
                      @ Data.Aeson.Types.Internal.Array
                      (Data.Vector.create @ Data.Aeson.Types.Internal.Value)
                      (\ @ s (s1 :: GHC.Prim.State# s)[OneShot] ->
                       case (GHC.Base.$
                               @ 'GHC.Types.PtrRepLifted
                               @ (GHC.ST.ST
                                    s
                                    (Data.Vector.Mutable.MVector
                                       (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                       Data.Aeson.Types.Internal.Value))
                               @ (GHC.ST.ST
                                    s
                                    (Data.Vector.Mutable.MVector
                                       (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                       Data.Aeson.Types.Internal.Value))
                               (Data.Vector.Internal.Check.checkLength
                                  @ (GHC.ST.ST
                                       s
                                       (Data.Vector.Mutable.MVector
                                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                          Data.Aeson.Types.Internal.Value))
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b2 ->
                                      GHC.CString.unpackFoldrCString#
                                        @ b2
                                        ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                  (GHC.Types.I# 591#)
                                  Data.Vector.Internal.Check.Unsafe
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b2 -> GHC.CString.unpackFoldrCString# @ b2 "unsafeNew"#))
                                  (GHC.Types.I# 2#))
                               (\ (s2 :: GHC.Prim.State# s)[OneShot] ->
                                case GHC.Prim.newArray#
                                       @ Data.Aeson.Types.Internal.Value
                                       @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                       2#
                                       (Data.Vector.Mutable.uninitialised
                                          @ Data.Aeson.Types.Internal.Value)
                                       s2
                                         `cast`
                                       (GHC.Prim.State#
                                          (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                    <s>_N)))_R of ds7 { (#,#) ipv ipv1 ->
                                (GHC.ST.$fMonadST_$creturn
                                   @ s
                                   @ (Data.Vector.Mutable.MVector
                                        (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        Data.Aeson.Types.Internal.Value)
                                   (Data.Vector.Mutable.MVector
                                      @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                      @ Data.Aeson.Types.Internal.Value
                                      0#
                                      2#
                                      ipv1))
                                  `cast`
                                (GHC.ST.N:ST[0]
                                     <s>_N
                                     <Data.Vector.Mutable.MVector
                                        (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        Data.Aeson.Types.Internal.Value>_R)
                                  ipv
                                    `cast`
                                  (GHC.Prim.State#
                                     (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))_R })
                                 `cast`
                               (Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <Data.Vector.Mutable.MVector
                                            (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                            Data.Aeson.Types.Internal.Value>_R)))
                              `cast`
                            (GHC.ST.N:ST[0]
                                 <s>_N
                                 (Data.Vector.Mutable.MVector
                                    (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N)
                                    <Data.Aeson.Types.Internal.Value>_R)_R)
                              s1 of ds7 { (#,#) ipv ipv1 ->
                       let {
                         eta1 :: GHC.Types.Int = GHC.Types.I# 0#
                       } in
                       (GHC.ST.$fMonadST_$c>>
                          @ s
                          @ ()
                          @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                          (GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ (GHC.ST.ST s ())
                             @ (GHC.ST.ST s ())
                             (Data.Vector.Internal.Check.checkIndex
                                @ (GHC.ST.ST s ())
                                (GHC.Base.build
                                   @ GHC.Types.Char
                                   (\ @ b2 ->
                                    GHC.CString.unpackFoldrCString#
                                      @ b2
                                      ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                (GHC.Types.I# 729#)
                                Data.Vector.Internal.Check.Unsafe
                                (GHC.Base.build
                                   @ GHC.Types.Char
                                   (\ @ b2 -> GHC.CString.unpackFoldrCString# @ b2 "unsafeWrite"#))
                                eta1
                                (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                   @ Data.Aeson.Types.Internal.Value
                                   @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                   ipv1
                                     `cast`
                                   (Data.Vector.Mutable.MVector
                                      (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                      <Data.Aeson.Types.Internal.Value>_R)_R))
                             (case ipv1
                                     `cast`
                                   (Data.Vector.Mutable.MVector
                                      (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                      <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                              case GHC.Num.$fNumInt_$c+
                                     (GHC.Types.I# dt1)
                                     eta1 of wild2 { GHC.Types.I# i# ->
                              (\ (s# :: GHC.Prim.State#
                                          (Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST s)))[OneShot] ->
                               case Data.Primitive.Array.marray#
                                      @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                      @ Data.Aeson.Types.Internal.Value
                                      (Data.Primitive.Array.MutableArray
                                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         @ Data.Aeson.Types.Internal.Value
                                         dt3) of wild3 { DEFAULT ->
                               case GHC.Prim.writeArray#
                                      @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                      @ Data.Aeson.Types.Internal.Value
                                      wild3
                                      i#
                                      (case GHC.Real.fromIntegral
                                              @ GHC.Types.Int
                                              @ Data.Scientific.Scientific
                                              GHC.Real.$fIntegralInt
                                              Data.Scientific.$fNumScientific
                                              a2 of dt4 { Data.Scientific.Scientific ipv2 ipv3 ->
                                       Data.Aeson.Types.Internal.Number dt4 })
                                      s# of s'# { DEFAULT ->
                               (# s'#, GHC.Tuple.() #) } })
                                `cast`
                              (Sym (GHC.ST.N:ST[0]
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                        <()>_R)) } }))
                          (GHC.ST.$fMonadST_$c>>
                             @ s
                             @ ()
                             @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                             (let {
                                eta2 :: GHC.Types.Int = GHC.Types.I# 1#
                              } in
                              GHC.Base.$
                                @ 'GHC.Types.PtrRepLifted
                                @ (GHC.ST.ST s ())
                                @ (GHC.ST.ST s ())
                                (Data.Vector.Internal.Check.checkIndex
                                   @ (GHC.ST.ST s ())
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b2 ->
                                       GHC.CString.unpackFoldrCString#
                                         @ b2
                                         ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                   (GHC.Types.I# 729#)
                                   Data.Vector.Internal.Check.Unsafe
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b2 ->
                                       GHC.CString.unpackFoldrCString# @ b2 "unsafeWrite"#))
                                   eta2
                                   (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                      @ Data.Aeson.Types.Internal.Value
                                      @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                      ipv1
                                        `cast`
                                      (Data.Vector.Mutable.MVector
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                         <Data.Aeson.Types.Internal.Value>_R)_R))
                                (case ipv1
                                        `cast`
                                      (Data.Vector.Mutable.MVector
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                         <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                 case GHC.Num.$fNumInt_$c+
                                        (GHC.Types.I# dt1)
                                        eta2 of wild2 { GHC.Types.I# i# ->
                                 (\ (s# :: GHC.Prim.State#
                                             (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST s)))[OneShot] ->
                                  case Data.Primitive.Array.marray#
                                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         @ Data.Aeson.Types.Internal.Value
                                         (Data.Primitive.Array.MutableArray
                                            @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                            @ Data.Aeson.Types.Internal.Value
                                            dt3) of wild3 { DEFAULT ->
                                  case GHC.Prim.writeArray#
                                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         @ Data.Aeson.Types.Internal.Value
                                         wild3
                                         i#
                                         (case GHC.Real.fromIntegral
                                                 @ GHC.Types.Int
                                                 @ Data.Scientific.Scientific
                                                 GHC.Real.$fIntegralInt
                                                 Data.Scientific.$fNumScientific
                                                 b1 of dt4 { Data.Scientific.Scientific ipv2 ipv3 ->
                                          Data.Aeson.Types.Internal.Number dt4 })
                                         s# of s'# { DEFAULT ->
                                  (# s'#, GHC.Tuple.() #) } })
                                   `cast`
                                 (Sym (GHC.ST.N:ST[0]
                                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                           <()>_R)) } }))
                             (GHC.ST.$fMonadST_$creturn
                                @ s
                                @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                                ipv1)))
                         `cast`
                       (GHC.ST.N:ST[0]
                            <s>_N
                            <Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value>_R)
                         ipv })
                        `cast`
                      (forall (s :: <*>_N).
                       Sym (GHC.ST.N:ST[0]
                                <s>_N
                                <Data.Vector.Mutable.MVector
                                   s Data.Aeson.Types.Internal.Value>_R))) }) -}
866db8fdb8f0d9488235ade5e0158e98
  $s$fToJSON(,)_$ctoJSON2 ::
    (GHC.Types.Double, GHC.Types.Double)
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U))>m2,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: (GHC.Types.Double, GHC.Types.Double)) ->
                 case eta of wild { (,) a2 b1 ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ Data.Aeson.Types.Internal.Array
                   @ Data.Aeson.Types.Internal.Value
                   Data.Aeson.Types.Internal.$WArray
                   (GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ (forall s.
                         GHC.ST.ST
                           s (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value))
                      @ Data.Aeson.Types.Internal.Array
                      (Data.Vector.create @ Data.Aeson.Types.Internal.Value)
                      (\ @ s (s1 :: GHC.Prim.State# s)[OneShot] ->
                       case (GHC.Base.$
                               @ 'GHC.Types.PtrRepLifted
                               @ (GHC.ST.ST
                                    s
                                    (Data.Vector.Mutable.MVector
                                       (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                       Data.Aeson.Types.Internal.Value))
                               @ (GHC.ST.ST
                                    s
                                    (Data.Vector.Mutable.MVector
                                       (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                       Data.Aeson.Types.Internal.Value))
                               (Data.Vector.Internal.Check.checkLength
                                  @ (GHC.ST.ST
                                       s
                                       (Data.Vector.Mutable.MVector
                                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                          Data.Aeson.Types.Internal.Value))
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b2 ->
                                      GHC.CString.unpackFoldrCString#
                                        @ b2
                                        ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                  (GHC.Types.I# 591#)
                                  Data.Vector.Internal.Check.Unsafe
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b2 -> GHC.CString.unpackFoldrCString# @ b2 "unsafeNew"#))
                                  (GHC.Types.I# 2#))
                               (\ (s2 :: GHC.Prim.State# s)[OneShot] ->
                                case GHC.Prim.newArray#
                                       @ Data.Aeson.Types.Internal.Value
                                       @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                       2#
                                       (Data.Vector.Mutable.uninitialised
                                          @ Data.Aeson.Types.Internal.Value)
                                       s2
                                         `cast`
                                       (GHC.Prim.State#
                                          (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                    <s>_N)))_R of ds7 { (#,#) ipv ipv1 ->
                                (GHC.ST.$fMonadST_$creturn
                                   @ s
                                   @ (Data.Vector.Mutable.MVector
                                        (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        Data.Aeson.Types.Internal.Value)
                                   (Data.Vector.Mutable.MVector
                                      @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                      @ Data.Aeson.Types.Internal.Value
                                      0#
                                      2#
                                      ipv1))
                                  `cast`
                                (GHC.ST.N:ST[0]
                                     <s>_N
                                     <Data.Vector.Mutable.MVector
                                        (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                        Data.Aeson.Types.Internal.Value>_R)
                                  ipv
                                    `cast`
                                  (GHC.Prim.State#
                                     (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))_R })
                                 `cast`
                               (Sym (GHC.ST.N:ST[0]
                                         <s>_N
                                         <Data.Vector.Mutable.MVector
                                            (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                            Data.Aeson.Types.Internal.Value>_R)))
                              `cast`
                            (GHC.ST.N:ST[0]
                                 <s>_N
                                 (Data.Vector.Mutable.MVector
                                    (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N)
                                    <Data.Aeson.Types.Internal.Value>_R)_R)
                              s1 of ds7 { (#,#) ipv ipv1 ->
                       let {
                         eta1 :: GHC.Types.Int = GHC.Types.I# 0#
                       } in
                       (GHC.ST.$fMonadST_$c>>
                          @ s
                          @ ()
                          @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                          (GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ (GHC.ST.ST s ())
                             @ (GHC.ST.ST s ())
                             (Data.Vector.Internal.Check.checkIndex
                                @ (GHC.ST.ST s ())
                                (GHC.Base.build
                                   @ GHC.Types.Char
                                   (\ @ b2 ->
                                    GHC.CString.unpackFoldrCString#
                                      @ b2
                                      ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                (GHC.Types.I# 729#)
                                Data.Vector.Internal.Check.Unsafe
                                (GHC.Base.build
                                   @ GHC.Types.Char
                                   (\ @ b2 -> GHC.CString.unpackFoldrCString# @ b2 "unsafeWrite"#))
                                eta1
                                (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                   @ Data.Aeson.Types.Internal.Value
                                   @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                   ipv1
                                     `cast`
                                   (Data.Vector.Mutable.MVector
                                      (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                      <Data.Aeson.Types.Internal.Value>_R)_R))
                             (case ipv1
                                     `cast`
                                   (Data.Vector.Mutable.MVector
                                      (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                      <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                              case GHC.Num.$fNumInt_$c+
                                     (GHC.Types.I# dt1)
                                     eta1 of wild2 { GHC.Types.I# i# ->
                              (\ (s# :: GHC.Prim.State#
                                          (Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST s)))[OneShot] ->
                               case Data.Primitive.Array.marray#
                                      @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                      @ Data.Aeson.Types.Internal.Value
                                      (Data.Primitive.Array.MutableArray
                                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         @ Data.Aeson.Types.Internal.Value
                                         dt3) of wild3 { DEFAULT ->
                               case GHC.Prim.writeArray#
                                      @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                      @ Data.Aeson.Types.Internal.Value
                                      wild3
                                      i#
                                      (Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON a2)
                                      s# of s'# { DEFAULT ->
                               (# s'#, GHC.Tuple.() #) } })
                                `cast`
                              (Sym (GHC.ST.N:ST[0]
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                        <()>_R)) } }))
                          (GHC.ST.$fMonadST_$c>>
                             @ s
                             @ ()
                             @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                             (let {
                                eta2 :: GHC.Types.Int = GHC.Types.I# 1#
                              } in
                              GHC.Base.$
                                @ 'GHC.Types.PtrRepLifted
                                @ (GHC.ST.ST s ())
                                @ (GHC.ST.ST s ())
                                (Data.Vector.Internal.Check.checkIndex
                                   @ (GHC.ST.ST s ())
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b2 ->
                                       GHC.CString.unpackFoldrCString#
                                         @ b2
                                         ".\\Data\\Vector\\Generic\\Mutable.hs"#))
                                   (GHC.Types.I# 729#)
                                   Data.Vector.Internal.Check.Unsafe
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b2 ->
                                       GHC.CString.unpackFoldrCString# @ b2 "unsafeWrite"#))
                                   eta2
                                   (Data.Vector.Mutable.$fMVectorMVectora_$cbasicLength
                                      @ Data.Aeson.Types.Internal.Value
                                      @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                      ipv1
                                        `cast`
                                      (Data.Vector.Mutable.MVector
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                         <Data.Aeson.Types.Internal.Value>_R)_R))
                                (case ipv1
                                        `cast`
                                      (Data.Vector.Mutable.MVector
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                         <Data.Aeson.Types.Internal.Value>_R)_R of wild1 { Data.Vector.Mutable.MVector dt1 dt2 dt3 ->
                                 case GHC.Num.$fNumInt_$c+
                                        (GHC.Types.I# dt1)
                                        eta2 of wild2 { GHC.Types.I# i# ->
                                 (\ (s# :: GHC.Prim.State#
                                             (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST s)))[OneShot] ->
                                  case Data.Primitive.Array.marray#
                                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         @ Data.Aeson.Types.Internal.Value
                                         (Data.Primitive.Array.MutableArray
                                            @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                            @ Data.Aeson.Types.Internal.Value
                                            dt3) of wild3 { DEFAULT ->
                                  case GHC.Prim.writeArray#
                                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                         @ Data.Aeson.Types.Internal.Value
                                         wild3
                                         i#
                                         (Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON
                                            b1)
                                         s# of s'# { DEFAULT ->
                                  (# s'#, GHC.Tuple.() #) } })
                                   `cast`
                                 (Sym (GHC.ST.N:ST[0]
                                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0] <s>_N))
                                           <()>_R)) } }))
                             (GHC.ST.$fMonadST_$creturn
                                @ s
                                @ (Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value)
                                ipv1)))
                         `cast`
                       (GHC.ST.N:ST[0]
                            <s>_N
                            <Data.Vector.Mutable.MVector s Data.Aeson.Types.Internal.Value>_R)
                         ipv })
                        `cast`
                      (forall (s :: <*>_N).
                       Sym (GHC.ST.N:ST[0]
                                <s>_N
                                <Data.Vector.Mutable.MVector
                                   s Data.Aeson.Types.Internal.Value>_R))) }) -}
e5f3b0faa5adf052a2bf37cf7b1c0f79
  $tc'QRes :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9384890791761924555##
                   2044174856568417725##
                   Datas.$trModule
                   Datas.$tc'QRes1) -}
c4e9791223ea14cd2194c6e53e3c1327
  $tc'QRes1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'QRes"#) -}
f2ef087824c5f2fe1ed5899f72125fee
  $tc'Spot :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8927813545124715171##
                   17184492862062371027##
                   Datas.$trModule
                   Datas.$tc'Spot1) -}
87c9ecc851ab1a99219c955554bd7d9b
  $tc'Spot1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Spot"#) -}
a019aa62c9466aad78a551723b878900
  $tc'Trip :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12608832688892269251##
                   15715267592268866491##
                   Datas.$trModule
                   Datas.$tc'Trip1) -}
960d309a16ba43a9e9c0c366c6d14ba9
  $tc'Trip1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Trip"#) -}
8955c4e773595115323a89f395e82276
  $tcQRes :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4966970028715835504##
                   1617096582803789458##
                   Datas.$trModule
                   Datas.$tcQRes1) -}
0e5600a748b9004dfa7d50bd6e8833e2
  $tcQRes1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "QRes"#) -}
9c3bb8cd2f7e5e61c5a13043d400f961
  $tcSpot :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8072978789633867140##
                   6027160830658649278##
                   Datas.$trModule
                   Datas.$tcSpot1) -}
250822d6357cf5649197dc9ea5425991
  $tcSpot1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Spot"#) -}
ffc765b308d7e0c9d48eb85a7b24d446
  $tcTrip :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14330841737608926637##
                   13467681458587842369##
                   Datas.$trModule
                   Datas.$tcTrip1) -}
d36f37830e7647c239653b065e1ff1b4
  $tcTrip1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Trip"#) -}
eb611176bd6d77275689dfb00a122fde
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Datas.$trModule2 Datas.$trModule1) -}
5446d633186ccb9ddef128fc01d971ef
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Datas"#) -}
635c3d53ff9a69a0d4b90b67b8befbed
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "server-0.1.0.1-A87ge1buU3B90FB70286D6"#) -}
58ac2cc43488dff6f5791e75b2ba9b79
  $w$c< ::
    GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Types.Bool
  {- Arity: 12, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
07d2863127f3528fee4141577492e659
  $w$c<1 ::
    [Datas.Spot]
    -> GHC.Base.String
    -> GHC.Base.String
    -> [Datas.Spot]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [Datas.Spot])
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: [Datas.Spot])
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Datas.Spot
                        Datas.$fOrdSpot
                        ww
                        ww3 of wild {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> case GHC.Classes.$fOrd[]_$s$ccompare1 ww1 ww4 of wild1 {
                        GHC.Types.LT -> GHC.Types.True
                        GHC.Types.EQ -> GHC.Classes.$fOrd[]_$s$c<1 ww2 ww5
                        GHC.Types.GT -> GHC.Types.False }
                   GHC.Types.GT -> GHC.Types.False }) -}
be287e2883ce1de45143d589dbb93521
  $w$c<= ::
    GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Types.Bool
  {- Arity: 12, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
07d2863127f3528fee4141577492e659
  $w$c<=1 ::
    [Datas.Spot]
    -> GHC.Base.String
    -> GHC.Base.String
    -> [Datas.Spot]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [Datas.Spot])
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: [Datas.Spot])
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Datas.Spot
                        Datas.$fOrdSpot
                        ww
                        ww3 of wild {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ
                   -> case GHC.Classes.$fOrd[]_$s$ccompare1 ww1 ww4 of wild1 {
                        GHC.Types.LT -> GHC.Types.True
                        GHC.Types.EQ -> GHC.Classes.$fOrd[]_$s$c<=1 ww2 ww5
                        GHC.Types.GT -> GHC.Types.False }
                   GHC.Types.GT -> GHC.Types.False }) -}
62d90e0260b89c96f46ee1350c9ab32f
  $w$c== ::
    GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Types.Bool
  {- Arity: 12, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
f6d134d8614d62402f8f83e03bf61930
  $w$c==1 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double)
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double)
    -> GHC.Types.Bool
  {- Arity: 16, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Int)
                   (ww5 :: GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double))
                   (ww6 :: GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int))
                   (ww7 :: GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double))
                   (ww8 :: GHC.Prim.Double#)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Int)
                   (ww13 :: GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double))
                   (ww14 :: GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int))
                   (ww15 :: GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double)) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==## ww ww8) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case ww1 of wild1 { GHC.Types.D# x ->
                      case ww9 of wild2 { GHC.Types.D# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## x y) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case ww2 of wild4 { GHC.Types.D# x1 ->
                           case ww10 of wild5 { GHC.Types.D# y1 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==## x1 y1) of wild6 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case ww3 of wild7 { GHC.Types.D# x2 ->
                                case ww11 of wild8 { GHC.Types.D# y2 ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x2 y2) of wild9 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case ww4 of wild10 { GHC.Types.I# x3 ->
                                     case ww12 of wild11 { GHC.Types.I# y3 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==# x3 y3) of wild12 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> let {
                                            $j :: GHC.Prim.Void# -> GHC.Types.Bool
                                              {- Arity: 1, Strictness: <L,A> -}
                                            = \ (w :: GHC.Prim.Void#)[OneShot] ->
                                              let {
                                                $j1 :: GHC.Prim.Void# -> GHC.Types.Bool
                                                  {- Arity: 1, Strictness: <L,A> -}
                                                = \ (w1 :: GHC.Prim.Void#)[OneShot] ->
                                                  case ww7 of wild13 {
                                                    GHC.Base.Nothing
                                                    -> case ww15 of wild14 {
                                                         GHC.Base.Nothing -> GHC.Types.True
                                                         GHC.Base.Just ipv -> GHC.Types.False }
                                                    GHC.Base.Just a2
                                                    -> case ww15 of wild14 {
                                                         GHC.Base.Nothing -> GHC.Types.False
                                                         GHC.Base.Just b1
                                                         -> case a2 of ww16 { (,) ww17 ww18 ->
                                                            case b1 of ww19 { (,) ww20 ww21 ->
                                                            case ww17 of wild15 { GHC.Types.I# x4 ->
                                                            case ww20 of wild16 { GHC.Types.I# y4 ->
                                                            case GHC.Prim.tagToEnum#
                                                                   @ GHC.Types.Bool
                                                                   (GHC.Prim.==# x4 y4) of wild17 {
                                                              GHC.Types.False -> GHC.Types.False
                                                              GHC.Types.True
                                                              -> GHC.Classes.eqDouble
                                                                   ww18
                                                                   ww21 } } } } } } }
                                              } in
                                              case ww6 of wild13 {
                                                GHC.Base.Nothing
                                                -> case ww14 of wild14 {
                                                     GHC.Base.Nothing -> $j1 GHC.Prim.void#
                                                     GHC.Base.Just ipv -> GHC.Types.False }
                                                GHC.Base.Just a2
                                                -> case ww14 of wild14 {
                                                     GHC.Base.Nothing -> GHC.Types.False
                                                     GHC.Base.Just b1
                                                     -> case a2 of ww16 { (,) ww17 ww18 ->
                                                        case b1 of ww19 { (,) ww20 ww21 ->
                                                        case ww17 of wild15 { GHC.Types.I# x4 ->
                                                        case ww20 of wild16 { GHC.Types.I# y4 ->
                                                        case GHC.Prim.tagToEnum#
                                                               @ GHC.Types.Bool
                                                               (GHC.Prim.==# x4 y4) of wild17 {
                                                          GHC.Types.False -> GHC.Types.False
                                                          GHC.Types.True
                                                          -> case ww18 of wild18 { GHC.Types.I# x5 ->
                                                             case ww21 of wild19 { GHC.Types.I# y5 ->
                                                             case GHC.Prim.tagToEnum#
                                                                    @ GHC.Types.Bool
                                                                    (GHC.Prim.==# x5 y5) of wild20 {
                                                               GHC.Types.False -> GHC.Types.False
                                                               GHC.Types.True
                                                               -> $j1
                                                                    GHC.Prim.void# } } } } } } } } } }
                                          } in
                                          case ww5 of wild13 {
                                            GHC.Base.Nothing
                                            -> case ww13 of wild14 {
                                                 GHC.Base.Nothing -> $j GHC.Prim.void#
                                                 GHC.Base.Just ipv -> GHC.Types.False }
                                            GHC.Base.Just a2
                                            -> case ww13 of wild14 {
                                                 GHC.Base.Nothing -> GHC.Types.False
                                                 GHC.Base.Just b1
                                                 -> case a2 of ww16 { (,) ww17 ww18 ->
                                                    case b1 of ww19 { (,) ww20 ww21 ->
                                                    case ww17 of wild15 { GHC.Types.D# x4 ->
                                                    case ww20 of wild16 { GHC.Types.D# y4 ->
                                                    case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x4 y4) of wild17 {
                                                      GHC.Types.False -> GHC.Types.False
                                                      GHC.Types.True
                                                      -> case ww18 of wild18 { GHC.Types.D# x5 ->
                                                         case ww21 of wild19 { GHC.Types.D# y5 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.==## x5 y5) of wild20 {
                                                           GHC.Types.False -> GHC.Types.False
                                                           GHC.Types.True
                                                           -> $j
                                                                GHC.Prim.void# } } } } } } } } } } } } } } } } } } } } } } }) -}
07d2863127f3528fee4141577492e659
  $w$c==2 ::
    [Datas.Spot]
    -> GHC.Base.String
    -> GHC.Base.String
    -> [Datas.Spot]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [Datas.Spot])
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: [Datas.Spot])
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ Datas.Spot
                        Datas.$fEqSpot
                        ww
                        ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> GHC.Base.eqString ww2 ww5 } }) -}
8ebda4fcbea8fda0db49eb722e479d40
  $w$c> ::
    GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Types.Bool
  {- Arity: 12, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
07d2863127f3528fee4141577492e659
  $w$c>1 ::
    [Datas.Spot]
    -> GHC.Base.String
    -> GHC.Base.String
    -> [Datas.Spot]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [Datas.Spot])
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: [Datas.Spot])
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Datas.Spot
                        Datas.$fOrdSpot
                        ww
                        ww3 of wild {
                   GHC.Types.LT -> GHC.Types.False
                   GHC.Types.EQ
                   -> case GHC.Classes.$fOrd[]_$s$ccompare1 ww1 ww4 of wild1 {
                        GHC.Types.LT -> GHC.Types.False
                        GHC.Types.EQ -> GHC.Classes.$fOrd[]_$s$c>1 ww2 ww5
                        GHC.Types.GT -> GHC.Types.True }
                   GHC.Types.GT -> GHC.Types.True }) -}
148bdd6f63c52965e1e249ffac2dc5d5
  $w$c>= ::
    GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Types.Bool
  {- Arity: 12, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
07d2863127f3528fee4141577492e659
  $w$c>=1 ::
    [Datas.Spot]
    -> GHC.Base.String
    -> GHC.Base.String
    -> [Datas.Spot]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [Datas.Spot])
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: [Datas.Spot])
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Datas.Spot
                        Datas.$fOrdSpot
                        ww
                        ww3 of wild {
                   GHC.Types.LT -> GHC.Types.False
                   GHC.Types.EQ
                   -> case GHC.Classes.$fOrd[]_$s$ccompare1 ww1 ww4 of wild1 {
                        GHC.Types.LT -> GHC.Types.False
                        GHC.Types.EQ -> GHC.Classes.$fOrd[]_$s$c>=1 ww2 ww5
                        GHC.Types.GT -> GHC.Types.True }
                   GHC.Types.GT -> GHC.Types.True }) -}
837dd1765e0a0d58284150061c3830c5
  $w$ccompare ::
    GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Types.Ordering
  {- Arity: 12, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
02f89c9e0fee08169b1ec8c2e51a50c3
  $w$ccompare1 ::
    GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double)
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double)
    -> GHC.Types.Ordering
  {- Arity: 8, HasNoCafRefs,
     Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><S,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Double)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Int)
                   (ww3 :: GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double))
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Int)
                   (ww7 :: GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double)) ->
                 case ww3 of wild {
                   GHC.Base.Nothing
                   -> case ww7 of wild1 {
                        GHC.Base.Nothing
                        -> case ww2 of wild2 { GHC.Types.I# x# ->
                           case ww6 of wild3 { GHC.Types.I# y# ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# x# y#) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# x# y#) of wild5 {
                                  GHC.Types.False -> GHC.Types.GT
                                  GHC.Types.True
                                  -> case ww of wild6 { GHC.Types.D# x ->
                                     case ww4 of wild7 { GHC.Types.D# y ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x y) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x y) of wild9 {
                                            GHC.Types.False -> GHC.Types.GT
                                            GHC.Types.True
                                            -> case ww1 of wild10 { GHC.Types.D# x1 ->
                                               case ww5 of wild11 { GHC.Types.D# y1 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x1 y1) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x1 y1) of wild13 {
                                                      GHC.Types.False -> GHC.Types.GT
                                                      GHC.Types.True -> GHC.Types.EQ }
                                                 GHC.Types.True -> GHC.Types.LT } } } }
                                       GHC.Types.True -> GHC.Types.LT } } } }
                             GHC.Types.True -> GHC.Types.LT } } }
                        GHC.Base.Just ds -> GHC.Types.LT }
                   GHC.Base.Just ds
                   -> case ww7 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.GT
                        GHC.Base.Just ipv
                        -> case ds of wild2 { (,) i maxD ->
                           case ipv of wild3 { (,) i2 maxD2 ->
                           case maxD of wild4 { GHC.Types.D# x ->
                           case maxD2 of wild5 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild6 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild7 {
                                  GHC.Types.False -> GHC.Types.GT
                                  GHC.Types.True
                                  -> case i of wild8 { GHC.Types.I# x# ->
                                     case i2 of wild9 { GHC.Types.I# y# ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<# x# y#) of wild10 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==# x# y#) of wild11 {
                                            GHC.Types.False -> GHC.Types.GT
                                            GHC.Types.True
                                            -> case ww2 of wild12 { GHC.Types.I# x#1 ->
                                               case ww6 of wild13 { GHC.Types.I# y#1 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<# x#1 y#1) of wild14 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==# x#1 y#1) of wild15 {
                                                      GHC.Types.False -> GHC.Types.GT
                                                      GHC.Types.True
                                                      -> case ww of wild16 { GHC.Types.D# x1 ->
                                                         case ww4 of wild17 { GHC.Types.D# y1 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x1 y1) of wild18 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x1
                                                                        y1) of wild19 {
                                                                GHC.Types.False -> GHC.Types.GT
                                                                GHC.Types.True
                                                                -> case ww1 of wild20 { GHC.Types.D# x2 ->
                                                                   case ww5 of wild21 { GHC.Types.D# y2 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x2
                                                                             y2) of wild22 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x2
                                                                                  y2) of wild23 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.GT
                                                                          GHC.Types.True
                                                                          -> GHC.Types.EQ }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.LT } } } }
                                                           GHC.Types.True -> GHC.Types.LT } } } }
                                                 GHC.Types.True -> GHC.Types.LT } } } }
                                       GHC.Types.True -> GHC.Types.LT } } } }
                             GHC.Types.True -> GHC.Types.LT } } } } } } }) -}
07d2863127f3528fee4141577492e659
  $w$ccompare2 ::
    [Datas.Spot]
    -> GHC.Base.String
    -> GHC.Base.String
    -> [Datas.Spot]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Ordering
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [Datas.Spot])
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: [Datas.Spot])
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Datas.Spot
                        Datas.$fOrdSpot
                        ww
                        ww3 of wild {
                   GHC.Types.LT -> GHC.Types.LT
                   GHC.Types.EQ
                   -> case GHC.Classes.$fOrd[]_$s$ccompare1 ww1 ww4 of wild1 {
                        GHC.Types.LT -> GHC.Types.LT
                        GHC.Types.EQ -> GHC.Classes.$fOrd[]_$s$ccompare1 ww2 ww5
                        GHC.Types.GT -> GHC.Types.GT }
                   GHC.Types.GT -> GHC.Types.GT }) -}
bdcf9abbfbac72ceca36940fe2fad6e1
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Show.ShowS
  {- Arity: 7,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
d3c84049cc3d32932a17cae1fccbaadc
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double)
    -> GHC.Show.ShowS
  {- Arity: 9,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,U(U)><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
07d2863127f3528fee4141577492e659
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> [Datas.Spot]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
e34ff0cbba0bd4cc38422d4cbd100705
  $w$ctoJSON ::
    GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe GHC.Types.Double
    -> GHC.Base.Maybe Datas.TripCount
    -> GHC.Base.Maybe Datas.DataPoints
    -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 6,
     Strictness: <L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.Maybe GHC.Types.Double)
                   (ww1 :: GHC.Base.Maybe GHC.Types.Double)
                   (ww2 :: GHC.Base.Maybe GHC.Types.Double)
                   (ww3 :: GHC.Base.Maybe Datas.TripCount)
                   (ww4 :: GHC.Base.Maybe Datas.DataPoints)
                   (ww5 :: GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                           (Datas.$fToJSONQRes17,
                            case ww of wild1 {
                              GHC.Base.Nothing -> Data.Aeson.Types.Internal.Null
                              GHC.Base.Just a2
                              -> Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON a2 })
                           (GHC.Types.:
                              @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                              (Datas.$fToJSONQRes14,
                               case ww1 of wild1 {
                                 GHC.Base.Nothing -> Data.Aeson.Types.Internal.Null
                                 GHC.Base.Just a2
                                 -> Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON a2 })
                              (GHC.Types.:
                                 @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                                 (Datas.$fToJSONQRes11,
                                  case ww2 of wild1 {
                                    GHC.Base.Nothing -> Data.Aeson.Types.Internal.Null
                                    GHC.Base.Just a2
                                    -> Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON
                                         a2 })
                                 (GHC.Types.:
                                    @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                                    (Datas.$fToJSONQRes8,
                                     case ww3 of wild1 {
                                       GHC.Base.Nothing -> Data.Aeson.Types.Internal.Null
                                       GHC.Base.Just a2
                                       -> case a2 of wild { GHC.Types.I# i ->
                                          case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                                          Data.Aeson.Types.Internal.Number
                                            (Data.Scientific.Scientific dt 0#) } } })
                                    (GHC.Types.:
                                       @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                                       (Datas.$fToJSONQRes5,
                                        case ww4 of wild1 {
                                          GHC.Base.Nothing -> Data.Aeson.Types.Internal.Null
                                          GHC.Base.Just a2
                                          -> case a2 of wild { GHC.Types.I# i ->
                                             case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                                             Data.Aeson.Types.Internal.Number
                                               (Data.Scientific.Scientific dt 0#) } } })
                                       (GHC.Types.:
                                          @ (Data.Text.Internal.Text,
                                             Data.Aeson.Types.Internal.Value)
                                          (Datas.$fToJSONQRes2,
                                           case ww5 of wild1 {
                                             GHC.Base.Nothing -> Data.Aeson.Types.Internal.Null
                                             GHC.Base.Just a2
                                             -> case a2 of wild { (,) a4 b1 ->
                                                case GHC.Magic.runRW#
                                                       @ 'GHC.Types.PtrRepLifted
                                                       @ (Data.Vector.Vector
                                                            Data.Aeson.Types.Internal.Value)
                                                       (\ (s1 :: GHC.Prim.State#
                                                                   GHC.Prim.RealWorld)[OneShot] ->
                                                        case GHC.Prim.newArray#
                                                               @ Data.Aeson.Types.Internal.Value
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                               2#
                                                               (Data.Vector.Mutable.uninitialised
                                                                  @ Data.Aeson.Types.Internal.Value)
                                                               s1
                                                                 `cast`
                                                               (GHC.Prim.State#
                                                                  (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                            <GHC.Prim.RealWorld>_N)))_R of ds7 { (#,#) ipv ipv1 ->
                                                        case GHC.Prim.writeArray#
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                               @ Data.Aeson.Types.Internal.Value
                                                               ipv1
                                                               0#
                                                               (Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON
                                                                  a4)
                                                               ipv of s'# { DEFAULT ->
                                                        case GHC.Prim.writeArray#
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                               @ Data.Aeson.Types.Internal.Value
                                                               ipv1
                                                               1#
                                                               (Data.Aeson.Types.ToJSON.$fToJSONDouble_$srealFloatToJSON
                                                                  b1)
                                                               s'# of s'#1 { DEFAULT ->
                                                        case GHC.Prim.unsafeFreezeArray#
                                                               @ (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                               @ Data.Aeson.Types.Internal.Value
                                                               ipv1
                                                               s'#1 of ds { (#,#) ipv2 ipv3 ->
                                                        (# ipv2
                                                             `cast`
                                                           (GHC.Prim.State#
                                                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                   <GHC.Prim.RealWorld>_N))_R,
                                                           Data.Vector.Vector
                                                             @ Data.Aeson.Types.Internal.Value
                                                             0#
                                                             2#
                                                             ipv3 #) } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                                                case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                                                Data.Aeson.Types.Internal.Array dt } } } })
                                          (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
6591e68899440f9963da310fc343d5d4
  $w$dGFromJSON ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "QRes"
               "Datas"
               "server-0.1.0.1-A87ge1buU3B90FB70286D6"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "QRes" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "maxSpeed")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "minSpeed")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "aveSpeed")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (GHC.Base.Maybe GHC.Types.Double))))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "trips")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe Datas.TripCount))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "dataPoints")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (GHC.Base.Maybe Datas.DataPoints))
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "aveLocation")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (GHC.Base.Maybe
                                                                             (GHC.Types.Double,
                                                                              GHC.Types.Double)))))))
            a1)
  {- Arity: 2, Strictness: <L,1*U(C(U),A,A,A,A,1*U)><L,1*U>,
     Inline: [0] -}
8ac237aa45edb27b427d7fe79dac4449
  $w$dRecordToPairs ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "lat")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Types.Double)
         a1
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "speed")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Types.Double)
         a1
    -> (GHC.Generics.:*:)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "lng")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Types.Double))
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "dist")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Types.Double))
         a1
    -> (GHC.Generics.:*:)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "index")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Types.Int)
          GHC.Generics.:*: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "extremes")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0
                                (GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double))))
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "sources")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 (GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int)))
          GHC.Generics.:*: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "tripInfo")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0
                                (GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double))))
         a1
    -> [Data.Aeson.Types.Internal.Pair]
    -> (# Data.Aeson.Types.Internal.Pair,
          [Data.Aeson.Types.Internal.Pair] #)
  {- Arity: 6,
     Strictness: <L,U(C(U),A,A,U,A,A)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U))><L,1*U(1*U(1*U(U),U),1*U(U,U))><L,U>,
     Inline: [0] -}
07d2863127f3528fee4141577492e659
  $w$dRecordToPairs1 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "coords")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 [Datas.Spot])
         a1
    -> (GHC.Generics.:*:)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "start_time")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Base.String))
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "end_time")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Base.String))
         a1
    -> [Data.Aeson.Types.Internal.Pair]
    -> (# Data.Aeson.Types.Internal.Pair,
          [Data.Aeson.Types.Internal.Pair] #)
  {- Arity: 4,
     Strictness: <L,U(C(U),A,A,A,A,A)><L,1*U><L,1*U(1*U,1*U)><L,U>,
     Inline: [0] -}
05f7f00e5620748ee714b5eee6512d46
  type DataPoints = GHC.Types.Int
7323848740c19bfe12b610acaabb9b48
  type Distance = GHC.Types.Double
28e2f7745460b7de0fe754a58835f5b4
  type Lat = GHC.Types.Double
29f35b9d515f68732ba92ba21e33bac5
  type Long = GHC.Types.Double
c6dfc4bbed30f203a0fa0825ac829a83
  data QRes
    = QRes {maxSpeed :: GHC.Base.Maybe GHC.Types.Double,
            minSpeed :: GHC.Base.Maybe GHC.Types.Double,
            aveSpeed :: GHC.Base.Maybe GHC.Types.Double,
            trips :: GHC.Base.Maybe Datas.TripCount,
            dataPoints :: GHC.Base.Maybe Datas.DataPoints,
            aveLocation :: GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)}
c6dfc4bbed30f203a0fa0825ac829a83
  axiom Rep_QRes::
      GHC.Generics.Rep Datas.QRes
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "QRes"
               "Datas"
               "server-0.1.0.1-A87ge1buU3B90FB70286D6"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "QRes" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "maxSpeed")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "minSpeed")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Double))
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "aveSpeed")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (GHC.Base.Maybe GHC.Types.Double))))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "trips")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe Datas.TripCount))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "dataPoints")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (GHC.Base.Maybe Datas.DataPoints))
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "aveLocation")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (GHC.Base.Maybe
                                                                             (GHC.Types.Double,
                                                                              GHC.Types.Double)))))))
07d2863127f3528fee4141577492e659
  axiom Rep_Spot::
      GHC.Generics.Rep Datas.Spot
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Spot"
               "Datas"
               "server-0.1.0.1-A87ge1buU3B90FB70286D6"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Spot" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (((GHC.Generics.S1
                    ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "lat")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                    (GHC.Generics.Rec0 GHC.Types.Double)
                  GHC.Generics.:*: GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "speed")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Double))
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "lng")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Double)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "dist")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Double)))
                GHC.Generics.:*: ((GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "index")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "extremes")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (GHC.Base.Maybe
                                                            (GHC.Types.Double, GHC.Types.Double))))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "sources")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (GHC.Base.Maybe
                                                            (GHC.Types.Int, GHC.Types.Int)))
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "tripInfo")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (GHC.Base.Maybe
                                                                             (GHC.Types.Int,
                                                                              GHC.Types.Double)))))))
07d2863127f3528fee4141577492e659
  axiom Rep_Trip::
      GHC.Generics.Rep Datas.Trip
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Trip"
               "Datas"
               "server-0.1.0.1-A87ge1buU3B90FB70286D6"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Trip" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "coords")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 [Datas.Spot])
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "start_time")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "end_time")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))))
07d2863127f3528fee4141577492e659
  data Spot
    = Spot {lat :: GHC.Types.Double,
            speed :: GHC.Types.Double,
            lng :: GHC.Types.Double,
            dist :: GHC.Types.Double,
            index :: GHC.Types.Int,
            extremes :: GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double),
            sources :: GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int),
            tripInfo :: GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double)}
07d2863127f3528fee4141577492e659
  data Trip
    = Trip {coords :: [Datas.Spot],
            start_time :: GHC.Base.String,
            end_time :: GHC.Base.String}
77392b3098323b6d8914dd19fc138f65
  type TripCount = GHC.Types.Int
7d4e48069607d525af6953aede7caecb
  aveLocation ::
    Datas.QRes -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
  RecSel Left Datas.QRes
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.QRes) ->
                 case ds of wild { Datas.QRes ds1 ds2 ds3 ds4 ds5 ds6 -> ds6 }) -}
a6a423cbbc2b93bfe05d83643c24dc57
  aveSpeed :: Datas.QRes -> GHC.Base.Maybe GHC.Types.Double
  RecSel Left Datas.QRes
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.QRes) ->
                 case ds of wild { Datas.QRes ds1 ds2 ds3 ds4 ds5 ds6 -> ds3 }) -}
e8372a2967ec343a29f6812f49c9b82d
  coords :: Datas.Trip -> [Datas.Spot]
  RecSel Left Datas.Trip
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.Trip) ->
                 case ds of wild { Datas.Trip ds1 ds2 ds3 -> ds1 }) -}
a2a4394441ecfb96854c834f61c0974b
  dataPoints :: Datas.QRes -> GHC.Base.Maybe Datas.DataPoints
  RecSel Left Datas.QRes
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.QRes) ->
                 case ds of wild { Datas.QRes ds1 ds2 ds3 ds4 ds5 ds6 -> ds5 }) -}
3029a53f821ce25bfb135365f459307a
  dist :: Datas.Spot -> GHC.Types.Double
  RecSel Left Datas.Spot
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLL),1*U(A,A,A,1*U(U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.Spot) ->
                 case ds of wild { Datas.Spot ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds4 }) -}
341907c14ec8a5eac269f8c0e59420f2
  end_time :: Datas.Trip -> GHC.Base.String
  RecSel Left Datas.Trip
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.Trip) ->
                 case ds of wild { Datas.Trip ds1 ds2 ds3 -> ds3 }) -}
c3e354a484cedb1889885f934f4ad628
  extremes ::
    Datas.Spot -> GHC.Base.Maybe (GHC.Types.Double, GHC.Types.Double)
  RecSel Left Datas.Spot
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLL),1*U(A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.Spot) ->
                 case ds of wild { Datas.Spot ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds6 }) -}
4262363719017304e041dbd2ad593256
  index :: Datas.Spot -> GHC.Types.Int
  RecSel Left Datas.Spot
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLL),1*U(A,A,A,A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.Spot) ->
                 case ds of wild { Datas.Spot ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds5 }) -}
1b37556868e5c85e0e8ca100c80f5bf8
  lat :: Datas.Spot -> GHC.Types.Double
  RecSel Left Datas.Spot
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLL),1*U(1*U(U),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.Spot) ->
                 case ds of wild { Datas.Spot ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds1 }) -}
eac17483c4668274bec7938f5eac7660
  lng :: Datas.Spot -> GHC.Types.Double
  RecSel Left Datas.Spot
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLL),1*U(A,A,1*U(U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.Spot) ->
                 case ds of wild { Datas.Spot ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds3 }) -}
3750d6a745f70bb00eb9f1ba1ca87b97
  maxSpeed :: Datas.QRes -> GHC.Base.Maybe GHC.Types.Double
  RecSel Left Datas.QRes
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.QRes) ->
                 case ds of wild { Datas.QRes ds1 ds2 ds3 ds4 ds5 ds6 -> ds1 }) -}
bcbc4bd4d42e1f4e0ff61583053d6747
  minSpeed :: Datas.QRes -> GHC.Base.Maybe GHC.Types.Double
  RecSel Left Datas.QRes
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.QRes) ->
                 case ds of wild { Datas.QRes ds1 ds2 ds3 ds4 ds5 ds6 -> ds2 }) -}
180db9c29bc701effb7411cf29614e08
  mkQRes ::
    GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Datas.TripCount
    -> Datas.DataPoints
    -> (GHC.Types.Double, GHC.Types.Double)
    -> Datas.QRes
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U>m,
     Unfolding: InlineRule (6, True, False)
                (\ (mn :: GHC.Types.Double)
                   (av :: GHC.Types.Double)
                   (mx :: GHC.Types.Double)
                   (tc :: Datas.TripCount)
                   (dpc :: Datas.DataPoints)
                   (latlng :: (GHC.Types.Double, GHC.Types.Double)) ->
                 Datas.QRes
                   (GHC.Base.Just @ GHC.Types.Double mx)
                   (GHC.Base.Just @ GHC.Types.Double mn)
                   (GHC.Base.Just @ GHC.Types.Double av)
                   (GHC.Base.Just @ Datas.TripCount tc)
                   (GHC.Base.Just @ Datas.DataPoints dpc)
                   (GHC.Base.Just @ (GHC.Types.Double, GHC.Types.Double) latlng)) -}
dbc960e9efae63532a88d4b77761d1e2
  mkSpot :: Datas.Lat -> Datas.Long -> Datas.Spot
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m,
     Unfolding: InlineRule (2, True, False)
                (\ (lat1 :: Datas.Lat) (lng1 :: Datas.Long) ->
                 Datas.Spot
                   lat1
                   Datas.mkSpot2
                   lng1
                   Datas.mkSpot2
                   Datas.mkSpot1
                   (GHC.Base.Nothing @ (GHC.Types.Double, GHC.Types.Double))
                   (GHC.Base.Nothing @ (GHC.Types.Int, GHC.Types.Int))
                   (GHC.Base.Nothing @ (GHC.Types.Int, GHC.Types.Double))) -}
d8b88e143cd44cf9b546f81afb42735a
  mkSpot1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
2512cbae258413530c4a4db756a074d1
  mkSpot2 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
d048ede6be69b4b19a7daffd19d5372d
  qres_setSpot ::
    Datas.QRes -> (GHC.Types.Double, GHC.Types.Double) -> Datas.QRes
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,A)><L,U>m,
     Unfolding: InlineRule (2, True, False)
                (\ (q :: Datas.QRes)
                   (sp :: (GHC.Types.Double, GHC.Types.Double)) ->
                 case q of wild { Datas.QRes ds ds1 ds2 ds3 ds4 ds5 ->
                 Datas.QRes
                   ds
                   ds1
                   ds2
                   ds3
                   ds4
                   (GHC.Base.Just @ (GHC.Types.Double, GHC.Types.Double) sp) }) -}
16c74df46706bb435d88cfc3c77866f9
  radiusOfEarth :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.D# 6378700.0##) -}
57902b33d8996075102cb8d353db2917
  sources ::
    Datas.Spot -> GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Int)
  RecSel Left Datas.Spot
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSL),1*U(A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.Spot) ->
                 case ds of wild { Datas.Spot ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds7 }) -}
d570bfe6c57e8dc63e6dd8dc4cdc0ee5
  speed :: Datas.Spot -> GHC.Types.Double
  RecSel Left Datas.Spot
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.Spot) ->
                 case ds of wild { Datas.Spot ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds2 }) -}
e639732a8349793cb69726bb53321df9
  start_time :: Datas.Trip -> GHC.Base.String
  RecSel Left Datas.Trip
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.Trip) ->
                 case ds of wild { Datas.Trip ds1 ds2 ds3 -> ds2 }) -}
89cec2bf0f75133eb48029bbf9fb2d3a
  tripInfo ::
    Datas.Spot -> GHC.Base.Maybe (GHC.Types.Int, GHC.Types.Double)
  RecSel Left Datas.Spot
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLS),1*U(A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.Spot) ->
                 case ds of wild { Datas.Spot ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds8 }) -}
61b30ffb6ab3416533bbe85d13db9cab
  trips :: Datas.QRes -> GHC.Base.Maybe Datas.TripCount
  RecSel Left Datas.QRes
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Datas.QRes) ->
                 case ds of wild { Datas.QRes ds1 ds2 ds3 ds4 ds5 ds6 -> ds4 }) -}
instance GHC.Classes.Eq [Datas.QRes] = Datas.$fEqQRes
instance GHC.Classes.Eq [Datas.Spot] = Datas.$fEqSpot
instance GHC.Classes.Eq [Datas.Trip] = Datas.$fEqTrip
instance Data.Aeson.Types.FromJSON.FromJSON [Datas.QRes]
  = Datas.$fFromJSONQRes
instance Data.Aeson.Types.FromJSON.FromJSON [Datas.Spot]
  = Datas.$fFromJSONSpot
instance Data.Aeson.Types.FromJSON.FromJSON [Datas.Trip]
  = Datas.$fFromJSONTrip
instance GHC.Generics.Generic [Datas.QRes] = Datas.$fGenericQRes
instance GHC.Generics.Generic [Datas.Spot] = Datas.$fGenericSpot
instance GHC.Generics.Generic [Datas.Trip] = Datas.$fGenericTrip
instance GHC.Classes.Ord [Datas.QRes] = Datas.$fOrdQRes
instance GHC.Classes.Ord [Datas.Spot] = Datas.$fOrdSpot
instance GHC.Classes.Ord [Datas.Trip] = Datas.$fOrdTrip
instance GHC.Show.Show [Datas.QRes] = Datas.$fShowQRes
instance GHC.Show.Show [Datas.Spot] = Datas.$fShowSpot
instance GHC.Show.Show [Datas.Trip] = Datas.$fShowTrip
instance Data.Aeson.Types.ToJSON.ToJSON [Datas.QRes]
  = Datas.$fToJSONQRes
instance Data.Aeson.Types.ToJSON.ToJSON [Datas.Spot]
  = Datas.$fToJSONSpot
instance Data.Aeson.Types.ToJSON.ToJSON [Datas.Trip]
  = Datas.$fToJSONTrip
family instance GHC.Generics.Rep [Datas.Trip] = Datas.Rep_Trip
family instance GHC.Generics.Rep [Datas.Spot] = Datas.Rep_Spot
family instance GHC.Generics.Rep [Datas.QRes] = Datas.Rep_QRes
"SPEC/Datas $fFromJSON(,) @ Double @ Double" [ALWAYS] forall ($dFromJSON1 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                               GHC.Types.Double)
                                                             ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                              GHC.Types.Double)
  Data.Aeson.Types.FromJSON.$fFromJSON(,) @ GHC.Types.Double
                                          @ GHC.Types.Double
                                          $dFromJSON
                                          $dFromJSON1
  = Datas.$s$fFromJSON(,)2
"SPEC/Datas $fFromJSON(,) @ Int @ Double" [ALWAYS] forall ($dFromJSON1 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                            GHC.Types.Double)
                                                          ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                           GHC.Types.Int)
  Data.Aeson.Types.FromJSON.$fFromJSON(,) @ GHC.Types.Int
                                          @ GHC.Types.Double
                                          $dFromJSON
                                          $dFromJSON1
  = Datas.$s$fFromJSON(,)
"SPEC/Datas $fFromJSON(,) @ Int @ Int" [ALWAYS] forall ($dFromJSON1 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                         GHC.Types.Int)
                                                       ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                        GHC.Types.Int)
  Data.Aeson.Types.FromJSON.$fFromJSON(,) @ GHC.Types.Int
                                          @ GHC.Types.Int
                                          $dFromJSON
                                          $dFromJSON1
  = Datas.$s$fFromJSON(,)1
"SPEC/Datas $fFromJSON[] @ Char" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                  GHC.Types.Char)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ GHC.Types.Char $dFromJSON
  = Datas.$fFromJSONTrip_$s$fFromJSON[]
"SPEC/Datas $fFromJSON[] @ Spot" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                  Datas.Spot)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ Datas.Spot $dFromJSON
  = Datas.$fFromJSONTrip_$s$fFromJSON[]1
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "aveLocation") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                              ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                              ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                              ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                               "aveLocation"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "aveLocation")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "aveSpeed") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                           ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                            "aveSpeed"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "aveSpeed")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel12
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "coords") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                                         ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                        'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                         ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                         ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                       ('GHC.Base.Just
                                                                                                                                                                                          "coords"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "coords")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$fFromJSONTrip_$s$fSelectorMetaMetaSel2
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "dataPoints") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                             ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                             ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                             ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                              "dataPoints"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "dataPoints")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel4
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "dist") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                                       ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                      'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                       ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                       ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                     ('GHC.Base.Just
                                                                                                                                                                                        "dist"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "dist")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel44
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "end_time") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                           ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                            "end_time"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "end_time")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$fFromJSONTrip_$s$fSelectorMetaMetaSel
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "extremes") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                           ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                            "extremes"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "extremes")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel34
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "index") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                        ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                        ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                        ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                                                         "index"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "index")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel39
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "lat") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                      ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                     'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                      ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                    ('GHC.Base.Just
                                                                                                                                                                                       "lat"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "lat")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel59
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "lng") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                      ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                     'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                      ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                    ('GHC.Base.Just
                                                                                                                                                                                       "lng"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "lng")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel49
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "maxSpeed") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                           ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                            "maxSpeed"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "maxSpeed")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel20
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "minSpeed") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                           ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                            "minSpeed"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "minSpeed")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel16
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "sources") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                                          ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                         'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                          ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                          ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                        ('GHC.Base.Just
                                                                                                                                                                                           "sources"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "sources")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel29
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "speed") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                        ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                        ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                        ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                                                         "speed"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "speed")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel54
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "start_time") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                             ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                             ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                             ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                              "start_time"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "start_time")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$fFromJSONTrip_$s$fSelectorMetaMetaSel1
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "tripInfo") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                           ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                            "tripInfo"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "tripInfo")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel24
"SPEC/Datas $fSelectorMetaMetaSel @ ('Just
                                      "trips") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                        ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                        ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                        ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                                                         "trips"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "trips")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Datas.$s$fSelectorMetaMetaSel8
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "aveLocation") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                  ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                  ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                  ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                                   "aveLocation"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "aveLocation")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "aveSpeed") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                "aveSpeed"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "aveSpeed")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName3
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "coords") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                                             ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                             ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                             ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                                              "coords"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "coords")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$fFromJSONTrip_$s$fSelectorMetaMetaSel_$cselName2
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "dataPoints") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                 ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                 ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                 ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                                  "dataPoints"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "dataPoints")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "dist") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                                           ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                           ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                           ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                                            "dist"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "dist")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName10
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "end_time") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                "end_time"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "end_time")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$fFromJSONTrip_$s$fSelectorMetaMetaSel_$cselName
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "extremes") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                "extremes"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "extremes")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName8
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "index") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                            ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                            ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                            ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                          ('GHC.Base.Just
                                                                                                                                                                                                             "index"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "index")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName9
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "lat") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                                                          ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                         'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                          ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                          ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                        ('GHC.Base.Just
                                                                                                                                                                                                           "lat"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "lat")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName13
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "lng") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                                                          ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                         'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                          ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                          ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                        ('GHC.Base.Just
                                                                                                                                                                                                           "lng"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "lng")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName11
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "maxSpeed") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                "maxSpeed"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "maxSpeed")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName5
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "minSpeed") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                "minSpeed"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "minSpeed")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName4
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "sources") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                                              ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                              ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                              ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                                               "sources"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "sources")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName7
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "speed") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                            ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                            ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                            ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                          ('GHC.Base.Just
                                                                                                                                                                                                             "speed"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "speed")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName12
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "start_time") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                 ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                 ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                 ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                                  "start_time"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "start_time")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$fFromJSONTrip_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "tripInfo") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                "tripInfo"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "tripInfo")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName6
"SPEC/Datas $fSelectorMetaMetaSel_$cselName @ ('Just
                                                "trips") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                            ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                            ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                            ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                          ('GHC.Base.Just
                                                                                                                                                                                                             "trips"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "trips")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Datas.$s$fSelectorMetaMetaSel_$s$fSelectorMetaMetaSel_$cselName2
"SPEC/Datas $fShow(,) @ Double @ Double" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                       GHC.Types.Double)
                                                         ($dShow :: GHC.Show.Show GHC.Types.Double)
  GHC.Show.$fShow(,) @ GHC.Types.Double
                     @ GHC.Types.Double
                     $dShow
                     $dShow1
  = Datas.$s$fShow(,)2
"SPEC/Datas $fShow(,) @ Int @ Double" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                    GHC.Types.Double)
                                                      ($dShow :: GHC.Show.Show GHC.Types.Int)
  GHC.Show.$fShow(,) @ GHC.Types.Int
                     @ GHC.Types.Double
                     $dShow
                     $dShow1
  = Datas.$s$fShow(,)1
"SPEC/Datas $fShow(,) @ Int @ Int" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                 GHC.Types.Int)
                                                   ($dShow :: GHC.Show.Show GHC.Types.Int)
  GHC.Show.$fShow(,) @ GHC.Types.Int @ GHC.Types.Int $dShow $dShow1
  = Datas.$s$fShow(,)
"SPEC/Datas $fShow(,)_$cshow @ Double @ Double" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                              GHC.Types.Double)
                                                                ($dShow :: GHC.Show.Show
                                                                             GHC.Types.Double)
  GHC.Show.$fShow(,)_$cshow @ GHC.Types.Double
                            @ GHC.Types.Double
                            $dShow
                            $dShow1
  = Datas.$s$fShow(,)_$s$fShow(,)_$cshow2
"SPEC/Datas $fShow(,)_$cshow @ Int @ Double" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                           GHC.Types.Double)
                                                             ($dShow :: GHC.Show.Show GHC.Types.Int)
  GHC.Show.$fShow(,)_$cshow @ GHC.Types.Int
                            @ GHC.Types.Double
                            $dShow
                            $dShow1
  = Datas.$s$fShow(,)_$s$fShow(,)_$cshow1
"SPEC/Datas $fShow(,)_$cshow @ Int @ Int" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                        GHC.Types.Int)
                                                          ($dShow :: GHC.Show.Show GHC.Types.Int)
  GHC.Show.$fShow(,)_$cshow @ GHC.Types.Int
                            @ GHC.Types.Int
                            $dShow
                            $dShow1
  = Datas.$s$fShow(,)_$s$fShow(,)_$cshow
"SPEC/Datas $fShow(,)_$cshowList @ Double @ Double" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                  GHC.Types.Double)
                                                                    ($dShow :: GHC.Show.Show
                                                                                 GHC.Types.Double)
  GHC.Show.$fShow(,)_$cshowList @ GHC.Types.Double
                                @ GHC.Types.Double
                                $dShow
                                $dShow1
  = Datas.$s$fShow(,)_$s$fShow(,)_$cshowList2
"SPEC/Datas $fShow(,)_$cshowList @ Int @ Double" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                               GHC.Types.Double)
                                                                 ($dShow :: GHC.Show.Show
                                                                              GHC.Types.Int)
  GHC.Show.$fShow(,)_$cshowList @ GHC.Types.Int
                                @ GHC.Types.Double
                                $dShow
                                $dShow1
  = Datas.$s$fShow(,)_$s$fShow(,)_$cshowList1
"SPEC/Datas $fShow(,)_$cshowList @ Int @ Int" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                            GHC.Types.Int)
                                                              ($dShow :: GHC.Show.Show
                                                                           GHC.Types.Int)
  GHC.Show.$fShow(,)_$cshowList @ GHC.Types.Int
                                @ GHC.Types.Int
                                $dShow
                                $dShow1
  = Datas.$s$fShow(,)_$s$fShow(,)_$cshowList
"SPEC/Datas $fToJSON(,) @ Double @ Double" [ALWAYS] forall ($dToJSON1 :: Data.Aeson.Types.ToJSON.ToJSON
                                                                           GHC.Types.Double)
                                                           ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                          GHC.Types.Double)
  Data.Aeson.Types.ToJSON.$fToJSON(,) @ GHC.Types.Double
                                      @ GHC.Types.Double
                                      $dToJSON
                                      $dToJSON1
  = Datas.$s$fToJSON(,)2
"SPEC/Datas $fToJSON(,) @ Int @ Double" [ALWAYS] forall ($dToJSON1 :: Data.Aeson.Types.ToJSON.ToJSON
                                                                        GHC.Types.Double)
                                                        ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                       GHC.Types.Int)
  Data.Aeson.Types.ToJSON.$fToJSON(,) @ GHC.Types.Int
                                      @ GHC.Types.Double
                                      $dToJSON
                                      $dToJSON1
  = Datas.$s$fToJSON(,)
"SPEC/Datas $fToJSON(,) @ Int @ Int" [ALWAYS] forall ($dToJSON1 :: Data.Aeson.Types.ToJSON.ToJSON
                                                                     GHC.Types.Int)
                                                     ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                    GHC.Types.Int)
  Data.Aeson.Types.ToJSON.$fToJSON(,) @ GHC.Types.Int
                                      @ GHC.Types.Int
                                      $dToJSON
                                      $dToJSON1
  = Datas.$s$fToJSON(,)1
"SPEC/Datas $fToJSON(,)_$ctoJSON @ Double @ Double" [ALWAYS] forall ($dToJSON1 :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                    GHC.Types.Double)
                                                                    ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                   GHC.Types.Double)
  Data.Aeson.Types.ToJSON.$fToJSON(,)_$ctoJSON @ GHC.Types.Double
                                               @ GHC.Types.Double
                                               $dToJSON
                                               $dToJSON1
  = Datas.$s$fToJSON(,)_$ctoJSON2
"SPEC/Datas $fToJSON(,)_$ctoJSON @ Int @ Double" [ALWAYS] forall ($dToJSON1 :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                 GHC.Types.Double)
                                                                 ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                GHC.Types.Int)
  Data.Aeson.Types.ToJSON.$fToJSON(,)_$ctoJSON @ GHC.Types.Int
                                               @ GHC.Types.Double
                                               $dToJSON
                                               $dToJSON1
  = Datas.$s$fToJSON(,)_$ctoJSON
"SPEC/Datas $fToJSON(,)_$ctoJSON @ Int @ Int" [ALWAYS] forall ($dToJSON1 :: Data.Aeson.Types.ToJSON.ToJSON
                                                                              GHC.Types.Int)
                                                              ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                             GHC.Types.Int)
  Data.Aeson.Types.ToJSON.$fToJSON(,)_$ctoJSON @ GHC.Types.Int
                                               @ GHC.Types.Int
                                               $dToJSON
                                               $dToJSON1
  = Datas.$s$fToJSON(,)_$ctoJSON1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

